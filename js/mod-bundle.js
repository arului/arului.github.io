/*! For license information please see mod-bundle.js.LICENSE.txt */
!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/",n(n.s=363)}([function(t,e,n){"use strict";t.exports=n(335)},function(t,e,n){var i=n(3),r=n(9),a=n(19),o=n(14),s=n(22),l=function(t,e,n){var c,u,h,f,d=t&l.F,p=t&l.G,g=t&l.S,m=t&l.P,v=t&l.B,x=p?i:g?i[e]||(i[e]={}):(i[e]||{}).prototype,b=p?r:r[e]||(r[e]={}),y=b.prototype||(b.prototype={});for(c in p&&(n=e),n)h=((u=!d&&x&&void 0!==x[c])?x:n)[c],f=v&&u?s(h,i):m&&"function"==typeof h?s(Function.call,h):h,x&&o(x,c,h,t&l.U),b[c]!=h&&a(b,c,f),m&&y[c]!=h&&(y[c]=h)};i.core=r,l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,t.exports=l},function(t,e,n){t.exports=n(339)()},function(t,e){var n=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,n){var i=n(6);t.exports=function(t){if(!i(t))throw TypeError(t+" is not an object!");return t}},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e,n){var i=n(53)("wks"),r=n(34),a=n(3).Symbol,o="function"==typeof a;(t.exports=function(t){return i[t]||(i[t]=o&&a[t]||(o?a:r)("Symbol."+t))}).store=i},function(t,e,n){var i=n(24),r=Math.min;t.exports=function(t){return t>0?r(i(t),9007199254740991):0}},function(t,e){var n=t.exports={version:"2.6.11"};"number"==typeof __e&&(__e=n)},function(t,e,n){t.exports=!n(4)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(t,e,n){var i=n(5),r=n(98),a=n(31),o=Object.defineProperty;e.f=n(10)?Object.defineProperty:function(t,e,n){if(i(t),e=a(e,!0),i(n),r)try{return o(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e,n){"use strict";t.exports=function(t,e,n,i,r,a,o,s){if(!t){var l;if(void 0===e)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,i,r,a,o,s],u=0;(l=new Error(e.replace(/%s/g,(function(){return c[u++]})))).name="Invariant Violation"}throw l.framesToPop=1,l}}},function(t,e,n){var i=n(29);t.exports=function(t){return Object(i(t))}},function(t,e,n){var i=n(3),r=n(19),a=n(18),o=n(34)("src"),s=n(153),l=(""+s).split("toString");n(9).inspectSource=function(t){return s.call(t)},(t.exports=function(t,e,n,s){var c="function"==typeof n;c&&(a(n,"name")||r(n,"name",e)),t[e]!==n&&(c&&(a(n,o)||r(n,o,t[e]?""+t[e]:l.join(String(e)))),t===i?t[e]=n:s?t[e]?t[e]=n:r(t,e,n):(delete t[e],r(t,e,n)))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[o]||s.call(this)}))},function(t,e,n){var i=n(1),r=n(4),a=n(29),o=/"/g,s=function(t,e,n,i){var r=String(a(t)),s="<"+e;return""!==n&&(s+=" "+n+'="'+String(i).replace(o,"&quot;")+'"'),s+">"+r+"</"+e+">"};t.exports=function(t,e){var n={};n[t]=e(s),i(i.P+i.F*r((function(){var e=""[t]('"');return e!==e.toLowerCase()||e.split('"').length>3})),"String",n)}},function(t,e,n){"use strict";var i=n(132),r=n(346),a=Object.prototype.toString;function o(t){return"[object Array]"===a.call(t)}function s(t){return null!==t&&"object"==typeof t}function l(t){return"[object Function]"===a.call(t)}function c(t,e){if(null!=t)if("object"!=typeof t&&(t=[t]),o(t))for(var n=0,i=t.length;n<i;n++)e.call(null,t[n],n,t);else for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.call(null,t[r],r,t)}t.exports={isArray:o,isArrayBuffer:function(t){return"[object ArrayBuffer]"===a.call(t)},isBuffer:r,isFormData:function(t){return"undefined"!=typeof FormData&&t instanceof FormData},isArrayBufferView:function(t){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(t):t&&t.buffer&&t.buffer instanceof ArrayBuffer},isString:function(t){return"string"==typeof t},isNumber:function(t){return"number"==typeof t},isObject:s,isUndefined:function(t){return void 0===t},isDate:function(t){return"[object Date]"===a.call(t)},isFile:function(t){return"[object File]"===a.call(t)},isBlob:function(t){return"[object Blob]"===a.call(t)},isFunction:l,isStream:function(t){return s(t)&&l(t.pipe)},isURLSearchParams:function(t){return"undefined"!=typeof URLSearchParams&&t instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:c,merge:function t(){var e={};function n(n,i){"object"==typeof e[i]&&"object"==typeof n?e[i]=t(e[i],n):e[i]=n}for(var i=0,r=arguments.length;i<r;i++)c(arguments[i],n);return e},deepMerge:function t(){var e={};function n(n,i){"object"==typeof e[i]&&"object"==typeof n?e[i]=t(e[i],n):e[i]="object"==typeof n?t({},n):n}for(var i=0,r=arguments.length;i<r;i++)c(arguments[i],n);return e},extend:function(t,e,n){return c(e,(function(e,r){t[r]=n&&"function"==typeof e?i(e,n):e})),t},trim:function(t){return t.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(t,e,n){"use strict";var i=function(){};t.exports=i},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){var i=n(11),r=n(33);t.exports=n(10)?function(t,e,n){return i.f(t,e,r(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var i=n(49),r=n(29);t.exports=function(t){return i(r(t))}},function(t,e,n){"use strict";var i=n(4);t.exports=function(t,e){return!!t&&i((function(){e?t.call(null,(function(){}),1):t.call(null)}))}},function(t,e,n){var i=n(23);t.exports=function(t,e,n){if(i(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,i){return t.call(e,n,i)};case 3:return function(n,i,r){return t.call(e,n,i,r)}}return function(){return t.apply(e,arguments)}}},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e){var n=Math.ceil,i=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?i:n)(t)}},function(t,e,n){var i=n(50),r=n(33),a=n(20),o=n(31),s=n(18),l=n(98),c=Object.getOwnPropertyDescriptor;e.f=n(10)?c:function(t,e){if(t=a(t),e=o(e,!0),l)try{return c(t,e)}catch(t){}if(s(t,e))return r(!i.f.call(t,e),t[e])}},function(t,e,n){var i=n(1),r=n(9),a=n(4);t.exports=function(t,e){var n=(r.Object||{})[t]||Object[t],o={};o[t]=e(n),i(i.S+i.F*a((function(){n(1)})),"Object",o)}},function(t,e,n){var i=n(22),r=n(49),a=n(13),o=n(8),s=n(114);t.exports=function(t,e){var n=1==t,l=2==t,c=3==t,u=4==t,h=6==t,f=5==t||h,d=e||s;return function(e,s,p){for(var g,m,v=a(e),x=r(v),b=i(s,p,3),y=o(x.length),w=0,k=n?d(e,y):l?d(e,0):void 0;y>w;w++)if((f||w in x)&&(m=b(g=x[w],w,v),t))if(n)k[w]=m;else if(m)switch(t){case 3:return!0;case 5:return g;case 6:return w;case 2:k.push(g)}else if(u)return!1;return h?-1:c||u?u:k}}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){t.exports=function(t){if(null==t)throw TypeError("Can't call method on  "+t);return t}},function(t,e,n){"use strict";if(n(10)){var i=n(35),r=n(3),a=n(4),o=n(1),s=n(64),l=n(90),c=n(22),u=n(47),h=n(33),f=n(19),d=n(48),p=n(24),g=n(8),m=n(125),v=n(37),x=n(31),b=n(18),y=n(51),w=n(6),k=n(13),S=n(82),C=n(38),A=n(40),E=n(39).f,P=n(84),T=n(34),O=n(7),L=n(27),M=n(54),_=n(52),I=n(86),N=n(45),R=n(57),z=n(46),F=n(85),D=n(116),X=n(11),Y=n(25),j=X.f,W=Y.f,H=r.RangeError,B=r.TypeError,V=r.Uint8Array,U=Array.prototype,G=l.ArrayBuffer,q=l.DataView,$=L(0),Z=L(2),K=L(3),Q=L(4),J=L(5),tt=L(6),et=M(!0),nt=M(!1),it=I.values,rt=I.keys,at=I.entries,ot=U.lastIndexOf,st=U.reduce,lt=U.reduceRight,ct=U.join,ut=U.sort,ht=U.slice,ft=U.toString,dt=U.toLocaleString,pt=O("iterator"),gt=O("toStringTag"),mt=T("typed_constructor"),vt=T("def_constructor"),xt=s.CONSTR,bt=s.TYPED,yt=s.VIEW,wt=L(1,(function(t,e){return Et(_(t,t[vt]),e)})),kt=a((function(){return 1===new V(new Uint16Array([1]).buffer)[0]})),St=!!V&&!!V.prototype.set&&a((function(){new V(1).set({})})),Ct=function(t,e){var n=p(t);if(n<0||n%e)throw H("Wrong offset!");return n},At=function(t){if(w(t)&&bt in t)return t;throw B(t+" is not a typed array!")},Et=function(t,e){if(!(w(t)&&mt in t))throw B("It is not a typed array constructor!");return new t(e)},Pt=function(t,e){return Tt(_(t,t[vt]),e)},Tt=function(t,e){for(var n=0,i=e.length,r=Et(t,i);i>n;)r[n]=e[n++];return r},Ot=function(t,e,n){j(t,e,{get:function(){return this._d[n]}})},Lt=function(t){var e,n,i,r,a,o,s=k(t),l=arguments.length,u=l>1?arguments[1]:void 0,h=void 0!==u,f=P(s);if(null!=f&&!S(f)){for(o=f.call(s),i=[],e=0;!(a=o.next()).done;e++)i.push(a.value);s=i}for(h&&l>2&&(u=c(u,arguments[2],2)),e=0,n=g(s.length),r=Et(this,n);n>e;e++)r[e]=h?u(s[e],e):s[e];return r},Mt=function(){for(var t=0,e=arguments.length,n=Et(this,e);e>t;)n[t]=arguments[t++];return n},_t=!!V&&a((function(){dt.call(new V(1))})),It=function(){return dt.apply(_t?ht.call(At(this)):At(this),arguments)},Nt={copyWithin:function(t,e){return D.call(At(this),t,e,arguments.length>2?arguments[2]:void 0)},every:function(t){return Q(At(this),t,arguments.length>1?arguments[1]:void 0)},fill:function(t){return F.apply(At(this),arguments)},filter:function(t){return Pt(this,Z(At(this),t,arguments.length>1?arguments[1]:void 0))},find:function(t){return J(At(this),t,arguments.length>1?arguments[1]:void 0)},findIndex:function(t){return tt(At(this),t,arguments.length>1?arguments[1]:void 0)},forEach:function(t){$(At(this),t,arguments.length>1?arguments[1]:void 0)},indexOf:function(t){return nt(At(this),t,arguments.length>1?arguments[1]:void 0)},includes:function(t){return et(At(this),t,arguments.length>1?arguments[1]:void 0)},join:function(t){return ct.apply(At(this),arguments)},lastIndexOf:function(t){return ot.apply(At(this),arguments)},map:function(t){return wt(At(this),t,arguments.length>1?arguments[1]:void 0)},reduce:function(t){return st.apply(At(this),arguments)},reduceRight:function(t){return lt.apply(At(this),arguments)},reverse:function(){for(var t,e=At(this).length,n=Math.floor(e/2),i=0;i<n;)t=this[i],this[i++]=this[--e],this[e]=t;return this},some:function(t){return K(At(this),t,arguments.length>1?arguments[1]:void 0)},sort:function(t){return ut.call(At(this),t)},subarray:function(t,e){var n=At(this),i=n.length,r=v(t,i);return new(_(n,n[vt]))(n.buffer,n.byteOffset+r*n.BYTES_PER_ELEMENT,g((void 0===e?i:v(e,i))-r))}},Rt=function(t,e){return Pt(this,ht.call(At(this),t,e))},zt=function(t){At(this);var e=Ct(arguments[1],1),n=this.length,i=k(t),r=g(i.length),a=0;if(r+e>n)throw H("Wrong length!");for(;a<r;)this[e+a]=i[a++]},Ft={entries:function(){return at.call(At(this))},keys:function(){return rt.call(At(this))},values:function(){return it.call(At(this))}},Dt=function(t,e){return w(t)&&t[bt]&&"symbol"!=typeof e&&e in t&&String(+e)==String(e)},Xt=function(t,e){return Dt(t,e=x(e,!0))?h(2,t[e]):W(t,e)},Yt=function(t,e,n){return!(Dt(t,e=x(e,!0))&&w(n)&&b(n,"value"))||b(n,"get")||b(n,"set")||n.configurable||b(n,"writable")&&!n.writable||b(n,"enumerable")&&!n.enumerable?j(t,e,n):(t[e]=n.value,t)};xt||(Y.f=Xt,X.f=Yt),o(o.S+o.F*!xt,"Object",{getOwnPropertyDescriptor:Xt,defineProperty:Yt}),a((function(){ft.call({})}))&&(ft=dt=function(){return ct.call(this)});var jt=d({},Nt);d(jt,Ft),f(jt,pt,Ft.values),d(jt,{slice:Rt,set:zt,constructor:function(){},toString:ft,toLocaleString:It}),Ot(jt,"buffer","b"),Ot(jt,"byteOffset","o"),Ot(jt,"byteLength","l"),Ot(jt,"length","e"),j(jt,gt,{get:function(){return this[bt]}}),t.exports=function(t,e,n,l){var c=t+((l=!!l)?"Clamped":"")+"Array",h="get"+t,d="set"+t,p=r[c],v=p||{},x=p&&A(p),b=!p||!s.ABV,k={},S=p&&p.prototype,P=function(t,n){j(t,n,{get:function(){return function(t,n){var i=t._d;return i.v[h](n*e+i.o,kt)}(this,n)},set:function(t){return function(t,n,i){var r=t._d;l&&(i=(i=Math.round(i))<0?0:i>255?255:255&i),r.v[d](n*e+r.o,i,kt)}(this,n,t)},enumerable:!0})};b?(p=n((function(t,n,i,r){u(t,p,c,"_d");var a,o,s,l,h=0,d=0;if(w(n)){if(!(n instanceof G||"ArrayBuffer"==(l=y(n))||"SharedArrayBuffer"==l))return bt in n?Tt(p,n):Lt.call(p,n);a=n,d=Ct(i,e);var v=n.byteLength;if(void 0===r){if(v%e)throw H("Wrong length!");if((o=v-d)<0)throw H("Wrong length!")}else if((o=g(r)*e)+d>v)throw H("Wrong length!");s=o/e}else s=m(n),a=new G(o=s*e);for(f(t,"_d",{b:a,o:d,l:o,e:s,v:new q(a)});h<s;)P(t,h++)})),S=p.prototype=C(jt),f(S,"constructor",p)):a((function(){p(1)}))&&a((function(){new p(-1)}))&&R((function(t){new p,new p(null),new p(1.5),new p(t)}),!0)||(p=n((function(t,n,i,r){var a;return u(t,p,c),w(n)?n instanceof G||"ArrayBuffer"==(a=y(n))||"SharedArrayBuffer"==a?void 0!==r?new v(n,Ct(i,e),r):void 0!==i?new v(n,Ct(i,e)):new v(n):bt in n?Tt(p,n):Lt.call(p,n):new v(m(n))})),$(x!==Function.prototype?E(v).concat(E(x)):E(v),(function(t){t in p||f(p,t,v[t])})),p.prototype=S,i||(S.constructor=p));var T=S[pt],O=!!T&&("values"==T.name||null==T.name),L=Ft.values;f(p,mt,!0),f(S,bt,c),f(S,yt,!0),f(S,vt,p),(l?new p(1)[gt]==c:gt in S)||j(S,gt,{get:function(){return c}}),k[c]=p,o(o.G+o.W+o.F*(p!=v),k),o(o.S,c,{BYTES_PER_ELEMENT:e}),o(o.S+o.F*a((function(){v.of.call(p,1)})),c,{from:Lt,of:Mt}),"BYTES_PER_ELEMENT"in S||f(S,"BYTES_PER_ELEMENT",e),o(o.P,c,Nt),z(c),o(o.P+o.F*St,c,{set:zt}),o(o.P+o.F*!O,c,Ft),i||S.toString==ft||(S.toString=ft),o(o.P+o.F*a((function(){new p(1).slice()})),c,{slice:Rt}),o(o.P+o.F*(a((function(){return[1,2].toLocaleString()!=new p([1,2]).toLocaleString()}))||!a((function(){S.toLocaleString.call([1,2])}))),c,{toLocaleString:It}),N[c]=O?T:L,i||O||f(S,pt,L)}}else t.exports=function(){}},function(t,e,n){var i=n(6);t.exports=function(t,e){if(!i(t))return t;var n,r;if(e&&"function"==typeof(n=t.toString)&&!i(r=n.call(t)))return r;if("function"==typeof(n=t.valueOf)&&!i(r=n.call(t)))return r;if(!e&&"function"==typeof(n=t.toString)&&!i(r=n.call(t)))return r;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){var i=n(34)("meta"),r=n(6),a=n(18),o=n(11).f,s=0,l=Object.isExtensible||function(){return!0},c=!n(4)((function(){return l(Object.preventExtensions({}))})),u=function(t){o(t,i,{value:{i:"O"+ ++s,w:{}}})},h=t.exports={KEY:i,NEED:!1,fastKey:function(t,e){if(!r(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!a(t,i)){if(!l(t))return"F";if(!e)return"E";u(t)}return t[i].i},getWeak:function(t,e){if(!a(t,i)){if(!l(t))return!0;if(!e)return!1;u(t)}return t[i].w},onFreeze:function(t){return c&&h.NEED&&l(t)&&!a(t,i)&&u(t),t}}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e){var n=0,i=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++n+i).toString(36))}},function(t,e){t.exports=!1},function(t,e,n){var i=n(100),r=n(69);t.exports=Object.keys||function(t){return i(t,r)}},function(t,e,n){var i=n(24),r=Math.max,a=Math.min;t.exports=function(t,e){return(t=i(t))<0?r(t+e,0):a(t,e)}},function(t,e,n){var i=n(5),r=n(101),a=n(69),o=n(68)("IE_PROTO"),s=function(){},l=function(){var t,e=n(66)("iframe"),i=a.length;for(e.style.display="none",n(70).appendChild(e),e.src="javascript:",(t=e.contentWindow.document).open(),t.write("<script>document.F=Object<\/script>"),t.close(),l=t.F;i--;)delete l.prototype[a[i]];return l()};t.exports=Object.create||function(t,e){var n;return null!==t?(s.prototype=i(t),n=new s,s.prototype=null,n[o]=t):n=l(),void 0===e?n:r(n,e)}},function(t,e,n){var i=n(100),r=n(69).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return i(t,r)}},function(t,e,n){var i=n(18),r=n(13),a=n(68)("IE_PROTO"),o=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=r(t),i(t,a)?t[a]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?o:null}},function(t,e,n){var i=n(7)("unscopables"),r=Array.prototype;null==r[i]&&n(19)(r,i,{}),t.exports=function(t){r[i][t]=!0}},function(t,e,n){var i=n(6);t.exports=function(t,e){if(!i(t)||t._t!==e)throw TypeError("Incompatible receiver, "+e+" required!");return t}},function(t,e,n){var i=n(11).f,r=n(18),a=n(7)("toStringTag");t.exports=function(t,e,n){t&&!r(t=n?t:t.prototype,a)&&i(t,a,{configurable:!0,value:e})}},function(t,e,n){var i=n(1),r=n(29),a=n(4),o=n(72),s="["+o+"]",l=RegExp("^"+s+s+"*"),c=RegExp(s+s+"*$"),u=function(t,e,n){var r={},s=a((function(){return!!o[t]()||"​"!="​"[t]()})),l=r[t]=s?e(h):o[t];n&&(r[n]=l),i(i.P+i.F*s,"String",r)},h=u.trim=function(t,e){return t=String(r(t)),1&e&&(t=t.replace(l,"")),2&e&&(t=t.replace(c,"")),t};t.exports=u},function(t,e){t.exports={}},function(t,e,n){"use strict";var i=n(3),r=n(11),a=n(10),o=n(7)("species");t.exports=function(t){var e=i[t];a&&e&&!e[o]&&r.f(e,o,{configurable:!0,get:function(){return this}})}},function(t,e){t.exports=function(t,e,n,i){if(!(t instanceof e)||void 0!==i&&i in t)throw TypeError(n+": incorrect invocation!");return t}},function(t,e,n){var i=n(14);t.exports=function(t,e,n){for(var r in e)i(t,r,e[r],n);return t}},function(t,e,n){var i=n(28);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==i(t)?t.split(""):Object(t)}},function(t,e){e.f={}.propertyIsEnumerable},function(t,e,n){var i=n(28),r=n(7)("toStringTag"),a="Arguments"==i(function(){return arguments}());t.exports=function(t){var e,n,o;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),r))?n:a?i(e):"Object"==(o=i(e))&&"function"==typeof e.callee?"Arguments":o}},function(t,e,n){var i=n(5),r=n(23),a=n(7)("species");t.exports=function(t,e){var n,o=i(t).constructor;return void 0===o||null==(n=i(o)[a])?e:r(n)}},function(t,e,n){var i=n(9),r=n(3),a=r["__core-js_shared__"]||(r["__core-js_shared__"]={});(t.exports=function(t,e){return a[t]||(a[t]=void 0!==e?e:{})})("versions",[]).push({version:i.version,mode:n(35)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(t,e,n){var i=n(20),r=n(8),a=n(37);t.exports=function(t){return function(e,n,o){var s,l=i(e),c=r(l.length),u=a(o,c);if(t&&n!=n){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((t||u in l)&&l[u]===n)return t||u||0;return!t&&-1}}},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e,n){var i=n(28);t.exports=Array.isArray||function(t){return"Array"==i(t)}},function(t,e,n){var i=n(7)("iterator"),r=!1;try{var a=[7][i]();a.return=function(){r=!0},Array.from(a,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!r)return!1;var n=!1;try{var a=[7],o=a[i]();o.next=function(){return{done:n=!0}},a[i]=function(){return o},t(a)}catch(t){}return n}},function(t,e,n){"use strict";var i=n(5);t.exports=function(){var t=i(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},function(t,e,n){"use strict";var i=n(51),r=RegExp.prototype.exec;t.exports=function(t,e){var n=t.exec;if("function"==typeof n){var a=n.call(t,e);if("object"!=typeof a)throw new TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==i(t))throw new TypeError("RegExp#exec called on incompatible receiver");return r.call(t,e)}},function(t,e,n){"use strict";n(118);var i=n(14),r=n(19),a=n(4),o=n(29),s=n(7),l=n(87),c=s("species"),u=!a((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")})),h=function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n="ab".split(t);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();t.exports=function(t,e,n){var f=s(t),d=!a((function(){var e={};return e[f]=function(){return 7},7!=""[t](e)})),p=d?!a((function(){var e=!1,n=/a/;return n.exec=function(){return e=!0,null},"split"===t&&(n.constructor={},n.constructor[c]=function(){return n}),n[f](""),!e})):void 0;if(!d||!p||"replace"===t&&!u||"split"===t&&!h){var g=/./[f],m=n(o,f,""[t],(function(t,e,n,i,r){return e.exec===l?d&&!r?{done:!0,value:g.call(e,n,i)}:{done:!0,value:t.call(n,e,i)}:{done:!1}})),v=m[0],x=m[1];i(String.prototype,t,v),r(RegExp.prototype,f,2==e?function(t,e){return x.call(t,this,e)}:function(t){return x.call(t,this)})}}},function(t,e,n){var i=n(22),r=n(113),a=n(82),o=n(5),s=n(8),l=n(84),c={},u={};(e=t.exports=function(t,e,n,h,f){var d,p,g,m,v=f?function(){return t}:l(t),x=i(n,h,e?2:1),b=0;if("function"!=typeof v)throw TypeError(t+" is not iterable!");if(a(v)){for(d=s(t.length);d>b;b++)if((m=e?x(o(p=t[b])[0],p[1]):x(t[b]))===c||m===u)return m}else for(g=v.call(t);!(p=g.next()).done;)if((m=r(g,x,p.value,e))===c||m===u)return m}).BREAK=c,e.RETURN=u},function(t,e,n){var i=n(3).navigator;t.exports=i&&i.userAgent||""},function(t,e,n){"use strict";var i=n(3),r=n(1),a=n(14),o=n(48),s=n(32),l=n(61),c=n(47),u=n(6),h=n(4),f=n(57),d=n(43),p=n(73);t.exports=function(t,e,n,g,m,v){var x=i[t],b=x,y=m?"set":"add",w=b&&b.prototype,k={},S=function(t){var e=w[t];a(w,t,"delete"==t||"has"==t?function(t){return!(v&&!u(t))&&e.call(this,0===t?0:t)}:"get"==t?function(t){return v&&!u(t)?void 0:e.call(this,0===t?0:t)}:"add"==t?function(t){return e.call(this,0===t?0:t),this}:function(t,n){return e.call(this,0===t?0:t,n),this})};if("function"==typeof b&&(v||w.forEach&&!h((function(){(new b).entries().next()})))){var C=new b,A=C[y](v?{}:-0,1)!=C,E=h((function(){C.has(1)})),P=f((function(t){new b(t)})),T=!v&&h((function(){for(var t=new b,e=5;e--;)t[y](e,e);return!t.has(-0)}));P||((b=e((function(e,n){c(e,b,t);var i=p(new x,e,b);return null!=n&&l(n,m,i[y],i),i}))).prototype=w,w.constructor=b),(E||T)&&(S("delete"),S("has"),m&&S("get")),(T||A)&&S(y),v&&w.clear&&delete w.clear}else b=g.getConstructor(e,t,m,y),o(b.prototype,n),s.NEED=!0;return d(b,t),k[t]=b,r(r.G+r.W+r.F*(b!=x),k),v||g.setStrong(b,t,m),b}},function(t,e,n){for(var i,r=n(3),a=n(19),o=n(34),s=o("typed_array"),l=o("view"),c=!(!r.ArrayBuffer||!r.DataView),u=c,h=0,f="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");h<9;)(i=r[f[h++]])?(a(i.prototype,s,!0),a(i.prototype,l,!0)):u=!1;t.exports={ABV:c,CONSTR:u,TYPED:s,VIEW:l}},function(t,e,n){"use strict";e.__esModule=!0;var i,r=n(95),a=(i=r)&&i.__esModule?i:{default:i};var o={},s=0,l=function(t,e){var n=""+e.end+e.strict+e.sensitive,i=o[n]||(o[n]={});if(i[t])return i[t];var r=[],l={re:(0,a.default)(t,r,e),keys:r};return s<1e4&&(i[t]=l,s++),l};e.default=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof e&&(e={path:e});var i=e,r=i.path,a=i.exact,o=void 0!==a&&a,s=i.strict,c=void 0!==s&&s,u=i.sensitive,h=void 0!==u&&u;if(null==r)return n;var f=l(r,{end:o,strict:c,sensitive:h}),d=f.re,p=f.keys,g=d.exec(t);if(!g)return null;var m=g[0],v=g.slice(1),x=t===m;return o&&!x?null:{path:r,url:"/"===r&&""===m?"/":m,isExact:x,params:p.reduce((function(t,e,n){return t[e.name]=v[n],t}),{})}}},function(t,e,n){var i=n(6),r=n(3).document,a=i(r)&&i(r.createElement);t.exports=function(t){return a?r.createElement(t):{}}},function(t,e,n){e.f=n(7)},function(t,e,n){var i=n(53)("keys"),r=n(34);t.exports=function(t){return i[t]||(i[t]=r(t))}},function(t,e){t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(t,e,n){var i=n(3).document;t.exports=i&&i.documentElement},function(t,e,n){var i=n(6),r=n(5),a=function(t,e){if(r(t),!i(e)&&null!==e)throw TypeError(e+": can't set as prototype!")};t.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(t,e,i){try{(i=n(22)(Function.call,n(25).f(Object.prototype,"__proto__").set,2))(t,[]),e=!(t instanceof Array)}catch(t){e=!0}return function(t,n){return a(t,n),e?t.__proto__=n:i(t,n),t}}({},!1):void 0),check:a}},function(t,e){t.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(t,e,n){var i=n(6),r=n(71).set;t.exports=function(t,e,n){var a,o=e.constructor;return o!==n&&"function"==typeof o&&(a=o.prototype)!==n.prototype&&i(a)&&r&&r(t,a),t}},function(t,e,n){"use strict";var i=n(24),r=n(29);t.exports=function(t){var e=String(r(this)),n="",a=i(t);if(a<0||a==1/0)throw RangeError("Count can't be negative");for(;a>0;(a>>>=1)&&(e+=e))1&a&&(n+=e);return n}},function(t,e){t.exports=Math.sign||function(t){return 0==(t=+t)||t!=t?t:t<0?-1:1}},function(t,e){var n=Math.expm1;t.exports=!n||n(10)>22025.465794806718||n(10)<22025.465794806718||-2e-17!=n(-2e-17)?function(t){return 0==(t=+t)?t:t>-1e-6&&t<1e-6?t+t*t/2:Math.exp(t)-1}:n},function(t,e,n){var i=n(24),r=n(29);t.exports=function(t){return function(e,n){var a,o,s=String(r(e)),l=i(n),c=s.length;return l<0||l>=c?t?"":void 0:(a=s.charCodeAt(l))<55296||a>56319||l+1===c||(o=s.charCodeAt(l+1))<56320||o>57343?t?s.charAt(l):a:t?s.slice(l,l+2):o-56320+(a-55296<<10)+65536}}},function(t,e,n){"use strict";var i=n(35),r=n(1),a=n(14),o=n(19),s=n(45),l=n(112),c=n(43),u=n(40),h=n(7)("iterator"),f=!([].keys&&"next"in[].keys()),d=function(){return this};t.exports=function(t,e,n,p,g,m,v){l(n,e,p);var x,b,y,w=function(t){if(!f&&t in A)return A[t];switch(t){case"keys":case"values":return function(){return new n(this,t)}}return function(){return new n(this,t)}},k=e+" Iterator",S="values"==g,C=!1,A=t.prototype,E=A[h]||A["@@iterator"]||g&&A[g],P=E||w(g),T=g?S?w("entries"):P:void 0,O="Array"==e&&A.entries||E;if(O&&(y=u(O.call(new t)))!==Object.prototype&&y.next&&(c(y,k,!0),i||"function"==typeof y[h]||o(y,h,d)),S&&E&&"values"!==E.name&&(C=!0,P=function(){return E.call(this)}),i&&!v||!f&&!C&&A[h]||o(A,h,P),s[e]=P,s[k]=d,g)if(x={values:S?P:w("values"),keys:m?P:w("keys"),entries:T},v)for(b in x)b in A||a(A,b,x[b]);else r(r.P+r.F*(f||C),e,x);return x}},function(t,e,n){var i=n(80),r=n(29);t.exports=function(t,e,n){if(i(e))throw TypeError("String#"+n+" doesn't accept regex!");return String(r(t))}},function(t,e,n){var i=n(6),r=n(28),a=n(7)("match");t.exports=function(t){var e;return i(t)&&(void 0!==(e=t[a])?!!e:"RegExp"==r(t))}},function(t,e,n){var i=n(7)("match");t.exports=function(t){var e=/./;try{"/./"[t](e)}catch(n){try{return e[i]=!1,!"/./"[t](e)}catch(t){}}return!0}},function(t,e,n){var i=n(45),r=n(7)("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(i.Array===t||a[r]===t)}},function(t,e,n){"use strict";var i=n(11),r=n(33);t.exports=function(t,e,n){e in t?i.f(t,e,r(0,n)):t[e]=n}},function(t,e,n){var i=n(51),r=n(7)("iterator"),a=n(45);t.exports=n(9).getIteratorMethod=function(t){if(null!=t)return t[r]||t["@@iterator"]||a[i(t)]}},function(t,e,n){"use strict";var i=n(13),r=n(37),a=n(8);t.exports=function(t){for(var e=i(this),n=a(e.length),o=arguments.length,s=r(o>1?arguments[1]:void 0,n),l=o>2?arguments[2]:void 0,c=void 0===l?n:r(l,n);c>s;)e[s++]=t;return e}},function(t,e,n){"use strict";var i=n(41),r=n(117),a=n(45),o=n(20);t.exports=n(78)(Array,"Array",(function(t,e){this._t=o(t),this._i=0,this._k=e}),(function(){var t=this._t,e=this._k,n=this._i++;return!t||n>=t.length?(this._t=void 0,r(1)):r(0,"keys"==e?n:"values"==e?t[n]:[n,t[n]])}),"values"),a.Arguments=a.Array,i("keys"),i("values"),i("entries")},function(t,e,n){"use strict";var i,r,a=n(58),o=RegExp.prototype.exec,s=String.prototype.replace,l=o,c=(i=/a/,r=/b*/g,o.call(i,"a"),o.call(r,"a"),0!==i.lastIndex||0!==r.lastIndex),u=void 0!==/()??/.exec("")[1];(c||u)&&(l=function(t){var e,n,i,r,l=this;return u&&(n=new RegExp("^"+l.source+"$(?!\\s)",a.call(l))),c&&(e=l.lastIndex),i=o.call(l,t),c&&i&&(l.lastIndex=l.global?i.index+i[0].length:e),u&&i&&i.length>1&&s.call(i[0],n,(function(){for(r=1;r<arguments.length-2;r++)void 0===arguments[r]&&(i[r]=void 0)})),i}),t.exports=l},function(t,e,n){"use strict";var i=n(77)(!0);t.exports=function(t,e,n){return e+(n?i(t,e).length:1)}},function(t,e,n){var i,r,a,o=n(22),s=n(106),l=n(70),c=n(66),u=n(3),h=u.process,f=u.setImmediate,d=u.clearImmediate,p=u.MessageChannel,g=u.Dispatch,m=0,v={},x=function(){var t=+this;if(v.hasOwnProperty(t)){var e=v[t];delete v[t],e()}},b=function(t){x.call(t.data)};f&&d||(f=function(t){for(var e=[],n=1;arguments.length>n;)e.push(arguments[n++]);return v[++m]=function(){s("function"==typeof t?t:Function(t),e)},i(m),m},d=function(t){delete v[t]},"process"==n(28)(h)?i=function(t){h.nextTick(o(x,t,1))}:g&&g.now?i=function(t){g.now(o(x,t,1))}:p?(a=(r=new p).port2,r.port1.onmessage=b,i=o(a.postMessage,a,1)):u.addEventListener&&"function"==typeof postMessage&&!u.importScripts?(i=function(t){u.postMessage(t+"","*")},u.addEventListener("message",b,!1)):i="onreadystatechange"in c("script")?function(t){l.appendChild(c("script")).onreadystatechange=function(){l.removeChild(this),x.call(t)}}:function(t){setTimeout(o(x,t,1),0)}),t.exports={set:f,clear:d}},function(t,e,n){"use strict";var i=n(3),r=n(10),a=n(35),o=n(64),s=n(19),l=n(48),c=n(4),u=n(47),h=n(24),f=n(8),d=n(125),p=n(39).f,g=n(11).f,m=n(85),v=n(43),x=i.ArrayBuffer,b=i.DataView,y=i.Math,w=i.RangeError,k=i.Infinity,S=x,C=y.abs,A=y.pow,E=y.floor,P=y.log,T=y.LN2,O=r?"_b":"buffer",L=r?"_l":"byteLength",M=r?"_o":"byteOffset";function _(t,e,n){var i,r,a,o=new Array(n),s=8*n-e-1,l=(1<<s)-1,c=l>>1,u=23===e?A(2,-24)-A(2,-77):0,h=0,f=t<0||0===t&&1/t<0?1:0;for((t=C(t))!=t||t===k?(r=t!=t?1:0,i=l):(i=E(P(t)/T),t*(a=A(2,-i))<1&&(i--,a*=2),(t+=i+c>=1?u/a:u*A(2,1-c))*a>=2&&(i++,a/=2),i+c>=l?(r=0,i=l):i+c>=1?(r=(t*a-1)*A(2,e),i+=c):(r=t*A(2,c-1)*A(2,e),i=0));e>=8;o[h++]=255&r,r/=256,e-=8);for(i=i<<e|r,s+=e;s>0;o[h++]=255&i,i/=256,s-=8);return o[--h]|=128*f,o}function I(t,e,n){var i,r=8*n-e-1,a=(1<<r)-1,o=a>>1,s=r-7,l=n-1,c=t[l--],u=127&c;for(c>>=7;s>0;u=256*u+t[l],l--,s-=8);for(i=u&(1<<-s)-1,u>>=-s,s+=e;s>0;i=256*i+t[l],l--,s-=8);if(0===u)u=1-o;else{if(u===a)return i?NaN:c?-k:k;i+=A(2,e),u-=o}return(c?-1:1)*i*A(2,u-e)}function N(t){return t[3]<<24|t[2]<<16|t[1]<<8|t[0]}function R(t){return[255&t]}function z(t){return[255&t,t>>8&255]}function F(t){return[255&t,t>>8&255,t>>16&255,t>>24&255]}function D(t){return _(t,52,8)}function X(t){return _(t,23,4)}function Y(t,e,n){g(t.prototype,e,{get:function(){return this[n]}})}function j(t,e,n,i){var r=d(+n);if(r+e>t[L])throw w("Wrong index!");var a=t[O]._b,o=r+t[M],s=a.slice(o,o+e);return i?s:s.reverse()}function W(t,e,n,i,r,a){var o=d(+n);if(o+e>t[L])throw w("Wrong index!");for(var s=t[O]._b,l=o+t[M],c=i(+r),u=0;u<e;u++)s[l+u]=c[a?u:e-u-1]}if(o.ABV){if(!c((function(){x(1)}))||!c((function(){new x(-1)}))||c((function(){return new x,new x(1.5),new x(NaN),"ArrayBuffer"!=x.name}))){for(var H,B=(x=function(t){return u(this,x),new S(d(t))}).prototype=S.prototype,V=p(S),U=0;V.length>U;)(H=V[U++])in x||s(x,H,S[H]);a||(B.constructor=x)}var G=new b(new x(2)),q=b.prototype.setInt8;G.setInt8(0,2147483648),G.setInt8(1,2147483649),!G.getInt8(0)&&G.getInt8(1)||l(b.prototype,{setInt8:function(t,e){q.call(this,t,e<<24>>24)},setUint8:function(t,e){q.call(this,t,e<<24>>24)}},!0)}else x=function(t){u(this,x,"ArrayBuffer");var e=d(t);this._b=m.call(new Array(e),0),this[L]=e},b=function(t,e,n){u(this,b,"DataView"),u(t,x,"DataView");var i=t[L],r=h(e);if(r<0||r>i)throw w("Wrong offset!");if(r+(n=void 0===n?i-r:f(n))>i)throw w("Wrong length!");this[O]=t,this[M]=r,this[L]=n},r&&(Y(x,"byteLength","_l"),Y(b,"buffer","_b"),Y(b,"byteLength","_l"),Y(b,"byteOffset","_o")),l(b.prototype,{getInt8:function(t){return j(this,1,t)[0]<<24>>24},getUint8:function(t){return j(this,1,t)[0]},getInt16:function(t){var e=j(this,2,t,arguments[1]);return(e[1]<<8|e[0])<<16>>16},getUint16:function(t){var e=j(this,2,t,arguments[1]);return e[1]<<8|e[0]},getInt32:function(t){return N(j(this,4,t,arguments[1]))},getUint32:function(t){return N(j(this,4,t,arguments[1]))>>>0},getFloat32:function(t){return I(j(this,4,t,arguments[1]),23,4)},getFloat64:function(t){return I(j(this,8,t,arguments[1]),52,8)},setInt8:function(t,e){W(this,1,t,R,e)},setUint8:function(t,e){W(this,1,t,R,e)},setInt16:function(t,e){W(this,2,t,z,e,arguments[2])},setUint16:function(t,e){W(this,2,t,z,e,arguments[2])},setInt32:function(t,e){W(this,4,t,F,e,arguments[2])},setUint32:function(t,e){W(this,4,t,F,e,arguments[2])},setFloat32:function(t,e){W(this,4,t,X,e,arguments[2])},setFloat64:function(t,e){W(this,8,t,D,e,arguments[2])}});v(x,"ArrayBuffer"),v(b,"DataView"),s(b.prototype,o.VIEW,!0),e.ArrayBuffer=x,e.DataView=b},function(t,e){var n=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e,n){t.exports=!n(130)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(t,e,n){"use strict";t.exports=n(341)},function(t,e,n){var i=n(344);t.exports=d,t.exports.parse=a,t.exports.compile=function(t,e){return s(a(t,e),e)},t.exports.tokensToFunction=s,t.exports.tokensToRegExp=f;var r=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(t,e){for(var n,i=[],a=0,o=0,s="",u=e&&e.delimiter||"/";null!=(n=r.exec(t));){var h=n[0],f=n[1],d=n.index;if(s+=t.slice(o,d),o=d+h.length,f)s+=f[1];else{var p=t[o],g=n[2],m=n[3],v=n[4],x=n[5],b=n[6],y=n[7];s&&(i.push(s),s="");var w=null!=g&&null!=p&&p!==g,k="+"===b||"*"===b,S="?"===b||"*"===b,C=n[2]||u,A=v||x;i.push({name:m||a++,prefix:g||"",delimiter:C,optional:S,repeat:k,partial:w,asterisk:!!y,pattern:A?c(A):y?".*":"[^"+l(C)+"]+?"})}}return o<t.length&&(s+=t.substr(o)),s&&i.push(s),i}function o(t){return encodeURI(t).replace(/[\/?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()}))}function s(t,e){for(var n=new Array(t.length),r=0;r<t.length;r++)"object"==typeof t[r]&&(n[r]=new RegExp("^(?:"+t[r].pattern+")$",h(e)));return function(e,r){for(var a="",s=e||{},l=(r||{}).pretty?o:encodeURIComponent,c=0;c<t.length;c++){var u=t[c];if("string"!=typeof u){var h,f=s[u.name];if(null==f){if(u.optional){u.partial&&(a+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(i(f)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(f)+"`");if(0===f.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var d=0;d<f.length;d++){if(h=l(f[d]),!n[c].test(h))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(h)+"`");a+=(0===d?u.prefix:u.delimiter)+h}}else{if(h=u.asterisk?encodeURI(f).replace(/[?#]/g,(function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})):l(f),!n[c].test(h))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+h+'"');a+=u.prefix+h}}else a+=u}return a}}function l(t){return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(t){return t.replace(/([=!:$\/()])/g,"\\$1")}function u(t,e){return t.keys=e,t}function h(t){return t&&t.sensitive?"":"i"}function f(t,e,n){i(e)||(n=e||n,e=[]);for(var r=(n=n||{}).strict,a=!1!==n.end,o="",s=0;s<t.length;s++){var c=t[s];if("string"==typeof c)o+=l(c);else{var f=l(c.prefix),d="(?:"+c.pattern+")";e.push(c),c.repeat&&(d+="(?:"+f+d+")*"),o+=d=c.optional?c.partial?f+"("+d+")?":"(?:"+f+"("+d+"))?":f+"("+d+")"}}var p=l(n.delimiter||"/"),g=o.slice(-p.length)===p;return r||(o=(g?o.slice(0,-p.length):o)+"(?:"+p+"(?=$))?"),o+=a?"$":r&&g?"":"(?="+p+"|$)",u(new RegExp("^"+o,h(n)),e)}function d(t,e,n){return i(e)||(n=e||n,e=[]),n=n||{},t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var i=0;i<n.length;i++)e.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return u(t,e)}(t,e):i(t)?function(t,e,n){for(var i=[],r=0;r<t.length;r++)i.push(d(t[r],e,n).source);return u(new RegExp("(?:"+i.join("|")+")",h(n)),e)}(t,e,n):function(t,e,n){return f(a(t,n),e,n)}(t,e,n)}},function(t,e,n){"use strict";var i=n(94),r={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},s={};function l(t){return i.isMemo(t)?o:s[t.$$typeof]||r}s[i.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},s[i.Memo]=o;var c=Object.defineProperty,u=Object.getOwnPropertyNames,h=Object.getOwnPropertySymbols,f=Object.getOwnPropertyDescriptor,d=Object.getPrototypeOf,p=Object.prototype;t.exports=function t(e,n,i){if("string"!=typeof n){if(p){var r=d(n);r&&r!==p&&t(e,r,i)}var o=u(n);h&&(o=o.concat(h(n)));for(var s=l(e),g=l(n),m=0;m<o.length;++m){var v=o[m];if(!(a[v]||i&&i[v]||g&&g[v]||s&&s[v])){var x=f(n,v);try{c(e,v,x)}catch(t){}}}}return e}},function(t,e,n){"use strict";(function(t,i){var r,a=n(141);r="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==t?t:i;var o=Object(a.a)(r);e.a=o}).call(this,n(342),n(343)(t))},function(t,e,n){t.exports=!n(10)&&!n(4)((function(){return 7!=Object.defineProperty(n(66)("div"),"a",{get:function(){return 7}}).a}))},function(t,e,n){var i=n(3),r=n(9),a=n(35),o=n(67),s=n(11).f;t.exports=function(t){var e=r.Symbol||(r.Symbol=a?{}:i.Symbol||{});"_"==t.charAt(0)||t in e||s(e,t,{value:o.f(t)})}},function(t,e,n){var i=n(18),r=n(20),a=n(54)(!1),o=n(68)("IE_PROTO");t.exports=function(t,e){var n,s=r(t),l=0,c=[];for(n in s)n!=o&&i(s,n)&&c.push(n);for(;e.length>l;)i(s,n=e[l++])&&(~a(c,n)||c.push(n));return c}},function(t,e,n){var i=n(11),r=n(5),a=n(36);t.exports=n(10)?Object.defineProperties:function(t,e){r(t);for(var n,o=a(e),s=o.length,l=0;s>l;)i.f(t,n=o[l++],e[n]);return t}},function(t,e,n){var i=n(20),r=n(39).f,a={}.toString,o="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return o&&"[object Window]"==a.call(t)?function(t){try{return r(t)}catch(t){return o.slice()}}(t):r(i(t))}},function(t,e,n){"use strict";var i=n(10),r=n(36),a=n(55),o=n(50),s=n(13),l=n(49),c=Object.assign;t.exports=!c||n(4)((function(){var t={},e={},n=Symbol(),i="abcdefghijklmnopqrst";return t[n]=7,i.split("").forEach((function(t){e[t]=t})),7!=c({},t)[n]||Object.keys(c({},e)).join("")!=i}))?function(t,e){for(var n=s(t),c=arguments.length,u=1,h=a.f,f=o.f;c>u;)for(var d,p=l(arguments[u++]),g=h?r(p).concat(h(p)):r(p),m=g.length,v=0;m>v;)d=g[v++],i&&!f.call(p,d)||(n[d]=p[d]);return n}:c},function(t,e){t.exports=Object.is||function(t,e){return t===e?0!==t||1/t==1/e:t!=t&&e!=e}},function(t,e,n){"use strict";var i=n(23),r=n(6),a=n(106),o=[].slice,s={},l=function(t,e,n){if(!(e in s)){for(var i=[],r=0;r<e;r++)i[r]="a["+r+"]";s[e]=Function("F,a","return new F("+i.join(",")+")")}return s[e](t,n)};t.exports=Function.bind||function(t){var e=i(this),n=o.call(arguments,1),s=function(){var i=n.concat(o.call(arguments));return this instanceof s?l(e,i.length,i):a(e,i,t)};return r(e.prototype)&&(s.prototype=e.prototype),s}},function(t,e){t.exports=function(t,e,n){var i=void 0===n;switch(e.length){case 0:return i?t():t.call(n);case 1:return i?t(e[0]):t.call(n,e[0]);case 2:return i?t(e[0],e[1]):t.call(n,e[0],e[1]);case 3:return i?t(e[0],e[1],e[2]):t.call(n,e[0],e[1],e[2]);case 4:return i?t(e[0],e[1],e[2],e[3]):t.call(n,e[0],e[1],e[2],e[3])}return t.apply(n,e)}},function(t,e,n){var i=n(3).parseInt,r=n(44).trim,a=n(72),o=/^[-+]?0[xX]/;t.exports=8!==i(a+"08")||22!==i(a+"0x16")?function(t,e){var n=r(String(t),3);return i(n,e>>>0||(o.test(n)?16:10))}:i},function(t,e,n){var i=n(3).parseFloat,r=n(44).trim;t.exports=1/i(n(72)+"-0")!=-1/0?function(t){var e=r(String(t),3),n=i(e);return 0===n&&"-"==e.charAt(0)?-0:n}:i},function(t,e,n){var i=n(28);t.exports=function(t,e){if("number"!=typeof t&&"Number"!=i(t))throw TypeError(e);return+t}},function(t,e,n){var i=n(6),r=Math.floor;t.exports=function(t){return!i(t)&&isFinite(t)&&r(t)===t}},function(t,e){t.exports=Math.log1p||function(t){return(t=+t)>-1e-8&&t<1e-8?t-t*t/2:Math.log(1+t)}},function(t,e,n){"use strict";var i=n(38),r=n(33),a=n(43),o={};n(19)(o,n(7)("iterator"),(function(){return this})),t.exports=function(t,e,n){t.prototype=i(o,{next:r(1,n)}),a(t,e+" Iterator")}},function(t,e,n){var i=n(5);t.exports=function(t,e,n,r){try{return r?e(i(n)[0],n[1]):e(n)}catch(e){var a=t.return;throw void 0!==a&&i(a.call(t)),e}}},function(t,e,n){var i=n(243);t.exports=function(t,e){return new(i(t))(e)}},function(t,e,n){var i=n(23),r=n(13),a=n(49),o=n(8);t.exports=function(t,e,n,s,l){i(e);var c=r(t),u=a(c),h=o(c.length),f=l?h-1:0,d=l?-1:1;if(n<2)for(;;){if(f in u){s=u[f],f+=d;break}if(f+=d,l?f<0:h<=f)throw TypeError("Reduce of empty array with no initial value")}for(;l?f>=0:h>f;f+=d)f in u&&(s=e(s,u[f],f,c));return s}},function(t,e,n){"use strict";var i=n(13),r=n(37),a=n(8);t.exports=[].copyWithin||function(t,e){var n=i(this),o=a(n.length),s=r(t,o),l=r(e,o),c=arguments.length>2?arguments[2]:void 0,u=Math.min((void 0===c?o:r(c,o))-l,o-s),h=1;for(l<s&&s<l+u&&(h=-1,l+=u-1,s+=u-1);u-- >0;)l in n?n[s]=n[l]:delete n[s],s+=h,l+=h;return n}},function(t,e){t.exports=function(t,e){return{value:e,done:!!t}}},function(t,e,n){"use strict";var i=n(87);n(1)({target:"RegExp",proto:!0,forced:i!==/./.exec},{exec:i})},function(t,e,n){n(10)&&"g"!=/./g.flags&&n(11).f(RegExp.prototype,"flags",{configurable:!0,get:n(58)})},function(t,e,n){"use strict";var i,r,a,o,s=n(35),l=n(3),c=n(22),u=n(51),h=n(1),f=n(6),d=n(23),p=n(47),g=n(61),m=n(52),v=n(89).set,x=n(263)(),b=n(121),y=n(264),w=n(62),k=n(122),S=l.TypeError,C=l.process,A=C&&C.versions,E=A&&A.v8||"",P=l.Promise,T="process"==u(C),O=function(){},L=r=b.f,M=!!function(){try{var t=P.resolve(1),e=(t.constructor={})[n(7)("species")]=function(t){t(O,O)};return(T||"function"==typeof PromiseRejectionEvent)&&t.then(O)instanceof e&&0!==E.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(t){}}(),_=function(t){var e;return!(!f(t)||"function"!=typeof(e=t.then))&&e},I=function(t,e){if(!t._n){t._n=!0;var n=t._c;x((function(){for(var i=t._v,r=1==t._s,a=0,o=function(e){var n,a,o,s=r?e.ok:e.fail,l=e.resolve,c=e.reject,u=e.domain;try{s?(r||(2==t._h&&z(t),t._h=1),!0===s?n=i:(u&&u.enter(),n=s(i),u&&(u.exit(),o=!0)),n===e.promise?c(S("Promise-chain cycle")):(a=_(n))?a.call(n,l,c):l(n)):c(i)}catch(t){u&&!o&&u.exit(),c(t)}};n.length>a;)o(n[a++]);t._c=[],t._n=!1,e&&!t._h&&N(t)}))}},N=function(t){v.call(l,(function(){var e,n,i,r=t._v,a=R(t);if(a&&(e=y((function(){T?C.emit("unhandledRejection",r,t):(n=l.onunhandledrejection)?n({promise:t,reason:r}):(i=l.console)&&i.error&&i.error("Unhandled promise rejection",r)})),t._h=T||R(t)?2:1),t._a=void 0,a&&e.e)throw e.v}))},R=function(t){return 1!==t._h&&0===(t._a||t._c).length},z=function(t){v.call(l,(function(){var e;T?C.emit("rejectionHandled",t):(e=l.onrejectionhandled)&&e({promise:t,reason:t._v})}))},F=function(t){var e=this;e._d||(e._d=!0,(e=e._w||e)._v=t,e._s=2,e._a||(e._a=e._c.slice()),I(e,!0))},D=function(t){var e,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===t)throw S("Promise can't be resolved itself");(e=_(t))?x((function(){var i={_w:n,_d:!1};try{e.call(t,c(D,i,1),c(F,i,1))}catch(t){F.call(i,t)}})):(n._v=t,n._s=1,I(n,!1))}catch(t){F.call({_w:n,_d:!1},t)}}};M||(P=function(t){p(this,P,"Promise","_h"),d(t),i.call(this);try{t(c(D,this,1),c(F,this,1))}catch(t){F.call(this,t)}},(i=function(t){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(48)(P.prototype,{then:function(t,e){var n=L(m(this,P));return n.ok="function"!=typeof t||t,n.fail="function"==typeof e&&e,n.domain=T?C.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&I(this,!1),n.promise},catch:function(t){return this.then(void 0,t)}}),a=function(){var t=new i;this.promise=t,this.resolve=c(D,t,1),this.reject=c(F,t,1)},b.f=L=function(t){return t===P||t===o?new a(t):r(t)}),h(h.G+h.W+h.F*!M,{Promise:P}),n(43)(P,"Promise"),n(46)("Promise"),o=n(9).Promise,h(h.S+h.F*!M,"Promise",{reject:function(t){var e=L(this);return(0,e.reject)(t),e.promise}}),h(h.S+h.F*(s||!M),"Promise",{resolve:function(t){return k(s&&this===o?P:this,t)}}),h(h.S+h.F*!(M&&n(57)((function(t){P.all(t).catch(O)}))),"Promise",{all:function(t){var e=this,n=L(e),i=n.resolve,r=n.reject,a=y((function(){var n=[],a=0,o=1;g(t,!1,(function(t){var s=a++,l=!1;n.push(void 0),o++,e.resolve(t).then((function(t){l||(l=!0,n[s]=t,--o||i(n))}),r)})),--o||i(n)}));return a.e&&r(a.v),n.promise},race:function(t){var e=this,n=L(e),i=n.reject,r=y((function(){g(t,!1,(function(t){e.resolve(t).then(n.resolve,i)}))}));return r.e&&i(r.v),n.promise}})},function(t,e,n){"use strict";var i=n(23);function r(t){var e,n;this.promise=new t((function(t,i){if(void 0!==e||void 0!==n)throw TypeError("Bad Promise constructor");e=t,n=i})),this.resolve=i(e),this.reject=i(n)}t.exports.f=function(t){return new r(t)}},function(t,e,n){var i=n(5),r=n(6),a=n(121);t.exports=function(t,e){if(i(t),r(e)&&e.constructor===t)return e;var n=a.f(t);return(0,n.resolve)(e),n.promise}},function(t,e,n){"use strict";var i=n(11).f,r=n(38),a=n(48),o=n(22),s=n(47),l=n(61),c=n(78),u=n(117),h=n(46),f=n(10),d=n(32).fastKey,p=n(42),g=f?"_s":"size",m=function(t,e){var n,i=d(e);if("F"!==i)return t._i[i];for(n=t._f;n;n=n.n)if(n.k==e)return n};t.exports={getConstructor:function(t,e,n,c){var u=t((function(t,i){s(t,u,e,"_i"),t._t=e,t._i=r(null),t._f=void 0,t._l=void 0,t[g]=0,null!=i&&l(i,n,t[c],t)}));return a(u.prototype,{clear:function(){for(var t=p(this,e),n=t._i,i=t._f;i;i=i.n)i.r=!0,i.p&&(i.p=i.p.n=void 0),delete n[i.i];t._f=t._l=void 0,t[g]=0},delete:function(t){var n=p(this,e),i=m(n,t);if(i){var r=i.n,a=i.p;delete n._i[i.i],i.r=!0,a&&(a.n=r),r&&(r.p=a),n._f==i&&(n._f=r),n._l==i&&(n._l=a),n[g]--}return!!i},forEach:function(t){p(this,e);for(var n,i=o(t,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(i(n.v,n.k,this);n&&n.r;)n=n.p},has:function(t){return!!m(p(this,e),t)}}),f&&i(u.prototype,"size",{get:function(){return p(this,e)[g]}}),u},def:function(t,e,n){var i,r,a=m(t,e);return a?a.v=n:(t._l=a={i:r=d(e,!0),k:e,v:n,p:i=t._l,n:void 0,r:!1},t._f||(t._f=a),i&&(i.n=a),t[g]++,"F"!==r&&(t._i[r]=a)),t},getEntry:m,setStrong:function(t,e,n){c(t,e,(function(t,n){this._t=p(t,e),this._k=n,this._l=void 0}),(function(){for(var t=this._k,e=this._l;e&&e.r;)e=e.p;return this._t&&(this._l=e=e?e.n:this._t._f)?u(0,"keys"==t?e.k:"values"==t?e.v:[e.k,e.v]):(this._t=void 0,u(1))}),n?"entries":"values",!n,!0),h(e)}}},function(t,e,n){"use strict";var i=n(48),r=n(32).getWeak,a=n(5),o=n(6),s=n(47),l=n(61),c=n(27),u=n(18),h=n(42),f=c(5),d=c(6),p=0,g=function(t){return t._l||(t._l=new m)},m=function(){this.a=[]},v=function(t,e){return f(t.a,(function(t){return t[0]===e}))};m.prototype={get:function(t){var e=v(this,t);if(e)return e[1]},has:function(t){return!!v(this,t)},set:function(t,e){var n=v(this,t);n?n[1]=e:this.a.push([t,e])},delete:function(t){var e=d(this.a,(function(e){return e[0]===t}));return~e&&this.a.splice(e,1),!!~e}},t.exports={getConstructor:function(t,e,n,a){var c=t((function(t,i){s(t,c,e,"_i"),t._t=e,t._i=p++,t._l=void 0,null!=i&&l(i,n,t[a],t)}));return i(c.prototype,{delete:function(t){if(!o(t))return!1;var n=r(t);return!0===n?g(h(this,e)).delete(t):n&&u(n,this._i)&&delete n[this._i]},has:function(t){if(!o(t))return!1;var n=r(t);return!0===n?g(h(this,e)).has(t):n&&u(n,this._i)}}),c},def:function(t,e,n){var i=r(a(e),!0);return!0===i?g(t).set(e,n):i[t._i]=n,t},ufstore:g}},function(t,e,n){var i=n(24),r=n(8);t.exports=function(t){if(void 0===t)return 0;var e=i(t),n=r(e);if(e!==n)throw RangeError("Wrong length!");return n}},function(t,e,n){var i=n(39),r=n(55),a=n(5),o=n(3).Reflect;t.exports=o&&o.ownKeys||function(t){var e=i.f(a(t)),n=r.f;return n?e.concat(n(t)):e}},function(t,e,n){var i=n(8),r=n(74),a=n(29);t.exports=function(t,e,n,o){var s=String(a(t)),l=s.length,c=void 0===n?" ":String(n),u=i(e);if(u<=l||""==c)return s;var h=u-l,f=r.call(c,Math.ceil(h/c.length));return f.length>h&&(f=f.slice(0,h)),o?f+s:s+f}},function(t,e,n){var i=n(10),r=n(36),a=n(20),o=n(50).f;t.exports=function(t){return function(e){for(var n,s=a(e),l=r(s),c=l.length,u=0,h=[];c>u;)n=l[u++],i&&!o.call(s,n)||h.push(t?[n,s[n]]:s[n]);return h}}},function(t,e){var n=t.exports={version:"2.6.11"};"number"==typeof __e&&(__e=n)},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,n){"use strict";var i=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function o(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var i={};return"abcdefghijklmnopqrst".split("").forEach((function(t){i[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},i)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var n,s,l=o(t),c=1;c<arguments.length;c++){for(var u in n=Object(arguments[c]))r.call(n,u)&&(l[u]=n[u]);if(i){s=i(n);for(var h=0;h<s.length;h++)a.call(n,s[h])&&(l[s[h]]=n[s[h]])}}return l}},function(t,e,n){"use strict";t.exports=function(t,e){return function(){for(var n=new Array(arguments.length),i=0;i<n.length;i++)n[i]=arguments[i];return t.apply(e,n)}}},function(t,e,n){"use strict";var i=n(16);function r(t){return encodeURIComponent(t).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}t.exports=function(t,e,n){if(!e)return t;var a;if(n)a=n(e);else if(i.isURLSearchParams(e))a=e.toString();else{var o=[];i.forEach(e,(function(t,e){null!=t&&(i.isArray(t)?e+="[]":t=[t],i.forEach(t,(function(t){i.isDate(t)?t=t.toISOString():i.isObject(t)&&(t=JSON.stringify(t)),o.push(r(e)+"="+r(t))})))})),a=o.join("&")}if(a){var s=t.indexOf("#");-1!==s&&(t=t.slice(0,s)),t+=(-1===t.indexOf("?")?"?":"&")+a}return t}},function(t,e,n){"use strict";t.exports=function(t){return!(!t||!t.__CANCEL__)}},function(t,e,n){"use strict";(function(e){var i=n(16),r=n(352),a={"Content-Type":"application/x-www-form-urlencoded"};function o(t,e){!i.isUndefined(t)&&i.isUndefined(t["Content-Type"])&&(t["Content-Type"]=e)}var s,l={adapter:((void 0!==e&&"[object process]"===Object.prototype.toString.call(e)||"undefined"!=typeof XMLHttpRequest)&&(s=n(136)),s),transformRequest:[function(t,e){return r(e,"Accept"),r(e,"Content-Type"),i.isFormData(t)||i.isArrayBuffer(t)||i.isBuffer(t)||i.isStream(t)||i.isFile(t)||i.isBlob(t)?t:i.isArrayBufferView(t)?t.buffer:i.isURLSearchParams(t)?(o(e,"application/x-www-form-urlencoded;charset=utf-8"),t.toString()):i.isObject(t)?(o(e,"application/json;charset=utf-8"),JSON.stringify(t)):t}],transformResponse:[function(t){if("string"==typeof t)try{t=JSON.parse(t)}catch(t){}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(t){return t>=200&&t<300}};l.headers={common:{Accept:"application/json, text/plain, */*"}},i.forEach(["delete","get","head"],(function(t){l.headers[t]={}})),i.forEach(["post","put","patch"],(function(t){l.headers[t]=i.merge(a)})),t.exports=l}).call(this,n(351))},function(t,e,n){"use strict";var i=n(16),r=n(353),a=n(133),o=n(355),s=n(356),l=n(137);t.exports=function(t){return new Promise((function(e,c){var u=t.data,h=t.headers;i.isFormData(u)&&delete h["Content-Type"];var f=new XMLHttpRequest;if(t.auth){var d=t.auth.username||"",p=t.auth.password||"";h.Authorization="Basic "+btoa(d+":"+p)}if(f.open(t.method.toUpperCase(),a(t.url,t.params,t.paramsSerializer),!0),f.timeout=t.timeout,f.onreadystatechange=function(){if(f&&4===f.readyState&&(0!==f.status||f.responseURL&&0===f.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in f?o(f.getAllResponseHeaders()):null,i={data:t.responseType&&"text"!==t.responseType?f.response:f.responseText,status:f.status,statusText:f.statusText,headers:n,config:t,request:f};r(e,c,i),f=null}},f.onabort=function(){f&&(c(l("Request aborted",t,"ECONNABORTED",f)),f=null)},f.onerror=function(){c(l("Network Error",t,null,f)),f=null},f.ontimeout=function(){c(l("timeout of "+t.timeout+"ms exceeded",t,"ECONNABORTED",f)),f=null},i.isStandardBrowserEnv()){var g=n(357),m=(t.withCredentials||s(t.url))&&t.xsrfCookieName?g.read(t.xsrfCookieName):void 0;m&&(h[t.xsrfHeaderName]=m)}if("setRequestHeader"in f&&i.forEach(h,(function(t,e){void 0===u&&"content-type"===e.toLowerCase()?delete h[e]:f.setRequestHeader(e,t)})),t.withCredentials&&(f.withCredentials=!0),t.responseType)try{f.responseType=t.responseType}catch(e){if("json"!==t.responseType)throw e}"function"==typeof t.onDownloadProgress&&f.addEventListener("progress",t.onDownloadProgress),"function"==typeof t.onUploadProgress&&f.upload&&f.upload.addEventListener("progress",t.onUploadProgress),t.cancelToken&&t.cancelToken.promise.then((function(t){f&&(f.abort(),c(t),f=null)})),void 0===u&&(u=null),f.send(u)}))}},function(t,e,n){"use strict";var i=n(354);t.exports=function(t,e,n,r,a){var o=new Error(t);return i(o,e,n,r,a)}},function(t,e,n){"use strict";var i=n(16);t.exports=function(t,e){e=e||{};var n={};return i.forEach(["url","method","params","data"],(function(t){void 0!==e[t]&&(n[t]=e[t])})),i.forEach(["headers","auth","proxy"],(function(r){i.isObject(e[r])?n[r]=i.deepMerge(t[r],e[r]):void 0!==e[r]?n[r]=e[r]:i.isObject(t[r])?n[r]=i.deepMerge(t[r]):void 0!==t[r]&&(n[r]=t[r])})),i.forEach(["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","maxContentLength","validateStatus","maxRedirects","httpAgent","httpsAgent","cancelToken","socketPath"],(function(i){void 0!==e[i]?n[i]=e[i]:void 0!==t[i]&&(n[i]=t[i])})),n}},function(t,e,n){"use strict";function i(t){this.message=t}i.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},i.prototype.__CANCEL__=!0,t.exports=i},function(t,e,n){"use strict";!function t(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(t){console.error(t)}}}(),t.exports=n(336)},function(t,e,n){"use strict";function i(t){var e,n=t.Symbol;return"function"==typeof n?n.observable?e=n.observable:(e=n("observable"),n.observable=e):e="@@observable",e}n.d(e,"a",(function(){return i}))},function(t,e,n){"use strict";e.__esModule=!0;var i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},r=l(n(17)),a=l(n(12)),o=l(n(0)),s=l(n(2));function l(t){return t&&t.__esModule?t:{default:t}}function c(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var h=function(t){function e(){var n,i;c(this,e);for(var r=arguments.length,a=Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=i=u(this,t.call.apply(t,[this].concat(a))),i.state={match:i.computeMatch(i.props.history.location.pathname)},u(i,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.getChildContext=function(){return{router:i({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},e.prototype.computeMatch=function(t){return{path:"/",url:"/",params:{},isExact:"/"===t}},e.prototype.componentWillMount=function(){var t=this,e=this.props,n=e.children,i=e.history;(0,a.default)(null==n||1===o.default.Children.count(n),"A <Router> may have only one child element"),this.unlisten=i.listen((function(){t.setState({match:t.computeMatch(i.location.pathname)})}))},e.prototype.componentWillReceiveProps=function(t){(0,r.default)(this.props.history===t.history,"You cannot change <Router history>")},e.prototype.componentWillUnmount=function(){this.unlisten()},e.prototype.render=function(){var t=this.props.children;return t?o.default.Children.only(t):null},e}(o.default.Component);h.propTypes={history:s.default.object.isRequired,children:s.default.node},h.contextTypes={router:s.default.object},h.childContextTypes={router:s.default.object.isRequired},e.default=h},function(t,e,n){"use strict";e.__esModule=!0;var i=l(n(0)),r=l(n(2)),a=l(n(17)),o=l(n(12)),s=l(n(65));function l(t){return t&&t.__esModule?t:{default:t}}function c(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var h=function(t){function e(){return c(this,e),u(this,t.apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.componentWillMount=function(){(0,o.default)(this.context.router,"You should not use <Switch> outside a <Router>")},e.prototype.componentWillReceiveProps=function(t){(0,a.default)(!(t.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),(0,a.default)(!(!t.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},e.prototype.render=function(){var t=this.context.router.route,e=this.props.children,n=this.props.location||t.location,r=void 0,a=void 0;return i.default.Children.forEach(e,(function(e){if(null==r&&i.default.isValidElement(e)){var o=e.props,l=o.path,c=o.exact,u=o.strict,h=o.sensitive,f=o.from,d=l||f;a=e,r=(0,s.default)(n.pathname,{path:d,exact:c,strict:u,sensitive:h},t.match)}})),r?i.default.cloneElement(a,{location:n,computedMatch:r}):null},e}(i.default.Component);h.contextTypes={router:r.default.shape({route:r.default.object.isRequired}).isRequired},h.propTypes={children:r.default.node,location:r.default.object},e.default=h},function(t,e,n){"use strict";e.__esModule=!0;var i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},r=c(n(17)),a=c(n(12)),o=c(n(0)),s=c(n(2)),l=c(n(65));function c(t){return t&&t.__esModule?t:{default:t}}function u(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function h(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var f=function(t){return 0===o.default.Children.count(t)},d=function(t){function e(){var n,i;u(this,e);for(var r=arguments.length,a=Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=i=h(this,t.call.apply(t,[this].concat(a))),i.state={match:i.computeMatch(i.props,i.context.router)},h(i,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.getChildContext=function(){return{router:i({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},e.prototype.computeMatch=function(t,e){var n=t.computedMatch,i=t.location,r=t.path,o=t.strict,s=t.exact,c=t.sensitive;if(n)return n;(0,a.default)(e,"You should not use <Route> or withRouter() outside a <Router>");var u=e.route,h=(i||u.location).pathname;return(0,l.default)(h,{path:r,strict:o,exact:s,sensitive:c},u.match)},e.prototype.componentWillMount=function(){(0,r.default)(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),(0,r.default)(!(this.props.component&&this.props.children&&!f(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),(0,r.default)(!(this.props.render&&this.props.children&&!f(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},e.prototype.componentWillReceiveProps=function(t,e){(0,r.default)(!(t.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),(0,r.default)(!(!t.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(t,e.router)})},e.prototype.render=function(){var t=this.state.match,e=this.props,n=e.children,i=e.component,r=e.render,a=this.context.router,s=a.history,l=a.route,c=a.staticContext,u={match:t,location:this.props.location||l.location,history:s,staticContext:c};return i?t?o.default.createElement(i,u):null:r?t?r(u):null:"function"==typeof n?n(u):n&&!f(n)?o.default.Children.only(n):null},e}(o.default.Component);d.propTypes={computedMatch:s.default.object,path:s.default.string,exact:s.default.bool,strict:s.default.bool,sensitive:s.default.bool,component:s.default.func,render:s.default.func,children:s.default.oneOfType([s.default.func,s.default.node]),location:s.default.object},d.contextTypes={router:s.default.shape({history:s.default.object.isRequired,route:s.default.object.isRequired,staticContext:s.default.object})},d.childContextTypes={router:s.default.object.isRequired},e.default=d},function(t,e,n){t.exports=n(345)},function(t){t.exports=JSON.parse('{"items":[{"id":"id1","title":"Power Company","icon":"/images/dash-board-1.jpg","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."},{"id":"id2","title":"Gas company","icon":"/images/dash-board-2.jpg","content":"Lorem ipsum dolor sit amet, Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."},{"id":"id3","title":"Water Company","icon":"/images/dash-board-3.jpg","content":"Mattis ullamcorper velit sed ullamcorper morbi tincidunt ornare massa. In pellentesque massa placerat duis. Non odio euismod lacinia at quis risus sed vulputate. Viverra accumsan in nisl nisi scelerisque. Facilisis magna etiam tempor orci"},{"id":"id4","title":"Mattis ullamcorper velit","icon":"/images/dash-board-4.jpg","content":"Non odio euismod lacinia at quis risus. Viverra maecenas accumsan lacus vel facilisis. Montes nascetur ridiculus mus mauris vitae ultricies leo integer malesuada. Et leo duis ut diam. Ullamcorper malesuada proin libero nunc consequat interdum varius sit"},{"id":"id5","title":"Ultrices gravida dictum fusce","icon":"/images/dash-board-5.jpg","content":"Lorem ipsum dolor sit amet, Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."},{"id":"id6","title":"Vulputate sapien nec","icon":"/images/dash-board-6.jpg","content":"Lorem ipsum dolor sit amet, Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."}]}')},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},a=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),o=u(n(362)),s=n(0),l=u(s),c=u(n(2));function u(t){return t&&t.__esModule?t:{default:t}}window.ApexCharts=o.default;var h=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return l.default.createRef?n.chartRef=l.default.createRef():n.setRef=function(t){return n.chartRef=t},n.chart=null,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(t,s.Component),a(t,[{key:"render",value:function(){var t=function(t,e){var n={};for(var i in t)0<=e.indexOf(i)||Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i]);return n}(this.props,[]);return l.default.createElement("div",r({ref:l.default.createRef?this.chartRef:this.setRef},t))}},{key:"componentDidMount",value:function(){var t=l.default.createRef?this.chartRef.current:this.chartRef;this.chart=new o.default(t,this.getConfig()),this.chart.render()}},{key:"getConfig",value:function(){var t=this.props,e=t.type,n=t.height,i=t.width,r=t.series,a=t.options,o={chart:{type:e,height:n,width:i},series:r};return this.extend(a,o)}},{key:"isObject",value:function(t){return t&&"object"===(void 0===t?"undefined":i(t))&&!Array.isArray(t)&&null!=t}},{key:"extend",value:function(t,e){var n=this;"function"!=typeof Object.assign&&(Object.assign=function(t){if(null==t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),n=1;n<arguments.length;n++){var i=arguments[n];if(null!=i)for(var r in i)i.hasOwnProperty(r)&&(e[r]=i[r])}return e});var i=Object.assign({},t);return this.isObject(t)&&this.isObject(e)&&Object.keys(e).forEach((function(r){n.isObject(e[r])&&r in t?i[r]=n.extend(t[r],e[r]):Object.assign(i,function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}({},r,e[r]))})),i}},{key:"componentDidUpdate",value:function(t){if(!this.chart)return null;var e=this.props,n=e.options,i=e.series,r=JSON.stringify(t.options),a=JSON.stringify(t.series),o=JSON.stringify(n),s=JSON.stringify(i);r===o&&a===s||(a===s?this.chart.updateOptions(this.getConfig()):r===o?this.chart.updateSeries(i):this.chart.updateOptions(this.getConfig()))}},{key:"componentWillUnmount",value:function(){this.chart&&"function"==typeof this.chart.destroy&&this.chart.destroy()}}]),t}();(e.default=h).propTypes={type:c.default.string.isRequired,width:c.default.any,height:c.default.any,series:c.default.array.isRequired,options:c.default.object.isRequired},h.defaultProps={type:"line",width:"100%",height:"auto"}},,function(t,e,n){"use strict";n(150);var i,r=(i=n(322))&&i.__esModule?i:{default:i};r.default._babelPolyfill&&"undefined"!=typeof console&&console.warn&&console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended and may have consequences if different versions of the polyfills are applied sequentially. If you do need to load the polyfill more than once, use @babel/polyfill/noConflict instead to bypass the warning."),r.default._babelPolyfill=!0},function(t,e,n){"use strict";n(151),n(294),n(296),n(299),n(301),n(303),n(305),n(307),n(309),n(311),n(313),n(315),n(317),n(321)},function(t,e,n){n(152),n(155),n(156),n(157),n(158),n(159),n(160),n(161),n(162),n(163),n(164),n(165),n(166),n(167),n(168),n(169),n(170),n(171),n(172),n(173),n(174),n(175),n(176),n(177),n(178),n(179),n(180),n(181),n(182),n(183),n(184),n(185),n(186),n(187),n(188),n(189),n(190),n(191),n(192),n(193),n(194),n(195),n(196),n(198),n(199),n(200),n(201),n(202),n(203),n(204),n(205),n(206),n(207),n(208),n(209),n(210),n(211),n(212),n(213),n(214),n(215),n(216),n(217),n(218),n(219),n(220),n(221),n(222),n(223),n(224),n(225),n(226),n(227),n(228),n(229),n(230),n(231),n(233),n(234),n(236),n(237),n(238),n(239),n(240),n(241),n(242),n(244),n(245),n(246),n(247),n(248),n(249),n(250),n(251),n(252),n(253),n(254),n(255),n(256),n(86),n(257),n(118),n(258),n(119),n(259),n(260),n(261),n(262),n(120),n(265),n(266),n(267),n(268),n(269),n(270),n(271),n(272),n(273),n(274),n(275),n(276),n(277),n(278),n(279),n(280),n(281),n(282),n(283),n(284),n(285),n(286),n(287),n(288),n(289),n(290),n(291),n(292),n(293),t.exports=n(9)},function(t,e,n){"use strict";var i=n(3),r=n(18),a=n(10),o=n(1),s=n(14),l=n(32).KEY,c=n(4),u=n(53),h=n(43),f=n(34),d=n(7),p=n(67),g=n(99),m=n(154),v=n(56),x=n(5),b=n(6),y=n(13),w=n(20),k=n(31),S=n(33),C=n(38),A=n(102),E=n(25),P=n(55),T=n(11),O=n(36),L=E.f,M=T.f,_=A.f,I=i.Symbol,N=i.JSON,R=N&&N.stringify,z=d("_hidden"),F=d("toPrimitive"),D={}.propertyIsEnumerable,X=u("symbol-registry"),Y=u("symbols"),j=u("op-symbols"),W=Object.prototype,H="function"==typeof I&&!!P.f,B=i.QObject,V=!B||!B.prototype||!B.prototype.findChild,U=a&&c((function(){return 7!=C(M({},"a",{get:function(){return M(this,"a",{value:7}).a}})).a}))?function(t,e,n){var i=L(W,e);i&&delete W[e],M(t,e,n),i&&t!==W&&M(W,e,i)}:M,G=function(t){var e=Y[t]=C(I.prototype);return e._k=t,e},q=H&&"symbol"==typeof I.iterator?function(t){return"symbol"==typeof t}:function(t){return t instanceof I},$=function(t,e,n){return t===W&&$(j,e,n),x(t),e=k(e,!0),x(n),r(Y,e)?(n.enumerable?(r(t,z)&&t[z][e]&&(t[z][e]=!1),n=C(n,{enumerable:S(0,!1)})):(r(t,z)||M(t,z,S(1,{})),t[z][e]=!0),U(t,e,n)):M(t,e,n)},Z=function(t,e){x(t);for(var n,i=m(e=w(e)),r=0,a=i.length;a>r;)$(t,n=i[r++],e[n]);return t},K=function(t){var e=D.call(this,t=k(t,!0));return!(this===W&&r(Y,t)&&!r(j,t))&&(!(e||!r(this,t)||!r(Y,t)||r(this,z)&&this[z][t])||e)},Q=function(t,e){if(t=w(t),e=k(e,!0),t!==W||!r(Y,e)||r(j,e)){var n=L(t,e);return!n||!r(Y,e)||r(t,z)&&t[z][e]||(n.enumerable=!0),n}},J=function(t){for(var e,n=_(w(t)),i=[],a=0;n.length>a;)r(Y,e=n[a++])||e==z||e==l||i.push(e);return i},tt=function(t){for(var e,n=t===W,i=_(n?j:w(t)),a=[],o=0;i.length>o;)!r(Y,e=i[o++])||n&&!r(W,e)||a.push(Y[e]);return a};H||(s((I=function(){if(this instanceof I)throw TypeError("Symbol is not a constructor!");var t=f(arguments.length>0?arguments[0]:void 0),e=function(n){this===W&&e.call(j,n),r(this,z)&&r(this[z],t)&&(this[z][t]=!1),U(this,t,S(1,n))};return a&&V&&U(W,t,{configurable:!0,set:e}),G(t)}).prototype,"toString",(function(){return this._k})),E.f=Q,T.f=$,n(39).f=A.f=J,n(50).f=K,P.f=tt,a&&!n(35)&&s(W,"propertyIsEnumerable",K,!0),p.f=function(t){return G(d(t))}),o(o.G+o.W+o.F*!H,{Symbol:I});for(var et="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),nt=0;et.length>nt;)d(et[nt++]);for(var it=O(d.store),rt=0;it.length>rt;)g(it[rt++]);o(o.S+o.F*!H,"Symbol",{for:function(t){return r(X,t+="")?X[t]:X[t]=I(t)},keyFor:function(t){if(!q(t))throw TypeError(t+" is not a symbol!");for(var e in X)if(X[e]===t)return e},useSetter:function(){V=!0},useSimple:function(){V=!1}}),o(o.S+o.F*!H,"Object",{create:function(t,e){return void 0===e?C(t):Z(C(t),e)},defineProperty:$,defineProperties:Z,getOwnPropertyDescriptor:Q,getOwnPropertyNames:J,getOwnPropertySymbols:tt});var at=c((function(){P.f(1)}));o(o.S+o.F*at,"Object",{getOwnPropertySymbols:function(t){return P.f(y(t))}}),N&&o(o.S+o.F*(!H||c((function(){var t=I();return"[null]"!=R([t])||"{}"!=R({a:t})||"{}"!=R(Object(t))}))),"JSON",{stringify:function(t){for(var e,n,i=[t],r=1;arguments.length>r;)i.push(arguments[r++]);if(n=e=i[1],(b(e)||void 0!==t)&&!q(t))return v(e)||(e=function(t,e){if("function"==typeof n&&(e=n.call(this,t,e)),!q(e))return e}),i[1]=e,R.apply(N,i)}}),I.prototype[F]||n(19)(I.prototype,F,I.prototype.valueOf),h(I,"Symbol"),h(Math,"Math",!0),h(i.JSON,"JSON",!0)},function(t,e,n){t.exports=n(53)("native-function-to-string",Function.toString)},function(t,e,n){var i=n(36),r=n(55),a=n(50);t.exports=function(t){var e=i(t),n=r.f;if(n)for(var o,s=n(t),l=a.f,c=0;s.length>c;)l.call(t,o=s[c++])&&e.push(o);return e}},function(t,e,n){var i=n(1);i(i.S,"Object",{create:n(38)})},function(t,e,n){var i=n(1);i(i.S+i.F*!n(10),"Object",{defineProperty:n(11).f})},function(t,e,n){var i=n(1);i(i.S+i.F*!n(10),"Object",{defineProperties:n(101)})},function(t,e,n){var i=n(20),r=n(25).f;n(26)("getOwnPropertyDescriptor",(function(){return function(t,e){return r(i(t),e)}}))},function(t,e,n){var i=n(13),r=n(40);n(26)("getPrototypeOf",(function(){return function(t){return r(i(t))}}))},function(t,e,n){var i=n(13),r=n(36);n(26)("keys",(function(){return function(t){return r(i(t))}}))},function(t,e,n){n(26)("getOwnPropertyNames",(function(){return n(102).f}))},function(t,e,n){var i=n(6),r=n(32).onFreeze;n(26)("freeze",(function(t){return function(e){return t&&i(e)?t(r(e)):e}}))},function(t,e,n){var i=n(6),r=n(32).onFreeze;n(26)("seal",(function(t){return function(e){return t&&i(e)?t(r(e)):e}}))},function(t,e,n){var i=n(6),r=n(32).onFreeze;n(26)("preventExtensions",(function(t){return function(e){return t&&i(e)?t(r(e)):e}}))},function(t,e,n){var i=n(6);n(26)("isFrozen",(function(t){return function(e){return!i(e)||!!t&&t(e)}}))},function(t,e,n){var i=n(6);n(26)("isSealed",(function(t){return function(e){return!i(e)||!!t&&t(e)}}))},function(t,e,n){var i=n(6);n(26)("isExtensible",(function(t){return function(e){return!!i(e)&&(!t||t(e))}}))},function(t,e,n){var i=n(1);i(i.S+i.F,"Object",{assign:n(103)})},function(t,e,n){var i=n(1);i(i.S,"Object",{is:n(104)})},function(t,e,n){var i=n(1);i(i.S,"Object",{setPrototypeOf:n(71).set})},function(t,e,n){"use strict";var i=n(51),r={};r[n(7)("toStringTag")]="z",r+""!="[object z]"&&n(14)(Object.prototype,"toString",(function(){return"[object "+i(this)+"]"}),!0)},function(t,e,n){var i=n(1);i(i.P,"Function",{bind:n(105)})},function(t,e,n){var i=n(11).f,r=Function.prototype,a=/^\s*function ([^ (]*)/;"name"in r||n(10)&&i(r,"name",{configurable:!0,get:function(){try{return(""+this).match(a)[1]}catch(t){return""}}})},function(t,e,n){"use strict";var i=n(6),r=n(40),a=n(7)("hasInstance"),o=Function.prototype;a in o||n(11).f(o,a,{value:function(t){if("function"!=typeof this||!i(t))return!1;if(!i(this.prototype))return t instanceof this;for(;t=r(t);)if(this.prototype===t)return!0;return!1}})},function(t,e,n){var i=n(1),r=n(107);i(i.G+i.F*(parseInt!=r),{parseInt:r})},function(t,e,n){var i=n(1),r=n(108);i(i.G+i.F*(parseFloat!=r),{parseFloat:r})},function(t,e,n){"use strict";var i=n(3),r=n(18),a=n(28),o=n(73),s=n(31),l=n(4),c=n(39).f,u=n(25).f,h=n(11).f,f=n(44).trim,d=i.Number,p=d,g=d.prototype,m="Number"==a(n(38)(g)),v="trim"in String.prototype,x=function(t){var e=s(t,!1);if("string"==typeof e&&e.length>2){var n,i,r,a=(e=v?e.trim():f(e,3)).charCodeAt(0);if(43===a||45===a){if(88===(n=e.charCodeAt(2))||120===n)return NaN}else if(48===a){switch(e.charCodeAt(1)){case 66:case 98:i=2,r=49;break;case 79:case 111:i=8,r=55;break;default:return+e}for(var o,l=e.slice(2),c=0,u=l.length;c<u;c++)if((o=l.charCodeAt(c))<48||o>r)return NaN;return parseInt(l,i)}}return+e};if(!d(" 0o1")||!d("0b1")||d("+0x1")){d=function(t){var e=arguments.length<1?0:t,n=this;return n instanceof d&&(m?l((function(){g.valueOf.call(n)})):"Number"!=a(n))?o(new p(x(e)),n,d):x(e)};for(var b,y=n(10)?c(p):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),w=0;y.length>w;w++)r(p,b=y[w])&&!r(d,b)&&h(d,b,u(p,b));d.prototype=g,g.constructor=d,n(14)(i,"Number",d)}},function(t,e,n){"use strict";var i=n(1),r=n(24),a=n(109),o=n(74),s=1..toFixed,l=Math.floor,c=[0,0,0,0,0,0],u="Number.toFixed: incorrect invocation!",h=function(t,e){for(var n=-1,i=e;++n<6;)i+=t*c[n],c[n]=i%1e7,i=l(i/1e7)},f=function(t){for(var e=6,n=0;--e>=0;)n+=c[e],c[e]=l(n/t),n=n%t*1e7},d=function(){for(var t=6,e="";--t>=0;)if(""!==e||0===t||0!==c[t]){var n=String(c[t]);e=""===e?n:e+o.call("0",7-n.length)+n}return e},p=function(t,e,n){return 0===e?n:e%2==1?p(t,e-1,n*t):p(t*t,e/2,n)};i(i.P+i.F*(!!s&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!n(4)((function(){s.call({})}))),"Number",{toFixed:function(t){var e,n,i,s,l=a(this,u),c=r(t),g="",m="0";if(c<0||c>20)throw RangeError(u);if(l!=l)return"NaN";if(l<=-1e21||l>=1e21)return String(l);if(l<0&&(g="-",l=-l),l>1e-21)if(n=(e=function(t){for(var e=0,n=t;n>=4096;)e+=12,n/=4096;for(;n>=2;)e+=1,n/=2;return e}(l*p(2,69,1))-69)<0?l*p(2,-e,1):l/p(2,e,1),n*=4503599627370496,(e=52-e)>0){for(h(0,n),i=c;i>=7;)h(1e7,0),i-=7;for(h(p(10,i,1),0),i=e-1;i>=23;)f(1<<23),i-=23;f(1<<i),h(1,1),f(2),m=d()}else h(0,n),h(1<<-e,0),m=d()+o.call("0",c);return m=c>0?g+((s=m.length)<=c?"0."+o.call("0",c-s)+m:m.slice(0,s-c)+"."+m.slice(s-c)):g+m}})},function(t,e,n){"use strict";var i=n(1),r=n(4),a=n(109),o=1..toPrecision;i(i.P+i.F*(r((function(){return"1"!==o.call(1,void 0)}))||!r((function(){o.call({})}))),"Number",{toPrecision:function(t){var e=a(this,"Number#toPrecision: incorrect invocation!");return void 0===t?o.call(e):o.call(e,t)}})},function(t,e,n){var i=n(1);i(i.S,"Number",{EPSILON:Math.pow(2,-52)})},function(t,e,n){var i=n(1),r=n(3).isFinite;i(i.S,"Number",{isFinite:function(t){return"number"==typeof t&&r(t)}})},function(t,e,n){var i=n(1);i(i.S,"Number",{isInteger:n(110)})},function(t,e,n){var i=n(1);i(i.S,"Number",{isNaN:function(t){return t!=t}})},function(t,e,n){var i=n(1),r=n(110),a=Math.abs;i(i.S,"Number",{isSafeInteger:function(t){return r(t)&&a(t)<=9007199254740991}})},function(t,e,n){var i=n(1);i(i.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(t,e,n){var i=n(1);i(i.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(t,e,n){var i=n(1),r=n(108);i(i.S+i.F*(Number.parseFloat!=r),"Number",{parseFloat:r})},function(t,e,n){var i=n(1),r=n(107);i(i.S+i.F*(Number.parseInt!=r),"Number",{parseInt:r})},function(t,e,n){var i=n(1),r=n(111),a=Math.sqrt,o=Math.acosh;i(i.S+i.F*!(o&&710==Math.floor(o(Number.MAX_VALUE))&&o(1/0)==1/0),"Math",{acosh:function(t){return(t=+t)<1?NaN:t>94906265.62425156?Math.log(t)+Math.LN2:r(t-1+a(t-1)*a(t+1))}})},function(t,e,n){var i=n(1),r=Math.asinh;i(i.S+i.F*!(r&&1/r(0)>0),"Math",{asinh:function t(e){return isFinite(e=+e)&&0!=e?e<0?-t(-e):Math.log(e+Math.sqrt(e*e+1)):e}})},function(t,e,n){var i=n(1),r=Math.atanh;i(i.S+i.F*!(r&&1/r(-0)<0),"Math",{atanh:function(t){return 0==(t=+t)?t:Math.log((1+t)/(1-t))/2}})},function(t,e,n){var i=n(1),r=n(75);i(i.S,"Math",{cbrt:function(t){return r(t=+t)*Math.pow(Math.abs(t),1/3)}})},function(t,e,n){var i=n(1);i(i.S,"Math",{clz32:function(t){return(t>>>=0)?31-Math.floor(Math.log(t+.5)*Math.LOG2E):32}})},function(t,e,n){var i=n(1),r=Math.exp;i(i.S,"Math",{cosh:function(t){return(r(t=+t)+r(-t))/2}})},function(t,e,n){var i=n(1),r=n(76);i(i.S+i.F*(r!=Math.expm1),"Math",{expm1:r})},function(t,e,n){var i=n(1);i(i.S,"Math",{fround:n(197)})},function(t,e,n){var i=n(75),r=Math.pow,a=r(2,-52),o=r(2,-23),s=r(2,127)*(2-o),l=r(2,-126);t.exports=Math.fround||function(t){var e,n,r=Math.abs(t),c=i(t);return r<l?c*(r/l/o+1/a-1/a)*l*o:(n=(e=(1+o/a)*r)-(e-r))>s||n!=n?c*(1/0):c*n}},function(t,e,n){var i=n(1),r=Math.abs;i(i.S,"Math",{hypot:function(t,e){for(var n,i,a=0,o=0,s=arguments.length,l=0;o<s;)l<(n=r(arguments[o++]))?(a=a*(i=l/n)*i+1,l=n):a+=n>0?(i=n/l)*i:n;return l===1/0?1/0:l*Math.sqrt(a)}})},function(t,e,n){var i=n(1),r=Math.imul;i(i.S+i.F*n(4)((function(){return-5!=r(4294967295,5)||2!=r.length})),"Math",{imul:function(t,e){var n=+t,i=+e,r=65535&n,a=65535&i;return 0|r*a+((65535&n>>>16)*a+r*(65535&i>>>16)<<16>>>0)}})},function(t,e,n){var i=n(1);i(i.S,"Math",{log10:function(t){return Math.log(t)*Math.LOG10E}})},function(t,e,n){var i=n(1);i(i.S,"Math",{log1p:n(111)})},function(t,e,n){var i=n(1);i(i.S,"Math",{log2:function(t){return Math.log(t)/Math.LN2}})},function(t,e,n){var i=n(1);i(i.S,"Math",{sign:n(75)})},function(t,e,n){var i=n(1),r=n(76),a=Math.exp;i(i.S+i.F*n(4)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(t){return Math.abs(t=+t)<1?(r(t)-r(-t))/2:(a(t-1)-a(-t-1))*(Math.E/2)}})},function(t,e,n){var i=n(1),r=n(76),a=Math.exp;i(i.S,"Math",{tanh:function(t){var e=r(t=+t),n=r(-t);return e==1/0?1:n==1/0?-1:(e-n)/(a(t)+a(-t))}})},function(t,e,n){var i=n(1);i(i.S,"Math",{trunc:function(t){return(t>0?Math.floor:Math.ceil)(t)}})},function(t,e,n){var i=n(1),r=n(37),a=String.fromCharCode,o=String.fromCodePoint;i(i.S+i.F*(!!o&&1!=o.length),"String",{fromCodePoint:function(t){for(var e,n=[],i=arguments.length,o=0;i>o;){if(e=+arguments[o++],r(e,1114111)!==e)throw RangeError(e+" is not a valid code point");n.push(e<65536?a(e):a(55296+((e-=65536)>>10),e%1024+56320))}return n.join("")}})},function(t,e,n){var i=n(1),r=n(20),a=n(8);i(i.S,"String",{raw:function(t){for(var e=r(t.raw),n=a(e.length),i=arguments.length,o=[],s=0;n>s;)o.push(String(e[s++])),s<i&&o.push(String(arguments[s]));return o.join("")}})},function(t,e,n){"use strict";n(44)("trim",(function(t){return function(){return t(this,3)}}))},function(t,e,n){"use strict";var i=n(77)(!0);n(78)(String,"String",(function(t){this._t=String(t),this._i=0}),(function(){var t,e=this._t,n=this._i;return n>=e.length?{value:void 0,done:!0}:(t=i(e,n),this._i+=t.length,{value:t,done:!1})}))},function(t,e,n){"use strict";var i=n(1),r=n(77)(!1);i(i.P,"String",{codePointAt:function(t){return r(this,t)}})},function(t,e,n){"use strict";var i=n(1),r=n(8),a=n(79),o="".endsWith;i(i.P+i.F*n(81)("endsWith"),"String",{endsWith:function(t){var e=a(this,t,"endsWith"),n=arguments.length>1?arguments[1]:void 0,i=r(e.length),s=void 0===n?i:Math.min(r(n),i),l=String(t);return o?o.call(e,l,s):e.slice(s-l.length,s)===l}})},function(t,e,n){"use strict";var i=n(1),r=n(79);i(i.P+i.F*n(81)("includes"),"String",{includes:function(t){return!!~r(this,t,"includes").indexOf(t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var i=n(1);i(i.P,"String",{repeat:n(74)})},function(t,e,n){"use strict";var i=n(1),r=n(8),a=n(79),o="".startsWith;i(i.P+i.F*n(81)("startsWith"),"String",{startsWith:function(t){var e=a(this,t,"startsWith"),n=r(Math.min(arguments.length>1?arguments[1]:void 0,e.length)),i=String(t);return o?o.call(e,i,n):e.slice(n,n+i.length)===i}})},function(t,e,n){"use strict";n(15)("anchor",(function(t){return function(e){return t(this,"a","name",e)}}))},function(t,e,n){"use strict";n(15)("big",(function(t){return function(){return t(this,"big","","")}}))},function(t,e,n){"use strict";n(15)("blink",(function(t){return function(){return t(this,"blink","","")}}))},function(t,e,n){"use strict";n(15)("bold",(function(t){return function(){return t(this,"b","","")}}))},function(t,e,n){"use strict";n(15)("fixed",(function(t){return function(){return t(this,"tt","","")}}))},function(t,e,n){"use strict";n(15)("fontcolor",(function(t){return function(e){return t(this,"font","color",e)}}))},function(t,e,n){"use strict";n(15)("fontsize",(function(t){return function(e){return t(this,"font","size",e)}}))},function(t,e,n){"use strict";n(15)("italics",(function(t){return function(){return t(this,"i","","")}}))},function(t,e,n){"use strict";n(15)("link",(function(t){return function(e){return t(this,"a","href",e)}}))},function(t,e,n){"use strict";n(15)("small",(function(t){return function(){return t(this,"small","","")}}))},function(t,e,n){"use strict";n(15)("strike",(function(t){return function(){return t(this,"strike","","")}}))},function(t,e,n){"use strict";n(15)("sub",(function(t){return function(){return t(this,"sub","","")}}))},function(t,e,n){"use strict";n(15)("sup",(function(t){return function(){return t(this,"sup","","")}}))},function(t,e,n){var i=n(1);i(i.S,"Date",{now:function(){return(new Date).getTime()}})},function(t,e,n){"use strict";var i=n(1),r=n(13),a=n(31);i(i.P+i.F*n(4)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(t){var e=r(this),n=a(e);return"number"!=typeof n||isFinite(n)?e.toISOString():null}})},function(t,e,n){var i=n(1),r=n(232);i(i.P+i.F*(Date.prototype.toISOString!==r),"Date",{toISOString:r})},function(t,e,n){"use strict";var i=n(4),r=Date.prototype.getTime,a=Date.prototype.toISOString,o=function(t){return t>9?t:"0"+t};t.exports=i((function(){return"0385-07-25T07:06:39.999Z"!=a.call(new Date(-5e13-1))}))||!i((function(){a.call(new Date(NaN))}))?function(){if(!isFinite(r.call(this)))throw RangeError("Invalid time value");var t=this,e=t.getUTCFullYear(),n=t.getUTCMilliseconds(),i=e<0?"-":e>9999?"+":"";return i+("00000"+Math.abs(e)).slice(i?-6:-4)+"-"+o(t.getUTCMonth()+1)+"-"+o(t.getUTCDate())+"T"+o(t.getUTCHours())+":"+o(t.getUTCMinutes())+":"+o(t.getUTCSeconds())+"."+(n>99?n:"0"+o(n))+"Z"}:a},function(t,e,n){var i=Date.prototype,r=i.toString,a=i.getTime;new Date(NaN)+""!="Invalid Date"&&n(14)(i,"toString",(function(){var t=a.call(this);return t==t?r.call(this):"Invalid Date"}))},function(t,e,n){var i=n(7)("toPrimitive"),r=Date.prototype;i in r||n(19)(r,i,n(235))},function(t,e,n){"use strict";var i=n(5),r=n(31);t.exports=function(t){if("string"!==t&&"number"!==t&&"default"!==t)throw TypeError("Incorrect hint");return r(i(this),"number"!=t)}},function(t,e,n){var i=n(1);i(i.S,"Array",{isArray:n(56)})},function(t,e,n){"use strict";var i=n(22),r=n(1),a=n(13),o=n(113),s=n(82),l=n(8),c=n(83),u=n(84);r(r.S+r.F*!n(57)((function(t){Array.from(t)})),"Array",{from:function(t){var e,n,r,h,f=a(t),d="function"==typeof this?this:Array,p=arguments.length,g=p>1?arguments[1]:void 0,m=void 0!==g,v=0,x=u(f);if(m&&(g=i(g,p>2?arguments[2]:void 0,2)),null==x||d==Array&&s(x))for(n=new d(e=l(f.length));e>v;v++)c(n,v,m?g(f[v],v):f[v]);else for(h=x.call(f),n=new d;!(r=h.next()).done;v++)c(n,v,m?o(h,g,[r.value,v],!0):r.value);return n.length=v,n}})},function(t,e,n){"use strict";var i=n(1),r=n(83);i(i.S+i.F*n(4)((function(){function t(){}return!(Array.of.call(t)instanceof t)})),"Array",{of:function(){for(var t=0,e=arguments.length,n=new("function"==typeof this?this:Array)(e);e>t;)r(n,t,arguments[t++]);return n.length=e,n}})},function(t,e,n){"use strict";var i=n(1),r=n(20),a=[].join;i(i.P+i.F*(n(49)!=Object||!n(21)(a)),"Array",{join:function(t){return a.call(r(this),void 0===t?",":t)}})},function(t,e,n){"use strict";var i=n(1),r=n(70),a=n(28),o=n(37),s=n(8),l=[].slice;i(i.P+i.F*n(4)((function(){r&&l.call(r)})),"Array",{slice:function(t,e){var n=s(this.length),i=a(this);if(e=void 0===e?n:e,"Array"==i)return l.call(this,t,e);for(var r=o(t,n),c=o(e,n),u=s(c-r),h=new Array(u),f=0;f<u;f++)h[f]="String"==i?this.charAt(r+f):this[r+f];return h}})},function(t,e,n){"use strict";var i=n(1),r=n(23),a=n(13),o=n(4),s=[].sort,l=[1,2,3];i(i.P+i.F*(o((function(){l.sort(void 0)}))||!o((function(){l.sort(null)}))||!n(21)(s)),"Array",{sort:function(t){return void 0===t?s.call(a(this)):s.call(a(this),r(t))}})},function(t,e,n){"use strict";var i=n(1),r=n(27)(0),a=n(21)([].forEach,!0);i(i.P+i.F*!a,"Array",{forEach:function(t){return r(this,t,arguments[1])}})},function(t,e,n){var i=n(6),r=n(56),a=n(7)("species");t.exports=function(t){var e;return r(t)&&("function"!=typeof(e=t.constructor)||e!==Array&&!r(e.prototype)||(e=void 0),i(e)&&null===(e=e[a])&&(e=void 0)),void 0===e?Array:e}},function(t,e,n){"use strict";var i=n(1),r=n(27)(1);i(i.P+i.F*!n(21)([].map,!0),"Array",{map:function(t){return r(this,t,arguments[1])}})},function(t,e,n){"use strict";var i=n(1),r=n(27)(2);i(i.P+i.F*!n(21)([].filter,!0),"Array",{filter:function(t){return r(this,t,arguments[1])}})},function(t,e,n){"use strict";var i=n(1),r=n(27)(3);i(i.P+i.F*!n(21)([].some,!0),"Array",{some:function(t){return r(this,t,arguments[1])}})},function(t,e,n){"use strict";var i=n(1),r=n(27)(4);i(i.P+i.F*!n(21)([].every,!0),"Array",{every:function(t){return r(this,t,arguments[1])}})},function(t,e,n){"use strict";var i=n(1),r=n(115);i(i.P+i.F*!n(21)([].reduce,!0),"Array",{reduce:function(t){return r(this,t,arguments.length,arguments[1],!1)}})},function(t,e,n){"use strict";var i=n(1),r=n(115);i(i.P+i.F*!n(21)([].reduceRight,!0),"Array",{reduceRight:function(t){return r(this,t,arguments.length,arguments[1],!0)}})},function(t,e,n){"use strict";var i=n(1),r=n(54)(!1),a=[].indexOf,o=!!a&&1/[1].indexOf(1,-0)<0;i(i.P+i.F*(o||!n(21)(a)),"Array",{indexOf:function(t){return o?a.apply(this,arguments)||0:r(this,t,arguments[1])}})},function(t,e,n){"use strict";var i=n(1),r=n(20),a=n(24),o=n(8),s=[].lastIndexOf,l=!!s&&1/[1].lastIndexOf(1,-0)<0;i(i.P+i.F*(l||!n(21)(s)),"Array",{lastIndexOf:function(t){if(l)return s.apply(this,arguments)||0;var e=r(this),n=o(e.length),i=n-1;for(arguments.length>1&&(i=Math.min(i,a(arguments[1]))),i<0&&(i=n+i);i>=0;i--)if(i in e&&e[i]===t)return i||0;return-1}})},function(t,e,n){var i=n(1);i(i.P,"Array",{copyWithin:n(116)}),n(41)("copyWithin")},function(t,e,n){var i=n(1);i(i.P,"Array",{fill:n(85)}),n(41)("fill")},function(t,e,n){"use strict";var i=n(1),r=n(27)(5),a=!0;"find"in[]&&Array(1).find((function(){a=!1})),i(i.P+i.F*a,"Array",{find:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}}),n(41)("find")},function(t,e,n){"use strict";var i=n(1),r=n(27)(6),a="findIndex",o=!0;a in[]&&Array(1)[a]((function(){o=!1})),i(i.P+i.F*o,"Array",{findIndex:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}}),n(41)(a)},function(t,e,n){n(46)("Array")},function(t,e,n){var i=n(3),r=n(73),a=n(11).f,o=n(39).f,s=n(80),l=n(58),c=i.RegExp,u=c,h=c.prototype,f=/a/g,d=/a/g,p=new c(f)!==f;if(n(10)&&(!p||n(4)((function(){return d[n(7)("match")]=!1,c(f)!=f||c(d)==d||"/a/i"!=c(f,"i")})))){c=function(t,e){var n=this instanceof c,i=s(t),a=void 0===e;return!n&&i&&t.constructor===c&&a?t:r(p?new u(i&&!a?t.source:t,e):u((i=t instanceof c)?t.source:t,i&&a?l.call(t):e),n?this:h,c)};for(var g=function(t){t in c||a(c,t,{configurable:!0,get:function(){return u[t]},set:function(e){u[t]=e}})},m=o(u),v=0;m.length>v;)g(m[v++]);h.constructor=c,c.prototype=h,n(14)(i,"RegExp",c)}n(46)("RegExp")},function(t,e,n){"use strict";n(119);var i=n(5),r=n(58),a=n(10),o=/./.toString,s=function(t){n(14)(RegExp.prototype,"toString",t,!0)};n(4)((function(){return"/a/b"!=o.call({source:"a",flags:"b"})}))?s((function(){var t=i(this);return"/".concat(t.source,"/","flags"in t?t.flags:!a&&t instanceof RegExp?r.call(t):void 0)})):"toString"!=o.name&&s((function(){return o.call(this)}))},function(t,e,n){"use strict";var i=n(5),r=n(8),a=n(88),o=n(59);n(60)("match",1,(function(t,e,n,s){return[function(n){var i=t(this),r=null==n?void 0:n[e];return void 0!==r?r.call(n,i):new RegExp(n)[e](String(i))},function(t){var e=s(n,t,this);if(e.done)return e.value;var l=i(t),c=String(this);if(!l.global)return o(l,c);var u=l.unicode;l.lastIndex=0;for(var h,f=[],d=0;null!==(h=o(l,c));){var p=String(h[0]);f[d]=p,""===p&&(l.lastIndex=a(c,r(l.lastIndex),u)),d++}return 0===d?null:f}]}))},function(t,e,n){"use strict";var i=n(5),r=n(13),a=n(8),o=n(24),s=n(88),l=n(59),c=Math.max,u=Math.min,h=Math.floor,f=/\$([$&`']|\d\d?|<[^>]*>)/g,d=/\$([$&`']|\d\d?)/g;n(60)("replace",2,(function(t,e,n,p){return[function(i,r){var a=t(this),o=null==i?void 0:i[e];return void 0!==o?o.call(i,a,r):n.call(String(a),i,r)},function(t,e){var r=p(n,t,this,e);if(r.done)return r.value;var h=i(t),f=String(this),d="function"==typeof e;d||(e=String(e));var m=h.global;if(m){var v=h.unicode;h.lastIndex=0}for(var x=[];;){var b=l(h,f);if(null===b)break;if(x.push(b),!m)break;""===String(b[0])&&(h.lastIndex=s(f,a(h.lastIndex),v))}for(var y,w="",k=0,S=0;S<x.length;S++){b=x[S];for(var C=String(b[0]),A=c(u(o(b.index),f.length),0),E=[],P=1;P<b.length;P++)E.push(void 0===(y=b[P])?y:String(y));var T=b.groups;if(d){var O=[C].concat(E,A,f);void 0!==T&&O.push(T);var L=String(e.apply(void 0,O))}else L=g(C,f,A,E,T,e);A>=k&&(w+=f.slice(k,A)+L,k=A+C.length)}return w+f.slice(k)}];function g(t,e,i,a,o,s){var l=i+t.length,c=a.length,u=d;return void 0!==o&&(o=r(o),u=f),n.call(s,u,(function(n,r){var s;switch(r.charAt(0)){case"$":return"$";case"&":return t;case"`":return e.slice(0,i);case"'":return e.slice(l);case"<":s=o[r.slice(1,-1)];break;default:var u=+r;if(0===u)return n;if(u>c){var f=h(u/10);return 0===f?n:f<=c?void 0===a[f-1]?r.charAt(1):a[f-1]+r.charAt(1):n}s=a[u-1]}return void 0===s?"":s}))}}))},function(t,e,n){"use strict";var i=n(5),r=n(104),a=n(59);n(60)("search",1,(function(t,e,n,o){return[function(n){var i=t(this),r=null==n?void 0:n[e];return void 0!==r?r.call(n,i):new RegExp(n)[e](String(i))},function(t){var e=o(n,t,this);if(e.done)return e.value;var s=i(t),l=String(this),c=s.lastIndex;r(c,0)||(s.lastIndex=0);var u=a(s,l);return r(s.lastIndex,c)||(s.lastIndex=c),null===u?-1:u.index}]}))},function(t,e,n){"use strict";var i=n(80),r=n(5),a=n(52),o=n(88),s=n(8),l=n(59),c=n(87),u=n(4),h=Math.min,f=[].push,d=!u((function(){RegExp(4294967295,"y")}));n(60)("split",2,(function(t,e,n,u){var p;return p="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(t,e){var r=String(this);if(void 0===t&&0===e)return[];if(!i(t))return n.call(r,t,e);for(var a,o,s,l=[],u=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),h=0,d=void 0===e?4294967295:e>>>0,p=new RegExp(t.source,u+"g");(a=c.call(p,r))&&!((o=p.lastIndex)>h&&(l.push(r.slice(h,a.index)),a.length>1&&a.index<r.length&&f.apply(l,a.slice(1)),s=a[0].length,h=o,l.length>=d));)p.lastIndex===a.index&&p.lastIndex++;return h===r.length?!s&&p.test("")||l.push(""):l.push(r.slice(h)),l.length>d?l.slice(0,d):l}:"0".split(void 0,0).length?function(t,e){return void 0===t&&0===e?[]:n.call(this,t,e)}:n,[function(n,i){var r=t(this),a=null==n?void 0:n[e];return void 0!==a?a.call(n,r,i):p.call(String(r),n,i)},function(t,e){var i=u(p,t,this,e,p!==n);if(i.done)return i.value;var c=r(t),f=String(this),g=a(c,RegExp),m=c.unicode,v=(c.ignoreCase?"i":"")+(c.multiline?"m":"")+(c.unicode?"u":"")+(d?"y":"g"),x=new g(d?c:"^(?:"+c.source+")",v),b=void 0===e?4294967295:e>>>0;if(0===b)return[];if(0===f.length)return null===l(x,f)?[f]:[];for(var y=0,w=0,k=[];w<f.length;){x.lastIndex=d?w:0;var S,C=l(x,d?f:f.slice(w));if(null===C||(S=h(s(x.lastIndex+(d?0:w)),f.length))===y)w=o(f,w,m);else{if(k.push(f.slice(y,w)),k.length===b)return k;for(var A=1;A<=C.length-1;A++)if(k.push(C[A]),k.length===b)return k;w=y=S}}return k.push(f.slice(y)),k}]}))},function(t,e,n){var i=n(3),r=n(89).set,a=i.MutationObserver||i.WebKitMutationObserver,o=i.process,s=i.Promise,l="process"==n(28)(o);t.exports=function(){var t,e,n,c=function(){var i,r;for(l&&(i=o.domain)&&i.exit();t;){r=t.fn,t=t.next;try{r()}catch(i){throw t?n():e=void 0,i}}e=void 0,i&&i.enter()};if(l)n=function(){o.nextTick(c)};else if(!a||i.navigator&&i.navigator.standalone)if(s&&s.resolve){var u=s.resolve(void 0);n=function(){u.then(c)}}else n=function(){r.call(i,c)};else{var h=!0,f=document.createTextNode("");new a(c).observe(f,{characterData:!0}),n=function(){f.data=h=!h}}return function(i){var r={fn:i,next:void 0};e&&(e.next=r),t||(t=r,n()),e=r}}},function(t,e){t.exports=function(t){try{return{e:!1,v:t()}}catch(t){return{e:!0,v:t}}}},function(t,e,n){"use strict";var i=n(123),r=n(42);t.exports=n(63)("Map",(function(t){return function(){return t(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(t){var e=i.getEntry(r(this,"Map"),t);return e&&e.v},set:function(t,e){return i.def(r(this,"Map"),0===t?0:t,e)}},i,!0)},function(t,e,n){"use strict";var i=n(123),r=n(42);t.exports=n(63)("Set",(function(t){return function(){return t(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(t){return i.def(r(this,"Set"),t=0===t?0:t,t)}},i)},function(t,e,n){"use strict";var i,r=n(3),a=n(27)(0),o=n(14),s=n(32),l=n(103),c=n(124),u=n(6),h=n(42),f=n(42),d=!r.ActiveXObject&&"ActiveXObject"in r,p=s.getWeak,g=Object.isExtensible,m=c.ufstore,v=function(t){return function(){return t(this,arguments.length>0?arguments[0]:void 0)}},x={get:function(t){if(u(t)){var e=p(t);return!0===e?m(h(this,"WeakMap")).get(t):e?e[this._i]:void 0}},set:function(t,e){return c.def(h(this,"WeakMap"),t,e)}},b=t.exports=n(63)("WeakMap",v,x,c,!0,!0);f&&d&&(l((i=c.getConstructor(v,"WeakMap")).prototype,x),s.NEED=!0,a(["delete","has","get","set"],(function(t){var e=b.prototype,n=e[t];o(e,t,(function(e,r){if(u(e)&&!g(e)){this._f||(this._f=new i);var a=this._f[t](e,r);return"set"==t?this:a}return n.call(this,e,r)}))})))},function(t,e,n){"use strict";var i=n(124),r=n(42);n(63)("WeakSet",(function(t){return function(){return t(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(t){return i.def(r(this,"WeakSet"),t,!0)}},i,!1,!0)},function(t,e,n){"use strict";var i=n(1),r=n(64),a=n(90),o=n(5),s=n(37),l=n(8),c=n(6),u=n(3).ArrayBuffer,h=n(52),f=a.ArrayBuffer,d=a.DataView,p=r.ABV&&u.isView,g=f.prototype.slice,m=r.VIEW;i(i.G+i.W+i.F*(u!==f),{ArrayBuffer:f}),i(i.S+i.F*!r.CONSTR,"ArrayBuffer",{isView:function(t){return p&&p(t)||c(t)&&m in t}}),i(i.P+i.U+i.F*n(4)((function(){return!new f(2).slice(1,void 0).byteLength})),"ArrayBuffer",{slice:function(t,e){if(void 0!==g&&void 0===e)return g.call(o(this),t);for(var n=o(this).byteLength,i=s(t,n),r=s(void 0===e?n:e,n),a=new(h(this,f))(l(r-i)),c=new d(this),u=new d(a),p=0;i<r;)u.setUint8(p++,c.getUint8(i++));return a}}),n(46)("ArrayBuffer")},function(t,e,n){var i=n(1);i(i.G+i.W+i.F*!n(64).ABV,{DataView:n(90).DataView})},function(t,e,n){n(30)("Int8",1,(function(t){return function(e,n,i){return t(this,e,n,i)}}))},function(t,e,n){n(30)("Uint8",1,(function(t){return function(e,n,i){return t(this,e,n,i)}}))},function(t,e,n){n(30)("Uint8",1,(function(t){return function(e,n,i){return t(this,e,n,i)}}),!0)},function(t,e,n){n(30)("Int16",2,(function(t){return function(e,n,i){return t(this,e,n,i)}}))},function(t,e,n){n(30)("Uint16",2,(function(t){return function(e,n,i){return t(this,e,n,i)}}))},function(t,e,n){n(30)("Int32",4,(function(t){return function(e,n,i){return t(this,e,n,i)}}))},function(t,e,n){n(30)("Uint32",4,(function(t){return function(e,n,i){return t(this,e,n,i)}}))},function(t,e,n){n(30)("Float32",4,(function(t){return function(e,n,i){return t(this,e,n,i)}}))},function(t,e,n){n(30)("Float64",8,(function(t){return function(e,n,i){return t(this,e,n,i)}}))},function(t,e,n){var i=n(1),r=n(23),a=n(5),o=(n(3).Reflect||{}).apply,s=Function.apply;i(i.S+i.F*!n(4)((function(){o((function(){}))})),"Reflect",{apply:function(t,e,n){var i=r(t),l=a(n);return o?o(i,e,l):s.call(i,e,l)}})},function(t,e,n){var i=n(1),r=n(38),a=n(23),o=n(5),s=n(6),l=n(4),c=n(105),u=(n(3).Reflect||{}).construct,h=l((function(){function t(){}return!(u((function(){}),[],t)instanceof t)})),f=!l((function(){u((function(){}))}));i(i.S+i.F*(h||f),"Reflect",{construct:function(t,e){a(t),o(e);var n=arguments.length<3?t:a(arguments[2]);if(f&&!h)return u(t,e,n);if(t==n){switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3])}var i=[null];return i.push.apply(i,e),new(c.apply(t,i))}var l=n.prototype,d=r(s(l)?l:Object.prototype),p=Function.apply.call(t,d,e);return s(p)?p:d}})},function(t,e,n){var i=n(11),r=n(1),a=n(5),o=n(31);r(r.S+r.F*n(4)((function(){Reflect.defineProperty(i.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(t,e,n){a(t),e=o(e,!0),a(n);try{return i.f(t,e,n),!0}catch(t){return!1}}})},function(t,e,n){var i=n(1),r=n(25).f,a=n(5);i(i.S,"Reflect",{deleteProperty:function(t,e){var n=r(a(t),e);return!(n&&!n.configurable)&&delete t[e]}})},function(t,e,n){"use strict";var i=n(1),r=n(5),a=function(t){this._t=r(t),this._i=0;var e,n=this._k=[];for(e in t)n.push(e)};n(112)(a,"Object",(function(){var t,e=this._k;do{if(this._i>=e.length)return{value:void 0,done:!0}}while(!((t=e[this._i++])in this._t));return{value:t,done:!1}})),i(i.S,"Reflect",{enumerate:function(t){return new a(t)}})},function(t,e,n){var i=n(25),r=n(40),a=n(18),o=n(1),s=n(6),l=n(5);o(o.S,"Reflect",{get:function t(e,n){var o,c,u=arguments.length<3?e:arguments[2];return l(e)===u?e[n]:(o=i.f(e,n))?a(o,"value")?o.value:void 0!==o.get?o.get.call(u):void 0:s(c=r(e))?t(c,n,u):void 0}})},function(t,e,n){var i=n(25),r=n(1),a=n(5);r(r.S,"Reflect",{getOwnPropertyDescriptor:function(t,e){return i.f(a(t),e)}})},function(t,e,n){var i=n(1),r=n(40),a=n(5);i(i.S,"Reflect",{getPrototypeOf:function(t){return r(a(t))}})},function(t,e,n){var i=n(1);i(i.S,"Reflect",{has:function(t,e){return e in t}})},function(t,e,n){var i=n(1),r=n(5),a=Object.isExtensible;i(i.S,"Reflect",{isExtensible:function(t){return r(t),!a||a(t)}})},function(t,e,n){var i=n(1);i(i.S,"Reflect",{ownKeys:n(126)})},function(t,e,n){var i=n(1),r=n(5),a=Object.preventExtensions;i(i.S,"Reflect",{preventExtensions:function(t){r(t);try{return a&&a(t),!0}catch(t){return!1}}})},function(t,e,n){var i=n(11),r=n(25),a=n(40),o=n(18),s=n(1),l=n(33),c=n(5),u=n(6);s(s.S,"Reflect",{set:function t(e,n,s){var h,f,d=arguments.length<4?e:arguments[3],p=r.f(c(e),n);if(!p){if(u(f=a(e)))return t(f,n,s,d);p=l(0)}if(o(p,"value")){if(!1===p.writable||!u(d))return!1;if(h=r.f(d,n)){if(h.get||h.set||!1===h.writable)return!1;h.value=s,i.f(d,n,h)}else i.f(d,n,l(0,s));return!0}return void 0!==p.set&&(p.set.call(d,s),!0)}})},function(t,e,n){var i=n(1),r=n(71);r&&i(i.S,"Reflect",{setPrototypeOf:function(t,e){r.check(t,e);try{return r.set(t,e),!0}catch(t){return!1}}})},function(t,e,n){n(295),t.exports=n(9).Array.includes},function(t,e,n){"use strict";var i=n(1),r=n(54)(!0);i(i.P,"Array",{includes:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}}),n(41)("includes")},function(t,e,n){n(297),t.exports=n(9).Array.flatMap},function(t,e,n){"use strict";var i=n(1),r=n(298),a=n(13),o=n(8),s=n(23),l=n(114);i(i.P,"Array",{flatMap:function(t){var e,n,i=a(this);return s(t),e=o(i.length),n=l(i,0),r(n,i,i,e,0,1,t,arguments[1]),n}}),n(41)("flatMap")},function(t,e,n){"use strict";var i=n(56),r=n(6),a=n(8),o=n(22),s=n(7)("isConcatSpreadable");t.exports=function t(e,n,l,c,u,h,f,d){for(var p,g,m=u,v=0,x=!!f&&o(f,d,3);v<c;){if(v in l){if(p=x?x(l[v],v,n):l[v],g=!1,r(p)&&(g=void 0!==(g=p[s])?!!g:i(p)),g&&h>0)m=t(e,n,p,a(p.length),m,h-1)-1;else{if(m>=9007199254740991)throw TypeError();e[m]=p}m++}v++}return m}},function(t,e,n){n(300),t.exports=n(9).String.padStart},function(t,e,n){"use strict";var i=n(1),r=n(127),a=n(62),o=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(a);i(i.P+i.F*o,"String",{padStart:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0,!0)}})},function(t,e,n){n(302),t.exports=n(9).String.padEnd},function(t,e,n){"use strict";var i=n(1),r=n(127),a=n(62),o=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(a);i(i.P+i.F*o,"String",{padEnd:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0,!1)}})},function(t,e,n){n(304),t.exports=n(9).String.trimLeft},function(t,e,n){"use strict";n(44)("trimLeft",(function(t){return function(){return t(this,1)}}),"trimStart")},function(t,e,n){n(306),t.exports=n(9).String.trimRight},function(t,e,n){"use strict";n(44)("trimRight",(function(t){return function(){return t(this,2)}}),"trimEnd")},function(t,e,n){n(308),t.exports=n(67).f("asyncIterator")},function(t,e,n){n(99)("asyncIterator")},function(t,e,n){n(310),t.exports=n(9).Object.getOwnPropertyDescriptors},function(t,e,n){var i=n(1),r=n(126),a=n(20),o=n(25),s=n(83);i(i.S,"Object",{getOwnPropertyDescriptors:function(t){for(var e,n,i=a(t),l=o.f,c=r(i),u={},h=0;c.length>h;)void 0!==(n=l(i,e=c[h++]))&&s(u,e,n);return u}})},function(t,e,n){n(312),t.exports=n(9).Object.values},function(t,e,n){var i=n(1),r=n(128)(!1);i(i.S,"Object",{values:function(t){return r(t)}})},function(t,e,n){n(314),t.exports=n(9).Object.entries},function(t,e,n){var i=n(1),r=n(128)(!0);i(i.S,"Object",{entries:function(t){return r(t)}})},function(t,e,n){"use strict";n(120),n(316),t.exports=n(9).Promise.finally},function(t,e,n){"use strict";var i=n(1),r=n(9),a=n(3),o=n(52),s=n(122);i(i.P+i.R,"Promise",{finally:function(t){var e=o(this,r.Promise||a.Promise),n="function"==typeof t;return this.then(n?function(n){return s(e,t()).then((function(){return n}))}:t,n?function(n){return s(e,t()).then((function(){throw n}))}:t)}})},function(t,e,n){n(318),n(319),n(320),t.exports=n(9)},function(t,e,n){var i=n(3),r=n(1),a=n(62),o=[].slice,s=/MSIE .\./.test(a),l=function(t){return function(e,n){var i=arguments.length>2,r=!!i&&o.call(arguments,2);return t(i?function(){("function"==typeof e?e:Function(e)).apply(this,r)}:e,n)}};r(r.G+r.B+r.F*s,{setTimeout:l(i.setTimeout),setInterval:l(i.setInterval)})},function(t,e,n){var i=n(1),r=n(89);i(i.G+i.B,{setImmediate:r.set,clearImmediate:r.clear})},function(t,e,n){for(var i=n(86),r=n(36),a=n(14),o=n(3),s=n(19),l=n(45),c=n(7),u=c("iterator"),h=c("toStringTag"),f=l.Array,d={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},p=r(d),g=0;g<p.length;g++){var m,v=p[g],x=d[v],b=o[v],y=b&&b.prototype;if(y&&(y[u]||s(y,u,f),y[h]||s(y,h,v),l[v]=f,x))for(m in i)y[m]||a(y,m,i[m],!0)}},function(t,e,n){var i=function(t){"use strict";var e=Object.prototype,n=e.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",a=i.asyncIterator||"@@asyncIterator",o=i.toStringTag||"@@toStringTag";function s(t,e,n,i){var r=e&&e.prototype instanceof u?e:u,a=Object.create(r.prototype),o=new k(i||[]);return a._invoke=function(t,e,n){var i="suspendedStart";return function(r,a){if("executing"===i)throw new Error("Generator is already running");if("completed"===i){if("throw"===r)throw a;return C()}for(n.method=r,n.arg=a;;){var o=n.delegate;if(o){var s=b(o,n);if(s){if(s===c)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===i)throw i="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i="executing";var u=l(t,e,n);if("normal"===u.type){if(i=n.done?"completed":"suspendedYield",u.arg===c)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(i="completed",n.method="throw",n.arg=u.arg)}}}(t,n,o),a}function l(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=s;var c={};function u(){}function h(){}function f(){}var d={};d[r]=function(){return this};var p=Object.getPrototypeOf,g=p&&p(p(S([])));g&&g!==e&&n.call(g,r)&&(d=g);var m=f.prototype=u.prototype=Object.create(d);function v(t){["next","throw","return"].forEach((function(e){t[e]=function(t){return this._invoke(e,t)}}))}function x(t,e){var i;this._invoke=function(r,a){function o(){return new e((function(i,o){!function i(r,a,o,s){var c=l(t[r],t,a);if("throw"!==c.type){var u=c.arg,h=u.value;return h&&"object"==typeof h&&n.call(h,"__await")?e.resolve(h.__await).then((function(t){i("next",t,o,s)}),(function(t){i("throw",t,o,s)})):e.resolve(h).then((function(t){u.value=t,o(u)}),(function(t){return i("throw",t,o,s)}))}s(c.arg)}(r,a,i,o)}))}return i=i?i.then(o,o):o()}}function b(t,e){var n=t.iterator[e.method];if(void 0===n){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=void 0,b(t,e),"throw"===e.method))return c;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return c}var i=l(n,t.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,c;var r=i.arg;return r?r.done?(e[t.resultName]=r.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,c):r:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,c)}function y(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function w(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function k(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(y,this),this.reset(!0)}function S(t){if(t){var e=t[r];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var i=-1,a=function e(){for(;++i<t.length;)if(n.call(t,i))return e.value=t[i],e.done=!1,e;return e.value=void 0,e.done=!0,e};return a.next=a}}return{next:C}}function C(){return{value:void 0,done:!0}}return h.prototype=m.constructor=f,f.constructor=h,f[o]=h.displayName="GeneratorFunction",t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===h||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,f):(t.__proto__=f,o in t||(t[o]="GeneratorFunction")),t.prototype=Object.create(m),t},t.awrap=function(t){return{__await:t}},v(x.prototype),x.prototype[a]=function(){return this},t.AsyncIterator=x,t.async=function(e,n,i,r,a){void 0===a&&(a=Promise);var o=new x(s(e,n,i,r),a);return t.isGeneratorFunction(n)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},v(m),m[o]="Generator",m[r]=function(){return this},m.toString=function(){return"[object Generator]"},t.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var i=e.pop();if(i in t)return n.value=i,n.done=!1,n}return n.done=!0,n}},t.values=S,k.prototype={constructor:k,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!t)for(var e in this)"t"===e.charAt(0)&&n.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function i(n,i){return o.type="throw",o.arg=t,e.next=n,i&&(e.method="next",e.arg=void 0),!!i}for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r],o=a.completion;if("root"===a.tryLoc)return i("end");if(a.tryLoc<=this.prev){var s=n.call(a,"catchLoc"),l=n.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(t,e){for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i];if(r.tryLoc<=this.prev&&n.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var a=r;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,c):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),c},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),w(n),c}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var i=n.completion;if("throw"===i.type){var r=i.arg;w(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:S(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),c}},t}(t.exports);try{regeneratorRuntime=i}catch(t){Function("r","regeneratorRuntime = r")(i)}},function(t,e,n){n(323),t.exports=n(129).global},function(t,e,n){var i=n(324);i(i.G,{global:n(91)})},function(t,e,n){var i=n(91),r=n(129),a=n(325),o=n(327),s=n(334),l=function(t,e,n){var c,u,h,f=t&l.F,d=t&l.G,p=t&l.S,g=t&l.P,m=t&l.B,v=t&l.W,x=d?r:r[e]||(r[e]={}),b=x.prototype,y=d?i:p?i[e]:(i[e]||{}).prototype;for(c in d&&(n=e),n)(u=!f&&y&&void 0!==y[c])&&s(x,c)||(h=u?y[c]:n[c],x[c]=d&&"function"!=typeof y[c]?n[c]:m&&u?a(h,i):v&&y[c]==h?function(t){var e=function(e,n,i){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,i)}return t.apply(this,arguments)};return e.prototype=t.prototype,e}(h):g&&"function"==typeof h?a(Function.call,h):h,g&&((x.virtual||(x.virtual={}))[c]=h,t&l.R&&b&&!b[c]&&o(b,c,h)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,t.exports=l},function(t,e,n){var i=n(326);t.exports=function(t,e,n){if(i(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,i){return t.call(e,n,i)};case 3:return function(n,i,r){return t.call(e,n,i,r)}}return function(){return t.apply(e,arguments)}}},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e,n){var i=n(328),r=n(333);t.exports=n(93)?function(t,e,n){return i.f(t,e,r(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var i=n(329),r=n(330),a=n(332),o=Object.defineProperty;e.f=n(93)?Object.defineProperty:function(t,e,n){if(i(t),e=a(e,!0),i(n),r)try{return o(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e,n){var i=n(92);t.exports=function(t){if(!i(t))throw TypeError(t+" is not an object!");return t}},function(t,e,n){t.exports=!n(93)&&!n(130)((function(){return 7!=Object.defineProperty(n(331)("div"),"a",{get:function(){return 7}}).a}))},function(t,e,n){var i=n(92),r=n(91).document,a=i(r)&&i(r.createElement);t.exports=function(t){return a?r.createElement(t):{}}},function(t,e,n){var i=n(92);t.exports=function(t,e){if(!i(t))return t;var n,r;if(e&&"function"==typeof(n=t.toString)&&!i(r=n.call(t)))return r;if("function"==typeof(n=t.valueOf)&&!i(r=n.call(t)))return r;if(!e&&"function"==typeof(n=t.toString)&&!i(r=n.call(t)))return r;throw TypeError("Can't convert object to primitive value")}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){"use strict";var i=n(131),r="function"==typeof Symbol&&Symbol.for,a=r?Symbol.for("react.element"):60103,o=r?Symbol.for("react.portal"):60106,s=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,c=r?Symbol.for("react.profiler"):60114,u=r?Symbol.for("react.provider"):60109,h=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.concurrent_mode"):60111,d=r?Symbol.for("react.forward_ref"):60112,p=r?Symbol.for("react.suspense"):60113,g=r?Symbol.for("react.memo"):60115,m=r?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function x(t,e,n,i,r,a,o,s){if(!t){if(t=void 0,void 0===e)t=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,i,r,a,o,s],c=0;(t=Error(e.replace(/%s/g,(function(){return l[c++]})))).name="Invariant Violation"}throw t.framesToPop=1,t}}function b(t){for(var e=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+t,i=0;i<e;i++)n+="&args[]="+encodeURIComponent(arguments[i+1]);x(!1,"Minified React error #"+t+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function k(t,e,n){this.props=t,this.context=e,this.refs=w,this.updater=n||y}function S(){}function C(t,e,n){this.props=t,this.context=e,this.refs=w,this.updater=n||y}k.prototype.isReactComponent={},k.prototype.setState=function(t,e){"object"!=typeof t&&"function"!=typeof t&&null!=t&&b("85"),this.updater.enqueueSetState(this,t,e,"setState")},k.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},S.prototype=k.prototype;var A=C.prototype=new S;A.constructor=C,i(A,k.prototype),A.isPureReactComponent=!0;var E={current:null},P={current:null},T=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function L(t,e,n){var i=void 0,r={},o=null,s=null;if(null!=e)for(i in void 0!==e.ref&&(s=e.ref),void 0!==e.key&&(o=""+e.key),e)T.call(e,i)&&!O.hasOwnProperty(i)&&(r[i]=e[i]);var l=arguments.length-2;if(1===l)r.children=n;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];r.children=c}if(t&&t.defaultProps)for(i in l=t.defaultProps)void 0===r[i]&&(r[i]=l[i]);return{$$typeof:a,type:t,key:o,ref:s,props:r,_owner:P.current}}function M(t){return"object"==typeof t&&null!==t&&t.$$typeof===a}var _=/\/+/g,I=[];function N(t,e,n,i){if(I.length){var r=I.pop();return r.result=t,r.keyPrefix=e,r.func=n,r.context=i,r.count=0,r}return{result:t,keyPrefix:e,func:n,context:i,count:0}}function R(t){t.result=null,t.keyPrefix=null,t.func=null,t.context=null,t.count=0,10>I.length&&I.push(t)}function z(t,e,n){return null==t?0:function t(e,n,i,r){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case a:case o:l=!0}}if(l)return i(r,e,""===n?"."+F(e,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(e))for(var c=0;c<e.length;c++){var u=n+F(s=e[c],c);l+=t(s,u,i,r)}else if(null===e||"object"!=typeof e?u=null:u="function"==typeof(u=v&&e[v]||e["@@iterator"])?u:null,"function"==typeof u)for(e=u.call(e),c=0;!(s=e.next()).done;)l+=t(s=s.value,u=n+F(s,c++),i,r);else"object"===s&&b("31","[object Object]"===(i=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":i,"");return l}(t,"",e,n)}function F(t,e){return"object"==typeof t&&null!==t&&null!=t.key?function(t){var e={"=":"=0",":":"=2"};return"$"+(""+t).replace(/[=:]/g,(function(t){return e[t]}))}(t.key):e.toString(36)}function D(t,e){t.func.call(t.context,e,t.count++)}function X(t,e,n){var i=t.result,r=t.keyPrefix;t=t.func.call(t.context,e,t.count++),Array.isArray(t)?Y(t,i,n,(function(t){return t})):null!=t&&(M(t)&&(t=function(t,e){return{$$typeof:a,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(t,r+(!t.key||e&&e.key===t.key?"":(""+t.key).replace(_,"$&/")+"/")+n)),i.push(t))}function Y(t,e,n,i,r){var a="";null!=n&&(a=(""+n).replace(_,"$&/")+"/"),z(t,X,e=N(e,a,i,r)),R(e)}function j(){var t=E.current;return null===t&&b("307"),t}var W={Children:{map:function(t,e,n){if(null==t)return t;var i=[];return Y(t,i,null,e,n),i},forEach:function(t,e,n){if(null==t)return t;z(t,D,e=N(null,null,e,n)),R(e)},count:function(t){return z(t,(function(){return null}),null)},toArray:function(t){var e=[];return Y(t,e,null,(function(t){return t})),e},only:function(t){return M(t)||b("143"),t}},createRef:function(){return{current:null}},Component:k,PureComponent:C,createContext:function(t,e){return void 0===e&&(e=null),(t={$$typeof:h,_calculateChangedBits:e,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:u,_context:t},t.Consumer=t},forwardRef:function(t){return{$$typeof:d,render:t}},lazy:function(t){return{$$typeof:m,_ctor:t,_status:-1,_result:null}},memo:function(t,e){return{$$typeof:g,type:t,compare:void 0===e?null:e}},useCallback:function(t,e){return j().useCallback(t,e)},useContext:function(t,e){return j().useContext(t,e)},useEffect:function(t,e){return j().useEffect(t,e)},useImperativeHandle:function(t,e,n){return j().useImperativeHandle(t,e,n)},useDebugValue:function(){},useLayoutEffect:function(t,e){return j().useLayoutEffect(t,e)},useMemo:function(t,e){return j().useMemo(t,e)},useReducer:function(t,e,n){return j().useReducer(t,e,n)},useRef:function(t){return j().useRef(t)},useState:function(t){return j().useState(t)},Fragment:s,StrictMode:l,Suspense:p,createElement:L,cloneElement:function(t,e,n){null==t&&b("267",t);var r=void 0,o=i({},t.props),s=t.key,l=t.ref,c=t._owner;if(null!=e){void 0!==e.ref&&(l=e.ref,c=P.current),void 0!==e.key&&(s=""+e.key);var u=void 0;for(r in t.type&&t.type.defaultProps&&(u=t.type.defaultProps),e)T.call(e,r)&&!O.hasOwnProperty(r)&&(o[r]=void 0===e[r]&&void 0!==u?u[r]:e[r])}if(1===(r=arguments.length-2))o.children=n;else if(1<r){u=Array(r);for(var h=0;h<r;h++)u[h]=arguments[h+2];o.children=u}return{$$typeof:a,type:t.type,key:s,ref:l,props:o,_owner:c}},createFactory:function(t){var e=L.bind(null,t);return e.type=t,e},isValidElement:M,version:"16.8.2",unstable_ConcurrentMode:f,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:E,ReactCurrentOwner:P,assign:i}},H={default:W},B=H&&W||H;t.exports=B.default||B},function(t,e,n){"use strict";var i=n(0),r=n(131),a=n(337);function o(t){for(var e=t.message,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,i=1;i<arguments.length;i++)n+="&args[]="+encodeURIComponent(arguments[i]);return t.message="Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",t}if(!i)throw o(Error(227));var s=null,l={};function c(){if(s)for(var t in l){var e=l[t],n=s.indexOf(t);if(!(-1<n))throw o(Error(96),t);if(!h[n]){if(!e.extractEvents)throw o(Error(97),t);for(var i in h[n]=e,n=e.eventTypes){var r=void 0,a=n[i],c=e,d=i;if(f.hasOwnProperty(d))throw o(Error(99),d);f[d]=a;var p=a.phasedRegistrationNames;if(p){for(r in p)p.hasOwnProperty(r)&&u(p[r],c,d);r=!0}else a.registrationName?(u(a.registrationName,c,d),r=!0):r=!1;if(!r)throw o(Error(98),i,t)}}}}function u(t,e,n){if(d[t])throw o(Error(100),t);d[t]=e,p[t]=e.eventTypes[n].dependencies}var h=[],f={},d={},p={};function g(t,e,n,i,r,a,o,s,l){var c=Array.prototype.slice.call(arguments,3);try{e.apply(n,c)}catch(t){this.onError(t)}}var m=!1,v=null,x=!1,b=null,y={onError:function(t){m=!0,v=t}};function w(t,e,n,i,r,a,o,s,l){m=!1,v=null,g.apply(y,arguments)}var k=null,S=null,C=null;function A(t,e,n){var i=t.type||"unknown-event";t.currentTarget=C(n),function(t,e,n,i,r,a,s,l,c){if(w.apply(this,arguments),m){if(!m)throw o(Error(198));var u=v;m=!1,v=null,x||(x=!0,b=u)}}(i,e,void 0,t),t.currentTarget=null}function E(t,e){if(null==e)throw o(Error(30));return null==t?e:Array.isArray(t)?Array.isArray(e)?(t.push.apply(t,e),t):(t.push(e),t):Array.isArray(e)?[t].concat(e):[t,e]}function P(t,e,n){Array.isArray(t)?t.forEach(e,n):t&&e.call(n,t)}var T=null;function O(t){if(t){var e=t._dispatchListeners,n=t._dispatchInstances;if(Array.isArray(e))for(var i=0;i<e.length&&!t.isPropagationStopped();i++)A(t,e[i],n[i]);else e&&A(t,e,n);t._dispatchListeners=null,t._dispatchInstances=null,t.isPersistent()||t.constructor.release(t)}}function L(t){if(null!==t&&(T=E(T,t)),t=T,T=null,t){if(P(t,O),T)throw o(Error(95));if(x)throw t=b,x=!1,b=null,t}}var M={injectEventPluginOrder:function(t){if(s)throw o(Error(101));s=Array.prototype.slice.call(t),c()},injectEventPluginsByName:function(t){var e,n=!1;for(e in t)if(t.hasOwnProperty(e)){var i=t[e];if(!l.hasOwnProperty(e)||l[e]!==i){if(l[e])throw o(Error(102),e);l[e]=i,n=!0}}n&&c()}};function _(t,e){var n=t.stateNode;if(!n)return null;var i=k(n);if(!i)return null;n=i[e];t:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(i=!i.disabled)||(i=!("button"===(t=t.type)||"input"===t||"select"===t||"textarea"===t)),t=!i;break t;default:t=!1}if(t)return null;if(n&&"function"!=typeof n)throw o(Error(231),e,typeof n);return n}var I=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;I.hasOwnProperty("ReactCurrentDispatcher")||(I.ReactCurrentDispatcher={current:null}),I.hasOwnProperty("ReactCurrentBatchConfig")||(I.ReactCurrentBatchConfig={suspense:null});var N=/^(.*)[\\\/]/,R="function"==typeof Symbol&&Symbol.for,z=R?Symbol.for("react.element"):60103,F=R?Symbol.for("react.portal"):60106,D=R?Symbol.for("react.fragment"):60107,X=R?Symbol.for("react.strict_mode"):60108,Y=R?Symbol.for("react.profiler"):60114,j=R?Symbol.for("react.provider"):60109,W=R?Symbol.for("react.context"):60110,H=R?Symbol.for("react.concurrent_mode"):60111,B=R?Symbol.for("react.forward_ref"):60112,V=R?Symbol.for("react.suspense"):60113,U=R?Symbol.for("react.suspense_list"):60120,G=R?Symbol.for("react.memo"):60115,q=R?Symbol.for("react.lazy"):60116;R&&Symbol.for("react.fundamental"),R&&Symbol.for("react.responder"),R&&Symbol.for("react.scope");var $="function"==typeof Symbol&&Symbol.iterator;function Z(t){return null===t||"object"!=typeof t?null:"function"==typeof(t=$&&t[$]||t["@@iterator"])?t:null}function K(t){if(null==t)return null;if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t;switch(t){case D:return"Fragment";case F:return"Portal";case Y:return"Profiler";case X:return"StrictMode";case V:return"Suspense";case U:return"SuspenseList"}if("object"==typeof t)switch(t.$$typeof){case W:return"Context.Consumer";case j:return"Context.Provider";case B:var e=t.render;return e=e.displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case G:return K(t.type);case q:if(t=1===t._status?t._result:null)return K(t)}return null}function Q(t){var e="";do{t:switch(t.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break t;default:var i=t._debugOwner,r=t._debugSource,a=K(t.type);n=null,i&&(n=K(i.type)),i=a,a="",r?a=" (at "+r.fileName.replace(N,"")+":"+r.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(i||"Unknown")+a}e+=n,t=t.return}while(t);return e}var J=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),tt=null,et=null,nt=null;function it(t){if(t=S(t)){if("function"!=typeof tt)throw o(Error(280));var e=k(t.stateNode);tt(t.stateNode,t.type,e)}}function rt(t){et?nt?nt.push(t):nt=[t]:et=t}function at(){if(et){var t=et,e=nt;if(nt=et=null,it(t),e)for(t=0;t<e.length;t++)it(e[t])}}function ot(t,e){return t(e)}function st(t,e,n,i){return t(e,n,i)}function lt(){}var ct=ot,ut=!1,ht=!1;function ft(){null===et&&null===nt||(lt(),at())}new Map,new Map,new Map;var dt=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,pt=Object.prototype.hasOwnProperty,gt={},mt={};function vt(t,e,n,i,r,a){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=i,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=a}var xt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(t){xt[t]=new vt(t,0,!1,t,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(t){var e=t[0];xt[e]=new vt(e,1,!1,t[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(t){xt[t]=new vt(t,2,!1,t.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(t){xt[t]=new vt(t,2,!1,t,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(t){xt[t]=new vt(t,3,!1,t.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(t){xt[t]=new vt(t,3,!0,t,null,!1)})),["capture","download"].forEach((function(t){xt[t]=new vt(t,4,!1,t,null,!1)})),["cols","rows","size","span"].forEach((function(t){xt[t]=new vt(t,6,!1,t,null,!1)})),["rowSpan","start"].forEach((function(t){xt[t]=new vt(t,5,!1,t.toLowerCase(),null,!1)}));var bt=/[\-:]([a-z])/g;function yt(t){return t[1].toUpperCase()}function wt(t){switch(typeof t){case"boolean":case"number":case"object":case"string":case"undefined":return t;default:return""}}function kt(t,e,n,i){var r=xt.hasOwnProperty(e)?xt[e]:null;(null!==r?0===r.type:!i&&(2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1])))||(function(t,e,n,i){if(null==e||function(t,e,n,i){if(null!==n&&0===n.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!i&&(null!==n?!n.acceptsBooleans:"data-"!==(t=t.toLowerCase().slice(0,5))&&"aria-"!==t);default:return!1}}(t,e,n,i))return!0;if(i)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,r,i)&&(n=null),i||null===r?function(t){return!!pt.call(mt,t)||!pt.call(gt,t)&&(dt.test(t)?mt[t]=!0:(gt[t]=!0,!1))}(e)&&(null===n?t.removeAttribute(e):t.setAttribute(e,""+n)):r.mustUseProperty?t[r.propertyName]=null===n?3!==r.type&&"":n:(e=r.attributeName,i=r.attributeNamespace,null===n?t.removeAttribute(e):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,i?t.setAttributeNS(i,e,n):t.setAttribute(e,n))))}function St(t){var e=t.type;return(t=t.nodeName)&&"input"===t.toLowerCase()&&("checkbox"===e||"radio"===e)}function Ct(t){t._valueTracker||(t._valueTracker=function(t){var e=St(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),i=""+t[e];if(!t.hasOwnProperty(e)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var r=n.get,a=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return r.call(this)},set:function(t){i=""+t,a.call(this,t)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return i},setValue:function(t){i=""+t},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}(t))}function At(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),i="";return t&&(i=St(t)?t.checked?"true":"false":t.value),(t=i)!==n&&(e.setValue(t),!0)}function Et(t,e){var n=e.checked;return r({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:t._wrapperState.initialChecked})}function Pt(t,e){var n=null==e.defaultValue?"":e.defaultValue,i=null!=e.checked?e.checked:e.defaultChecked;n=wt(null!=e.value?e.value:n),t._wrapperState={initialChecked:i,initialValue:n,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function Tt(t,e){null!=(e=e.checked)&&kt(t,"checked",e,!1)}function Ot(t,e){Tt(t,e);var n=wt(e.value),i=e.type;if(null!=n)"number"===i?(0===n&&""===t.value||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if("submit"===i||"reset"===i)return void t.removeAttribute("value");e.hasOwnProperty("value")?Mt(t,e.type,n):e.hasOwnProperty("defaultValue")&&Mt(t,e.type,wt(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(t.defaultChecked=!!e.defaultChecked)}function Lt(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var i=e.type;if(!("submit"!==i&&"reset"!==i||void 0!==e.value&&null!==e.value))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}""!==(n=t.name)&&(t.name=""),t.defaultChecked=!t.defaultChecked,t.defaultChecked=!!t._wrapperState.initialChecked,""!==n&&(t.name=n)}function Mt(t,e,n){"number"===e&&t.ownerDocument.activeElement===t||(null==n?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}function _t(t,e){return t=r({children:void 0},e),(e=function(t){var e="";return i.Children.forEach(t,(function(t){null!=t&&(e+=t)})),e}(e.children))&&(t.children=e),t}function It(t,e,n,i){if(t=t.options,e){e={};for(var r=0;r<n.length;r++)e["$"+n[r]]=!0;for(n=0;n<t.length;n++)r=e.hasOwnProperty("$"+t[n].value),t[n].selected!==r&&(t[n].selected=r),r&&i&&(t[n].defaultSelected=!0)}else{for(n=""+wt(n),e=null,r=0;r<t.length;r++){if(t[r].value===n)return t[r].selected=!0,void(i&&(t[r].defaultSelected=!0));null!==e||t[r].disabled||(e=t[r])}null!==e&&(e.selected=!0)}}function Nt(t,e){if(null!=e.dangerouslySetInnerHTML)throw o(Error(91));return r({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function Rt(t,e){var n=e.value;if(null==n){if(n=e.defaultValue,null!=(e=e.children)){if(null!=n)throw o(Error(92));if(Array.isArray(e)){if(!(1>=e.length))throw o(Error(93));e=e[0]}n=e}null==n&&(n="")}t._wrapperState={initialValue:wt(n)}}function zt(t,e){var n=wt(e.value),i=wt(e.defaultValue);null!=n&&((n=""+n)!==t.value&&(t.value=n),null==e.defaultValue&&t.defaultValue!==n&&(t.defaultValue=n)),null!=i&&(t.defaultValue=""+i)}function Ft(t){var e=t.textContent;e===t._wrapperState.initialValue&&""!==e&&null!==e&&(t.value=e)}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(t){var e=t.replace(bt,yt);xt[e]=new vt(e,1,!1,t,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(t){var e=t.replace(bt,yt);xt[e]=new vt(e,1,!1,t,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(t){var e=t.replace(bt,yt);xt[e]=new vt(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(t){xt[t]=new vt(t,1,!1,t.toLowerCase(),null,!1)})),xt.xlinkHref=new vt("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(t){xt[t]=new vt(t,1,!1,t.toLowerCase(),null,!0)}));var Dt="http://www.w3.org/1999/xhtml",Xt="http://www.w3.org/2000/svg";function Yt(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function jt(t,e){return null==t||"http://www.w3.org/1999/xhtml"===t?Yt(e):"http://www.w3.org/2000/svg"===t&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":t}var Wt,Ht=function(t){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,i,r){MSApp.execUnsafeLocalFunction((function(){return t(e,n)}))}:t}((function(t,e){if(t.namespaceURI!==Xt||"innerHTML"in t)t.innerHTML=e;else{for((Wt=Wt||document.createElement("div")).innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=Wt.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}}));function Bt(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e}function Vt(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Ut={animationend:Vt("Animation","AnimationEnd"),animationiteration:Vt("Animation","AnimationIteration"),animationstart:Vt("Animation","AnimationStart"),transitionend:Vt("Transition","TransitionEnd")},Gt={},qt={};function $t(t){if(Gt[t])return Gt[t];if(!Ut[t])return t;var e,n=Ut[t];for(e in n)if(n.hasOwnProperty(e)&&e in qt)return Gt[t]=n[e];return t}J&&(qt=document.createElement("div").style,"AnimationEvent"in window||(delete Ut.animationend.animation,delete Ut.animationiteration.animation,delete Ut.animationstart.animation),"TransitionEvent"in window||delete Ut.transitionend.transition);var Zt=$t("animationend"),Kt=$t("animationiteration"),Qt=$t("animationstart"),Jt=$t("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ee=!1,ne=[],ie=null,re=null,ae=null,oe=new Map,se=new Map,le="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),ce="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function ue(t,e,n,i){return{blockedOn:t,topLevelType:e,eventSystemFlags:32|n,nativeEvent:i}}function he(t,e){switch(t){case"focus":case"blur":ie=null;break;case"dragenter":case"dragleave":re=null;break;case"mouseover":case"mouseout":ae=null;break;case"pointerover":case"pointerout":oe.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":se.delete(e.pointerId)}}function fe(t,e,n,i,r){return null===t||t.nativeEvent!==r?ue(e,n,i,r):(t.eventSystemFlags|=i,t)}function de(t){if(null!==t.blockedOn)return!1;var e=Cn(t.topLevelType,t.eventSystemFlags,t.nativeEvent);return null===e||(t.blockedOn=e,!1)}function pe(t,e,n){de(t)&&n.delete(e)}function ge(){for(ee=!1;0<ne.length;){var t=ne[0];if(null!==t.blockedOn)break;var e=Cn(t.topLevelType,t.eventSystemFlags,t.nativeEvent);null!==e?t.blockedOn=e:ne.shift()}null!==ie&&de(ie)&&(ie=null),null!==re&&de(re)&&(re=null),null!==ae&&de(ae)&&(ae=null),oe.forEach(pe),se.forEach(pe)}function me(t,e){t.blockedOn===e&&(t.blockedOn=null,ee||(ee=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,ge)))}function ve(t){function e(e){return me(e,t)}if(0<ne.length){me(ne[0],t);for(var n=1;n<ne.length;n++){var i=ne[n];i.blockedOn===t&&(i.blockedOn=null)}}null!==ie&&me(ie,t),null!==re&&me(re,t),null!==ae&&me(ae,t),oe.forEach(e),se.forEach(e)}var xe=1024;function be(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do{0!=(1026&(e=t).effectTag)&&(n=e.return),t=e.return}while(t)}return 3===e.tag?n:null}function ye(t){if(be(t)!==t)throw o(Error(188))}function we(t){if(!(t=function(t){var e=t.alternate;if(!e){if(null===(e=be(t)))throw o(Error(188));return e!==t?null:t}for(var n=t,i=e;;){var r=n.return;if(null===r)break;var a=r.alternate;if(null===a){if(null!==(i=r.return)){n=i;continue}break}if(r.child===a.child){for(a=r.child;a;){if(a===n)return ye(r),t;if(a===i)return ye(r),e;a=a.sibling}throw o(Error(188))}if(n.return!==i.return)n=r,i=a;else{for(var s=!1,l=r.child;l;){if(l===n){s=!0,n=r,i=a;break}if(l===i){s=!0,i=r,n=a;break}l=l.sibling}if(!s){for(l=a.child;l;){if(l===n){s=!0,n=a,i=r;break}if(l===i){s=!0,i=a,n=r;break}l=l.sibling}if(!s)throw o(Error(189))}}if(n.alternate!==i)throw o(Error(190))}if(3!==n.tag)throw o(Error(188));return n.stateNode.current===n?t:e}(t)))return null;for(var e=t;;){if(5===e.tag||6===e.tag)return e;if(e.child)e.child.return=e,e=e.child;else{if(e===t)break;for(;!e.sibling;){if(!e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}}return null}function ke(t){return(t=t.target||t.srcElement||window).correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}function Se(t){do{t=t.return}while(t&&5!==t.tag);return t||null}function Ce(t,e,n){(e=_(t,n.dispatchConfig.phasedRegistrationNames[e]))&&(n._dispatchListeners=E(n._dispatchListeners,e),n._dispatchInstances=E(n._dispatchInstances,t))}function Ae(t){if(t&&t.dispatchConfig.phasedRegistrationNames){for(var e=t._targetInst,n=[];e;)n.push(e),e=Se(e);for(e=n.length;0<e--;)Ce(n[e],"captured",t);for(e=0;e<n.length;e++)Ce(n[e],"bubbled",t)}}function Ee(t,e,n){t&&n&&n.dispatchConfig.registrationName&&(e=_(t,n.dispatchConfig.registrationName))&&(n._dispatchListeners=E(n._dispatchListeners,e),n._dispatchInstances=E(n._dispatchInstances,t))}function Pe(t){t&&t.dispatchConfig.registrationName&&Ee(t._targetInst,null,t)}function Te(t){P(t,Ae)}function Oe(){return!0}function Le(){return!1}function Me(t,e,n,i){for(var r in this.dispatchConfig=t,this._targetInst=e,this.nativeEvent=n,t=this.constructor.Interface)t.hasOwnProperty(r)&&((e=t[r])?this[r]=e(n):"target"===r?this.target=i:this[r]=n[r]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Oe:Le,this.isPropagationStopped=Le,this}function _e(t,e,n,i){if(this.eventPool.length){var r=this.eventPool.pop();return this.call(r,t,e,n,i),r}return new this(t,e,n,i)}function Ie(t){if(!(t instanceof this))throw o(Error(279));t.destructor(),10>this.eventPool.length&&this.eventPool.push(t)}function Ne(t){t.eventPool=[],t.getPooled=_e,t.release=Ie}r(Me.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():"unknown"!=typeof t.returnValue&&(t.returnValue=!1),this.isDefaultPrevented=Oe)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():"unknown"!=typeof t.cancelBubble&&(t.cancelBubble=!0),this.isPropagationStopped=Oe)},persist:function(){this.isPersistent=Oe},isPersistent:Le,destructor:function(){var t,e=this.constructor.Interface;for(t in e)this[t]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Le,this._dispatchInstances=this._dispatchListeners=null}}),Me.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Me.extend=function(t){function e(){}function n(){return i.apply(this,arguments)}var i=this;e.prototype=i.prototype;var a=new e;return r(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=r({},i.Interface,t),n.extend=i.extend,Ne(n),n},Ne(Me);var Re=Me.extend({animationName:null,elapsedTime:null,pseudoElement:null}),ze=Me.extend({clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),Fe=Me.extend({view:null,detail:null}),De=Fe.extend({relatedTarget:null});function Xe(t){var e=t.keyCode;return"charCode"in t?0===(t=t.charCode)&&13===e&&(t=13):t=e,10===t&&(t=13),32<=t||13===t?t:0}var Ye={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},je={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},We={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function He(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):!!(t=We[t])&&!!e[t]}function Be(){return He}for(var Ve=Fe.extend({key:function(t){if(t.key){var e=Ye[t.key]||t.key;if("Unidentified"!==e)return e}return"keypress"===t.type?13===(t=Xe(t))?"Enter":String.fromCharCode(t):"keydown"===t.type||"keyup"===t.type?je[t.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Be,charCode:function(t){return"keypress"===t.type?Xe(t):0},keyCode:function(t){return"keydown"===t.type||"keyup"===t.type?t.keyCode:0},which:function(t){return"keypress"===t.type?Xe(t):"keydown"===t.type||"keyup"===t.type?t.keyCode:0}}),Ue=0,Ge=0,qe=!1,$e=!1,Ze=Fe.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Be,button:null,buttons:null,relatedTarget:function(t){return t.relatedTarget||(t.fromElement===t.srcElement?t.toElement:t.fromElement)},movementX:function(t){if("movementX"in t)return t.movementX;var e=Ue;return Ue=t.screenX,qe?"mousemove"===t.type?t.screenX-e:0:(qe=!0,0)},movementY:function(t){if("movementY"in t)return t.movementY;var e=Ge;return Ge=t.screenY,$e?"mousemove"===t.type?t.screenY-e:0:($e=!0,0)}}),Ke=Ze.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Qe=Ze.extend({dataTransfer:null}),Je=Fe.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Be}),tn=Me.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),en=Ze.extend({deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:null,deltaMode:null}),nn=[["blur","blur",0],["cancel","cancel",0],["click","click",0],["close","close",0],["contextmenu","contextMenu",0],["copy","copy",0],["cut","cut",0],["auxclick","auxClick",0],["dblclick","doubleClick",0],["dragend","dragEnd",0],["dragstart","dragStart",0],["drop","drop",0],["focus","focus",0],["input","input",0],["invalid","invalid",0],["keydown","keyDown",0],["keypress","keyPress",0],["keyup","keyUp",0],["mousedown","mouseDown",0],["mouseup","mouseUp",0],["paste","paste",0],["pause","pause",0],["play","play",0],["pointercancel","pointerCancel",0],["pointerdown","pointerDown",0],["pointerup","pointerUp",0],["ratechange","rateChange",0],["reset","reset",0],["seeked","seeked",0],["submit","submit",0],["touchcancel","touchCancel",0],["touchend","touchEnd",0],["touchstart","touchStart",0],["volumechange","volumeChange",0],["drag","drag",1],["dragenter","dragEnter",1],["dragexit","dragExit",1],["dragleave","dragLeave",1],["dragover","dragOver",1],["mousemove","mouseMove",1],["mouseout","mouseOut",1],["mouseover","mouseOver",1],["pointermove","pointerMove",1],["pointerout","pointerOut",1],["pointerover","pointerOver",1],["scroll","scroll",1],["toggle","toggle",1],["touchmove","touchMove",1],["wheel","wheel",1],["abort","abort",2],[Zt,"animationEnd",2],[Kt,"animationIteration",2],[Qt,"animationStart",2],["canplay","canPlay",2],["canplaythrough","canPlayThrough",2],["durationchange","durationChange",2],["emptied","emptied",2],["encrypted","encrypted",2],["ended","ended",2],["error","error",2],["gotpointercapture","gotPointerCapture",2],["load","load",2],["loadeddata","loadedData",2],["loadedmetadata","loadedMetadata",2],["loadstart","loadStart",2],["lostpointercapture","lostPointerCapture",2],["playing","playing",2],["progress","progress",2],["seeking","seeking",2],["stalled","stalled",2],["suspend","suspend",2],["timeupdate","timeUpdate",2],[Jt,"transitionEnd",2],["waiting","waiting",2]],rn={},an={},on=0;on<nn.length;on++){var sn=nn[on],ln=sn[0],cn=sn[1],un=sn[2],hn="on"+(cn[0].toUpperCase()+cn.slice(1)),fn={phasedRegistrationNames:{bubbled:hn,captured:hn+"Capture"},dependencies:[ln],eventPriority:un};rn[cn]=fn,an[ln]=fn}var dn={eventTypes:rn,getEventPriority:function(t){return void 0!==(t=an[t])?t.eventPriority:2},extractEvents:function(t,e,n,i,r){if(!(e=an[t]))return null;switch(t){case"keypress":if(0===Xe(i))return null;case"keydown":case"keyup":t=Ve;break;case"blur":case"focus":t=De;break;case"click":if(2===i.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":t=Ze;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":t=Qe;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":t=Je;break;case Zt:case Kt:case Qt:t=Re;break;case Jt:t=tn;break;case"scroll":t=Fe;break;case"wheel":t=en;break;case"copy":case"cut":case"paste":t=ze;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":t=Ke;break;default:t=Me}return Te(n=t.getPooled(e,n,i,r)),n}},pn=dn.getEventPriority,gn=[];function mn(t){var e=t.targetInst,n=e;do{if(!n){t.ancestors.push(n);break}var i=n;if(3===i.tag)i=i.stateNode.containerInfo;else{for(;i.return;)i=i.return;i=3!==i.tag?null:i.stateNode.containerInfo}if(!i)break;var r=n.tag;5!==r&&6!==r||t.ancestors.push(n),n=ei(i)}while(n);for(n=0;n<t.ancestors.length;n++){e=t.ancestors[n];var a=ke(t.nativeEvent);i=t.topLevelType,r=t.eventSystemFlags;for(var o=t.nativeEvent,s=null,l=0;l<h.length;l++){var c=h[l];c&&(c=c.extractEvents(i,r,e,o,a))&&(s=E(s,c))}L(s)}}var vn=!0;function xn(t,e){bn(e,t,!1)}function bn(t,e,n){switch(pn(e)){case 0:var i=yn.bind(null,e,1);break;case 1:i=wn.bind(null,e,1);break;default:i=Sn.bind(null,e,1)}n?t.addEventListener(e,i,!0):t.addEventListener(e,i,!1)}function yn(t,e,n){ut||lt();var i=Sn,r=ut;ut=!0;try{st(i,t,e,n)}finally{(ut=r)||ft()}}function wn(t,e,n){Sn(t,e,n)}function kn(t,e,n,i){if(gn.length){var r=gn.pop();r.topLevelType=t,r.eventSystemFlags=e,r.nativeEvent=n,r.targetInst=i,t=r}else t={topLevelType:t,eventSystemFlags:e,nativeEvent:n,targetInst:i,ancestors:[]};try{if(e=mn,n=t,ht)e(n,void 0);else{ht=!0;try{ct(e,n,void 0)}finally{ht=!1,ft()}}}finally{t.topLevelType=null,t.nativeEvent=null,t.targetInst=null,t.ancestors.length=0,gn.length<10&&gn.push(t)}}function Sn(t,e,n){if(vn)if(0<ne.length&&-1<le.indexOf(t))t=ue(null,t,e,n),ne.push(t);else{var i=Cn(t,e,n);null===i?he(t,n):-1<le.indexOf(t)?(t=ue(i,t,e,n),ne.push(t)):function(t,e,n,i){switch(e){case"focus":return ie=fe(ie,t,e,n,i),!0;case"dragenter":return re=fe(re,t,e,n,i),!0;case"mouseover":return ae=fe(ae,t,e,n,i),!0;case"pointerover":var r=i.pointerId;return oe.set(r,fe(oe.get(r)||null,t,e,n,i)),!0;case"gotpointercapture":return r=i.pointerId,se.set(r,fe(se.get(r)||null,t,e,n,i)),!0}return!1}(i,t,e,n)||(he(t,n),kn(t,e,n,null))}}function Cn(t,e,n){var i=ke(n),r=ei(i);if(null!==r)if(null===(i=be(r)))r=null;else{var a=i.tag;if(13===a){if(null!==(i=13!==i.tag||(null===(r=i.memoizedState)&&(null!==(i=i.alternate)&&(r=i.memoizedState)),null===r)?null:r.dehydrated))return i;r=null}else if(3===a){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;r=null}else i!==r&&(r=null)}return kn(t,e,n,r),null}function An(t){if(!J)return!1;var e=(t="on"+t)in document;return e||((e=document.createElement("div")).setAttribute(t,"return;"),e="function"==typeof e[t]),e}var En=new("function"==typeof WeakMap?WeakMap:Map);function Pn(t){var e=En.get(t);return void 0===e&&(e=new Set,En.set(t,e)),e}function Tn(t,e,n){if(!n.has(t)){switch(t){case"scroll":bn(e,"scroll",!0);break;case"focus":case"blur":bn(e,"focus",!0),bn(e,"blur",!0),n.add("blur"),n.add("focus");break;case"cancel":case"close":An(t)&&bn(e,t,!0);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(t)&&xn(t,e)}n.add(t)}}var On={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Ln=["Webkit","ms","Moz","O"];function Mn(t,e,n){return null==e||"boolean"==typeof e||""===e?"":n||"number"!=typeof e||0===e||On.hasOwnProperty(t)&&On[t]?(""+e).trim():e+"px"}function _n(t,e){for(var n in t=t.style,e)if(e.hasOwnProperty(n)){var i=0===n.indexOf("--"),r=Mn(n,e[n],i);"float"===n&&(n="cssFloat"),i?t.setProperty(n,r):t[n]=r}}Object.keys(On).forEach((function(t){Ln.forEach((function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),On[e]=On[t]}))}));var In=r({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Nn(t,e){if(e){if(In[t]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw o(Error(137),t,"");if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw o(Error(60));if(!("object"==typeof e.dangerouslySetInnerHTML&&"__html"in e.dangerouslySetInnerHTML))throw o(Error(61))}if(null!=e.style&&"object"!=typeof e.style)throw o(Error(62),"")}}function Rn(t,e){if(-1===t.indexOf("-"))return"string"==typeof e.is;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function zn(t,e){var n=Pn(t=9===t.nodeType||11===t.nodeType?t:t.ownerDocument);e=p[e];for(var i=0;i<e.length;i++)Tn(e[i],t,n)}function Fn(){}function Dn(t){if(void 0===(t=t||("undefined"!=typeof document?document:void 0)))return null;try{return t.activeElement||t.body}catch(e){return t.body}}function Xn(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function Yn(t,e){var n,i=Xn(t);for(t=0;i;){if(3===i.nodeType){if(n=t+i.textContent.length,t<=e&&n>=e)return{node:i,offset:e-t};t=n}t:{for(;i;){if(i.nextSibling){i=i.nextSibling;break t}i=i.parentNode}i=void 0}i=Xn(i)}}function jn(){for(var t=window,e=Dn();e instanceof t.HTMLIFrameElement;){try{var n="string"==typeof e.contentWindow.location.href}catch(t){n=!1}if(!n)break;e=Dn((t=e.contentWindow).document)}return e}function Wn(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&("input"===e&&("text"===t.type||"search"===t.type||"tel"===t.type||"url"===t.type||"password"===t.type)||"textarea"===e||"true"===t.contentEditable)}var Hn=null,Bn=null;function Vn(t,e){switch(t){case"button":case"input":case"select":case"textarea":return!!e.autoFocus}return!1}function Un(t,e){return"textarea"===t||"option"===t||"noscript"===t||"string"==typeof e.children||"number"==typeof e.children||"object"==typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var Gn="function"==typeof setTimeout?setTimeout:void 0,qn="function"==typeof clearTimeout?clearTimeout:void 0;function $n(t){for(;null!=t;t=t.nextSibling){var e=t.nodeType;if(1===e||3===e)break}return t}function Zn(t){t=t.previousSibling;for(var e=0;t;){if(8===t.nodeType){var n=t.data;if("$"===n||"$!"===n||"$?"===n){if(0===e)return t;e--}else"/$"===n&&e++}t=t.previousSibling}return null}var Kn=Math.random().toString(36).slice(2),Qn="__reactInternalInstance$"+Kn,Jn="__reactEventHandlers$"+Kn,ti="__reactContainere$"+Kn;function ei(t){var e=t[Qn];if(e)return e;for(var n=t.parentNode;n;){if(e=n[ti]||n[Qn]){if(n=e.alternate,null!==e.child||null!==n&&null!==n.child)for(t=Zn(t);null!==t;){if(n=t[Qn])return n;t=Zn(t)}return e}n=(t=n).parentNode}return null}function ni(t){return!(t=t[Qn]||t[ti])||5!==t.tag&&6!==t.tag&&13!==t.tag&&3!==t.tag?null:t}function ii(t){if(5===t.tag||6===t.tag)return t.stateNode;throw o(Error(33))}function ri(t){return t[Jn]||null}var ai=null,oi=null,si=null;function li(){if(si)return si;var t,e,n=oi,i=n.length,r="value"in ai?ai.value:ai.textContent,a=r.length;for(t=0;t<i&&n[t]===r[t];t++);var o=i-t;for(e=1;e<=o&&n[i-e]===r[a-e];e++);return si=r.slice(t,1<e?1-e:void 0)}var ci=Me.extend({data:null}),ui=Me.extend({data:null}),hi=[9,13,27,32],fi=J&&"CompositionEvent"in window,di=null;J&&"documentMode"in document&&(di=document.documentMode);var pi=J&&"TextEvent"in window&&!di,gi=J&&(!fi||di&&8<di&&11>=di),mi=String.fromCharCode(32),vi={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xi=!1;function bi(t,e){switch(t){case"keyup":return-1!==hi.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function yi(t){return"object"==typeof(t=t.detail)&&"data"in t?t.data:null}var wi=!1;var ki={eventTypes:vi,extractEvents:function(t,e,n,i,r){var a;if(fi)t:{switch(t){case"compositionstart":var o=vi.compositionStart;break t;case"compositionend":o=vi.compositionEnd;break t;case"compositionupdate":o=vi.compositionUpdate;break t}o=void 0}else wi?bi(t,i)&&(o=vi.compositionEnd):"keydown"===t&&229===i.keyCode&&(o=vi.compositionStart);return o?(gi&&"ko"!==i.locale&&(wi||o!==vi.compositionStart?o===vi.compositionEnd&&wi&&(a=li()):(oi="value"in(ai=r)?ai.value:ai.textContent,wi=!0)),e=ci.getPooled(o,n,i,r),a?e.data=a:null!==(a=yi(i))&&(e.data=a),Te(e),a=e):a=null,(t=pi?function(t,e){switch(t){case"compositionend":return yi(e);case"keypress":return 32!==e.which?null:(xi=!0,mi);case"textInput":return(t=e.data)===mi&&xi?null:t;default:return null}}(t,i):function(t,e){if(wi)return"compositionend"===t||!fi&&bi(t,e)?(t=li(),si=oi=ai=null,wi=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return gi&&"ko"!==e.locale?null:e.data;default:return null}}(t,i))?((n=ui.getPooled(vi.beforeInput,n,i,r)).data=t,Te(n)):n=null,null===a?n:null===n?a:[a,n]}},Si={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ci(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return"input"===e?!!Si[t.type]:"textarea"===e}var Ai={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ei(t,e,n){return(t=Me.getPooled(Ai.change,t,e,n)).type="change",rt(n),Te(t),t}var Pi=null,Ti=null;function Oi(t){L(t)}function Li(t){if(At(ii(t)))return t}function Mi(t,e){if("change"===t)return e}var _i=!1;function Ii(){Pi&&(Pi.detachEvent("onpropertychange",Ni),Ti=Pi=null)}function Ni(t){if("value"===t.propertyName&&Li(Ti))if(t=Ei(Ti,t,ke(t)),ut)L(t);else{ut=!0;try{ot(Oi,t)}finally{ut=!1,ft()}}}function Ri(t,e,n){"focus"===t?(Ii(),Ti=n,(Pi=e).attachEvent("onpropertychange",Ni)):"blur"===t&&Ii()}function zi(t){if("selectionchange"===t||"keyup"===t||"keydown"===t)return Li(Ti)}function Fi(t,e){if("click"===t)return Li(e)}function Di(t,e){if("input"===t||"change"===t)return Li(e)}J&&(_i=An("input")&&(!document.documentMode||9<document.documentMode));var Xi={eventTypes:Ai,_isInputEventSupported:_i,extractEvents:function(t,e,n,i,r){var a=(e=n?ii(n):window).nodeName&&e.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===e.type)var o=Mi;else if(Ci(e))if(_i)o=Di;else{o=zi;var s=Ri}else(a=e.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(o=Fi);if(o&&(o=o(t,n)))return Ei(o,i,r);s&&s(t,e,n),"blur"===t&&(t=e._wrapperState)&&t.controlled&&"number"===e.type&&Mt(e,"number",e.value)}},Yi={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},ji={eventTypes:Yi,extractEvents:function(t,e,n,i,r){var a="mouseover"===t||"pointerover"===t,o="mouseout"===t||"pointerout"===t;if(a&&0==(32&e)&&(i.relatedTarget||i.fromElement)||!o&&!a)return null;if(e=r.window===r?r:(e=r.ownerDocument)?e.defaultView||e.parentWindow:window,o?(o=n,null!==(n=(n=i.relatedTarget||i.toElement)?ei(n):null)&&(n!==(a=be(n))||5!==n.tag&&6!==n.tag)&&(n=null)):o=null,o===n)return null;if("mouseout"===t||"mouseover"===t)var s=Ze,l=Yi.mouseLeave,c=Yi.mouseEnter,u="mouse";else"pointerout"!==t&&"pointerover"!==t||(s=Ke,l=Yi.pointerLeave,c=Yi.pointerEnter,u="pointer");if(t=null==o?e:ii(o),e=null==n?e:ii(n),(l=s.getPooled(l,o,i,r)).type=u+"leave",l.target=t,l.relatedTarget=e,(i=s.getPooled(c,n,i,r)).type=u+"enter",i.target=e,i.relatedTarget=t,u=n,(r=o)&&u)t:{for(c=u,t=0,o=s=r;o;o=Se(o))t++;for(o=0,n=c;n;n=Se(n))o++;for(;0<t-o;)s=Se(s),t--;for(;0<o-t;)c=Se(c),o--;for(;t--;){if(s===c||s===c.alternate)break t;s=Se(s),c=Se(c)}s=null}else s=null;for(c=s,s=[];r&&r!==c&&(null===(t=r.alternate)||t!==c);)s.push(r),r=Se(r);for(r=[];u&&u!==c&&(null===(t=u.alternate)||t!==c);)r.push(u),u=Se(u);for(u=0;u<s.length;u++)Ee(s[u],"bubbled",l);for(u=r.length;0<u--;)Ee(r[u],"captured",i);return[l,i]}};var Wi="function"==typeof Object.is?Object.is:function(t,e){return t===e&&(0!==t||1/t==1/e)||t!=t&&e!=e},Hi=Object.prototype.hasOwnProperty;function Bi(t,e){if(Wi(t,e))return!0;if("object"!=typeof t||null===t||"object"!=typeof e||null===e)return!1;var n=Object.keys(t),i=Object.keys(e);if(n.length!==i.length)return!1;for(i=0;i<n.length;i++)if(!Hi.call(e,n[i])||!Wi(t[n[i]],e[n[i]]))return!1;return!0}var Vi=J&&"documentMode"in document&&11>=document.documentMode,Ui={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Gi=null,qi=null,$i=null,Zi=!1;function Ki(t,e){var n=e.window===e?e.document:9===e.nodeType?e:e.ownerDocument;return Zi||null==Gi||Gi!==Dn(n)?null:("selectionStart"in(n=Gi)&&Wn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},$i&&Bi($i,n)?null:($i=n,(t=Me.getPooled(Ui.select,qi,t,e)).type="select",t.target=Gi,Te(t),t))}var Qi={eventTypes:Ui,extractEvents:function(t,e,n,i,r){var a;if(!(a=!(e=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument))){t:{e=Pn(e),a=p.onSelect;for(var o=0;o<a.length;o++)if(!e.has(a[o])){e=!1;break t}e=!0}a=!e}if(a)return null;switch(e=n?ii(n):window,t){case"focus":(Ci(e)||"true"===e.contentEditable)&&(Gi=e,qi=n,$i=null);break;case"blur":$i=qi=Gi=null;break;case"mousedown":Zi=!0;break;case"contextmenu":case"mouseup":case"dragend":return Zi=!1,Ki(i,r);case"selectionchange":if(Vi)break;case"keydown":case"keyup":return Ki(i,r)}return null}};M.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),k=ri,S=ni,C=ii,M.injectEventPluginsByName({SimpleEventPlugin:dn,EnterLeaveEventPlugin:ji,ChangeEventPlugin:Xi,SelectEventPlugin:Qi,BeforeInputEventPlugin:ki}),new Set;var Ji=[],tr=-1;function er(t){0>tr||(t.current=Ji[tr],Ji[tr]=null,tr--)}function nr(t,e){tr++,Ji[tr]=t.current,t.current=e}var ir={},rr={current:ir},ar={current:!1},or=ir;function sr(t,e){var n=t.type.contextTypes;if(!n)return ir;var i=t.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===e)return i.__reactInternalMemoizedMaskedChildContext;var r,a={};for(r in n)a[r]=e[r];return i&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=a),a}function lr(t){return null!=(t=t.childContextTypes)}function cr(t){er(ar),er(rr)}function ur(t){er(ar),er(rr)}function hr(t,e,n){if(rr.current!==ir)throw o(Error(168));nr(rr,e),nr(ar,n)}function fr(t,e,n){var i=t.stateNode;if(t=e.childContextTypes,"function"!=typeof i.getChildContext)return n;for(var a in i=i.getChildContext())if(!(a in t))throw o(Error(108),K(e)||"Unknown",a);return r({},n,{},i)}function dr(t){var e=t.stateNode;return e=e&&e.__reactInternalMemoizedMergedChildContext||ir,or=rr.current,nr(rr,e),nr(ar,ar.current),!0}function pr(t,e,n){var i=t.stateNode;if(!i)throw o(Error(169));n?(e=fr(t,e,or),i.__reactInternalMemoizedMergedChildContext=e,er(ar),er(rr),nr(rr,e)):er(ar),nr(ar,n)}var gr=a.unstable_runWithPriority,mr=a.unstable_scheduleCallback,vr=a.unstable_cancelCallback,xr=a.unstable_shouldYield,br=a.unstable_requestPaint,yr=a.unstable_now,wr=a.unstable_getCurrentPriorityLevel,kr=a.unstable_ImmediatePriority,Sr=a.unstable_UserBlockingPriority,Cr=a.unstable_NormalPriority,Ar=a.unstable_LowPriority,Er=a.unstable_IdlePriority,Pr={},Tr=void 0!==br?br:function(){},Or=null,Lr=null,Mr=!1,_r=yr(),Ir=1e4>_r?yr:function(){return yr()-_r};function Nr(){switch(wr()){case kr:return 99;case Sr:return 98;case Cr:return 97;case Ar:return 96;case Er:return 95;default:throw o(Error(332))}}function Rr(t){switch(t){case 99:return kr;case 98:return Sr;case 97:return Cr;case 96:return Ar;case 95:return Er;default:throw o(Error(332))}}function zr(t,e){return t=Rr(t),gr(t,e)}function Fr(t,e,n){return t=Rr(t),mr(t,e,n)}function Dr(t){return null===Or?(Or=[t],Lr=mr(kr,Yr)):Or.push(t),Pr}function Xr(){if(null!==Lr){var t=Lr;Lr=null,vr(t)}Yr()}function Yr(){if(!Mr&&null!==Or){Mr=!0;var t=0;try{var e=Or;zr(99,(function(){for(;t<e.length;t++){var n=e[t];do{n=n(!0)}while(null!==n)}})),Or=null}catch(e){throw null!==Or&&(Or=Or.slice(t+1)),mr(kr,Xr),e}finally{Mr=!1}}}function jr(t,e){if(t&&t.defaultProps)for(var n in e=r({},e),t=t.defaultProps)void 0===e[n]&&(e[n]=t[n]);return e}var Wr={current:null},Hr=null,Br=null,Vr=null;function Ur(){Vr=Br=Hr=null}function Gr(t,e){var n=t.type._context;nr(Wr,n._currentValue),n._currentValue=e}function qr(t){var e=Wr.current;er(Wr),t.type._context._currentValue=e}function $r(t,e){for(;null!==t;){var n=t.alternate;if(t.childExpirationTime<e)t.childExpirationTime=e,null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e);else{if(!(null!==n&&n.childExpirationTime<e))break;n.childExpirationTime=e}t=t.return}}function Zr(t,e){Hr=t,Vr=Br=null,null!==(t=t.dependencies)&&null!==t.firstContext&&(t.expirationTime>=e&&(Co=!0),t.firstContext=null)}function Kr(t,e){if(Vr!==t&&!1!==e&&0!==e)if("number"==typeof e&&1073741823!==e||(Vr=t,e=1073741823),e={context:t,observedBits:e,next:null},null===Br){if(null===Hr)throw o(Error(308));Br=e,Hr.dependencies={expirationTime:0,firstContext:e,responders:null}}else Br=Br.next=e;return t._currentValue}var Qr=!1;function Jr(t){return{baseState:t,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ta(t){return{baseState:t.baseState,firstUpdate:t.firstUpdate,lastUpdate:t.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ea(t,e){return{expirationTime:t,suspenseConfig:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function na(t,e){null===t.lastUpdate?t.firstUpdate=t.lastUpdate=e:(t.lastUpdate.next=e,t.lastUpdate=e)}function ia(t,e){var n=t.alternate;if(null===n){var i=t.updateQueue,r=null;null===i&&(i=t.updateQueue=Jr(t.memoizedState))}else i=t.updateQueue,r=n.updateQueue,null===i?null===r?(i=t.updateQueue=Jr(t.memoizedState),r=n.updateQueue=Jr(n.memoizedState)):i=t.updateQueue=ta(r):null===r&&(r=n.updateQueue=ta(i));null===r||i===r?na(i,e):null===i.lastUpdate||null===r.lastUpdate?(na(i,e),na(r,e)):(na(i,e),r.lastUpdate=e)}function ra(t,e){var n=t.updateQueue;null===(n=null===n?t.updateQueue=Jr(t.memoizedState):aa(t,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=e:(n.lastCapturedUpdate.next=e,n.lastCapturedUpdate=e)}function aa(t,e){var n=t.alternate;return null!==n&&e===n.updateQueue&&(e=t.updateQueue=ta(e)),e}function oa(t,e,n,i,a,o){switch(n.tag){case 1:return"function"==typeof(t=n.payload)?t.call(o,i,a):t;case 3:t.effectTag=-4097&t.effectTag|64;case 0:if(null==(a="function"==typeof(t=n.payload)?t.call(o,i,a):t))break;return r({},i,a);case 2:Qr=!0}return i}function sa(t,e,n,i,r){Qr=!1;for(var a=(e=aa(t,e)).baseState,o=null,s=0,l=e.firstUpdate,c=a;null!==l;){var u=l.expirationTime;u<r?(null===o&&(o=l,a=c),s<u&&(s=u)):(Ks(u,l.suspenseConfig),c=oa(t,0,l,c,n,i),null!==l.callback&&(t.effectTag|=32,l.nextEffect=null,null===e.lastEffect?e.firstEffect=e.lastEffect=l:(e.lastEffect.nextEffect=l,e.lastEffect=l))),l=l.next}for(u=null,l=e.firstCapturedUpdate;null!==l;){var h=l.expirationTime;h<r?(null===u&&(u=l,null===o&&(a=c)),s<h&&(s=h)):(c=oa(t,0,l,c,n,i),null!==l.callback&&(t.effectTag|=32,l.nextEffect=null,null===e.lastCapturedEffect?e.firstCapturedEffect=e.lastCapturedEffect=l:(e.lastCapturedEffect.nextEffect=l,e.lastCapturedEffect=l))),l=l.next}null===o&&(e.lastUpdate=null),null===u?e.lastCapturedUpdate=null:t.effectTag|=32,null===o&&null===u&&(a=c),e.baseState=a,e.firstUpdate=o,e.firstCapturedUpdate=u,Qs(s),t.expirationTime=s,t.memoizedState=c}function la(t,e,n){null!==e.firstCapturedUpdate&&(null!==e.lastUpdate&&(e.lastUpdate.next=e.firstCapturedUpdate,e.lastUpdate=e.lastCapturedUpdate),e.firstCapturedUpdate=e.lastCapturedUpdate=null),ca(e.firstEffect,n),e.firstEffect=e.lastEffect=null,ca(e.firstCapturedEffect,n),e.firstCapturedEffect=e.lastCapturedEffect=null}function ca(t,e){for(;null!==t;){var n=t.callback;if(null!==n){t.callback=null;var i=e;if("function"!=typeof n)throw o(Error(191),n);n.call(i)}t=t.nextEffect}}var ua=I.ReactCurrentBatchConfig,ha=(new i.Component).refs;function fa(t,e,n,i){n=null==(n=n(i,e=t.memoizedState))?e:r({},e,n),t.memoizedState=n,null!==(i=t.updateQueue)&&0===t.expirationTime&&(i.baseState=n)}var da={isMounted:function(t){return!!(t=t._reactInternalFiber)&&be(t)===t},enqueueSetState:function(t,e,n){t=t._reactInternalFiber;var i=Is(),r=ua.suspense;(r=ea(i=Ns(i,t,r),r)).payload=e,null!=n&&(r.callback=n),ia(t,r),Fs(t,i)},enqueueReplaceState:function(t,e,n){t=t._reactInternalFiber;var i=Is(),r=ua.suspense;(r=ea(i=Ns(i,t,r),r)).tag=1,r.payload=e,null!=n&&(r.callback=n),ia(t,r),Fs(t,i)},enqueueForceUpdate:function(t,e){t=t._reactInternalFiber;var n=Is(),i=ua.suspense;(i=ea(n=Ns(n,t,i),i)).tag=2,null!=e&&(i.callback=e),ia(t,i),Fs(t,n)}};function pa(t,e,n,i,r,a,o){return"function"==typeof(t=t.stateNode).shouldComponentUpdate?t.shouldComponentUpdate(i,a,o):!e.prototype||!e.prototype.isPureReactComponent||(!Bi(n,i)||!Bi(r,a))}function ga(t,e,n){var i=!1,r=ir,a=e.contextType;return"object"==typeof a&&null!==a?a=Kr(a):(r=lr(e)?or:rr.current,a=(i=null!=(i=e.contextTypes))?sr(t,r):ir),e=new e(n,a),t.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=da,t.stateNode=e,e._reactInternalFiber=t,i&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,t.__reactInternalMemoizedMaskedChildContext=a),e}function ma(t,e,n,i){t=e.state,"function"==typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,i),"function"==typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,i),e.state!==t&&da.enqueueReplaceState(e,e.state,null)}function va(t,e,n,i){var r=t.stateNode;r.props=n,r.state=t.memoizedState,r.refs=ha;var a=e.contextType;"object"==typeof a&&null!==a?r.context=Kr(a):(a=lr(e)?or:rr.current,r.context=sr(t,a)),null!==(a=t.updateQueue)&&(sa(t,a,n,r,i),r.state=t.memoizedState),"function"==typeof(a=e.getDerivedStateFromProps)&&(fa(t,e,a,n),r.state=t.memoizedState),"function"==typeof e.getDerivedStateFromProps||"function"==typeof r.getSnapshotBeforeUpdate||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||(e=r.state,"function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),e!==r.state&&da.enqueueReplaceState(r,r.state,null),null!==(a=t.updateQueue)&&(sa(t,a,n,r,i),r.state=t.memoizedState)),"function"==typeof r.componentDidMount&&(t.effectTag|=4)}var xa=Array.isArray;function ba(t,e,n){if(null!==(t=n.ref)&&"function"!=typeof t&&"object"!=typeof t){if(n._owner){if(n=n._owner){if(1!==n.tag)throw o(Error(309));var i=n.stateNode}if(!i)throw o(Error(147),t);var r=""+t;return null!==e&&null!==e.ref&&"function"==typeof e.ref&&e.ref._stringRef===r?e.ref:((e=function(t){var e=i.refs;e===ha&&(e=i.refs={}),null===t?delete e[r]:e[r]=t})._stringRef=r,e)}if("string"!=typeof t)throw o(Error(284));if(!n._owner)throw o(Error(290),t)}return t}function ya(t,e){if("textarea"!==t.type)throw o(Error(31),"[object Object]"===Object.prototype.toString.call(e)?"object with keys {"+Object.keys(e).join(", ")+"}":e,"")}function wa(t){function e(e,n){if(t){var i=e.lastEffect;null!==i?(i.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,i){if(!t)return null;for(;null!==i;)e(n,i),i=i.sibling;return null}function i(t,e){for(t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function r(t,e,n){return(t=xl(t,e)).index=0,t.sibling=null,t}function a(e,n,i){return e.index=i,t?null!==(i=e.alternate)?(i=i.index)<n?(e.effectTag=2,n):i:(e.effectTag=2,n):n}function s(e){return t&&null===e.alternate&&(e.effectTag=2),e}function l(t,e,n,i){return null===e||6!==e.tag?((e=wl(n,t.mode,i)).return=t,e):((e=r(e,n)).return=t,e)}function c(t,e,n,i){return null!==e&&e.elementType===n.type?((i=r(e,n.props)).ref=ba(t,e,n),i.return=t,i):((i=bl(n.type,n.key,n.props,null,t.mode,i)).ref=ba(t,e,n),i.return=t,i)}function u(t,e,n,i){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=kl(n,t.mode,i)).return=t,e):((e=r(e,n.children||[])).return=t,e)}function h(t,e,n,i,a){return null===e||7!==e.tag?((e=yl(n,t.mode,i,a)).return=t,e):((e=r(e,n)).return=t,e)}function f(t,e,n){if("string"==typeof e||"number"==typeof e)return(e=wl(""+e,t.mode,n)).return=t,e;if("object"==typeof e&&null!==e){switch(e.$$typeof){case z:return(n=bl(e.type,e.key,e.props,null,t.mode,n)).ref=ba(t,null,e),n.return=t,n;case F:return(e=kl(e,t.mode,n)).return=t,e}if(xa(e)||Z(e))return(e=yl(e,t.mode,n,null)).return=t,e;ya(t,e)}return null}function d(t,e,n,i){var r=null!==e?e.key:null;if("string"==typeof n||"number"==typeof n)return null!==r?null:l(t,e,""+n,i);if("object"==typeof n&&null!==n){switch(n.$$typeof){case z:return n.key===r?n.type===D?h(t,e,n.props.children,i,r):c(t,e,n,i):null;case F:return n.key===r?u(t,e,n,i):null}if(xa(n)||Z(n))return null!==r?null:h(t,e,n,i,null);ya(t,n)}return null}function p(t,e,n,i,r){if("string"==typeof i||"number"==typeof i)return l(e,t=t.get(n)||null,""+i,r);if("object"==typeof i&&null!==i){switch(i.$$typeof){case z:return t=t.get(null===i.key?n:i.key)||null,i.type===D?h(e,t,i.props.children,r,i.key):c(e,t,i,r);case F:return u(e,t=t.get(null===i.key?n:i.key)||null,i,r)}if(xa(i)||Z(i))return h(e,t=t.get(n)||null,i,r,null);ya(e,i)}return null}function g(r,o,s,l){for(var c=null,u=null,h=o,g=o=0,m=null;null!==h&&g<s.length;g++){h.index>g?(m=h,h=null):m=h.sibling;var v=d(r,h,s[g],l);if(null===v){null===h&&(h=m);break}t&&h&&null===v.alternate&&e(r,h),o=a(v,o,g),null===u?c=v:u.sibling=v,u=v,h=m}if(g===s.length)return n(r,h),c;if(null===h){for(;g<s.length;g++)null!==(h=f(r,s[g],l))&&(o=a(h,o,g),null===u?c=h:u.sibling=h,u=h);return c}for(h=i(r,h);g<s.length;g++)null!==(m=p(h,r,g,s[g],l))&&(t&&null!==m.alternate&&h.delete(null===m.key?g:m.key),o=a(m,o,g),null===u?c=m:u.sibling=m,u=m);return t&&h.forEach((function(t){return e(r,t)})),c}function m(r,s,l,c){var u=Z(l);if("function"!=typeof u)throw o(Error(150));if(null==(l=u.call(l)))throw o(Error(151));for(var h=u=null,g=s,m=s=0,v=null,x=l.next();null!==g&&!x.done;m++,x=l.next()){g.index>m?(v=g,g=null):v=g.sibling;var b=d(r,g,x.value,c);if(null===b){null===g&&(g=v);break}t&&g&&null===b.alternate&&e(r,g),s=a(b,s,m),null===h?u=b:h.sibling=b,h=b,g=v}if(x.done)return n(r,g),u;if(null===g){for(;!x.done;m++,x=l.next())null!==(x=f(r,x.value,c))&&(s=a(x,s,m),null===h?u=x:h.sibling=x,h=x);return u}for(g=i(r,g);!x.done;m++,x=l.next())null!==(x=p(g,r,m,x.value,c))&&(t&&null!==x.alternate&&g.delete(null===x.key?m:x.key),s=a(x,s,m),null===h?u=x:h.sibling=x,h=x);return t&&g.forEach((function(t){return e(r,t)})),u}return function(t,i,a,l){var c="object"==typeof a&&null!==a&&a.type===D&&null===a.key;c&&(a=a.props.children);var u="object"==typeof a&&null!==a;if(u)switch(a.$$typeof){case z:t:{for(u=a.key,c=i;null!==c;){if(c.key===u){if(7===c.tag?a.type===D:c.elementType===a.type){n(t,c.sibling),(i=r(c,a.type===D?a.props.children:a.props)).ref=ba(t,c,a),i.return=t,t=i;break t}n(t,c);break}e(t,c),c=c.sibling}a.type===D?((i=yl(a.props.children,t.mode,l,a.key)).return=t,t=i):((l=bl(a.type,a.key,a.props,null,t.mode,l)).ref=ba(t,i,a),l.return=t,t=l)}return s(t);case F:t:{for(c=a.key;null!==i;){if(i.key===c){if(4===i.tag&&i.stateNode.containerInfo===a.containerInfo&&i.stateNode.implementation===a.implementation){n(t,i.sibling),(i=r(i,a.children||[])).return=t,t=i;break t}n(t,i);break}e(t,i),i=i.sibling}(i=kl(a,t.mode,l)).return=t,t=i}return s(t)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==i&&6===i.tag?(n(t,i.sibling),(i=r(i,a)).return=t,t=i):(n(t,i),(i=wl(a,t.mode,l)).return=t,t=i),s(t);if(xa(a))return g(t,i,a,l);if(Z(a))return m(t,i,a,l);if(u&&ya(t,a),void 0===a&&!c)switch(t.tag){case 1:case 0:throw t=t.type,o(Error(152),t.displayName||t.name||"Component")}return n(t,i)}}var ka=wa(!0),Sa=wa(!1),Ca={},Aa={current:Ca},Ea={current:Ca},Pa={current:Ca};function Ta(t){if(t===Ca)throw o(Error(174));return t}function Oa(t,e){nr(Pa,e),nr(Ea,t),nr(Aa,Ca);var n=e.nodeType;switch(n){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:jt(null,"");break;default:e=jt(e=(n=8===n?e.parentNode:e).namespaceURI||null,n=n.tagName)}er(Aa),nr(Aa,e)}function La(t){er(Aa),er(Ea),er(Pa)}function Ma(t){Ta(Pa.current);var e=Ta(Aa.current),n=jt(e,t.type);e!==n&&(nr(Ea,t),nr(Aa,n))}function _a(t){Ea.current===t&&(er(Aa),er(Ea))}var Ia={current:0};function Na(t){for(var e=t;null!==e;){if(13===e.tag){var n=e.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(0!=(64&e.effectTag))return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}function Ra(t,e){return{responder:t,props:e}}var za=I.ReactCurrentDispatcher,Fa=0,Da=null,Xa=null,Ya=null,ja=null,Wa=null,Ha=null,Ba=0,Va=null,Ua=0,Ga=!1,qa=null,$a=0;function Za(){throw o(Error(321))}function Ka(t,e){if(null===e)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!Wi(t[n],e[n]))return!1;return!0}function Qa(t,e,n,i,r,a){if(Fa=a,Da=e,Ya=null!==t?t.memoizedState:null,za.current=null===Ya?ho:fo,e=n(i,r),Ga){do{Ga=!1,$a+=1,Ya=null!==t?t.memoizedState:null,Ha=ja,Va=Wa=Xa=null,za.current=fo,e=n(i,r)}while(Ga);qa=null,$a=0}if(za.current=uo,(t=Da).memoizedState=ja,t.expirationTime=Ba,t.updateQueue=Va,t.effectTag|=Ua,t=null!==Xa&&null!==Xa.next,Fa=0,Ha=Wa=ja=Ya=Xa=Da=null,Ba=0,Va=null,Ua=0,t)throw o(Error(300));return e}function Ja(){za.current=uo,Fa=0,Ha=Wa=ja=Ya=Xa=Da=null,Ba=0,Va=null,Ua=0,Ga=!1,qa=null,$a=0}function to(){var t={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Wa?ja=Wa=t:Wa=Wa.next=t,Wa}function eo(){if(null!==Ha)Ha=(Wa=Ha).next,Ya=null!==(Xa=Ya)?Xa.next:null;else{if(null===Ya)throw o(Error(310));var t={memoizedState:(Xa=Ya).memoizedState,baseState:Xa.baseState,queue:Xa.queue,baseUpdate:Xa.baseUpdate,next:null};Wa=null===Wa?ja=t:Wa.next=t,Ya=Xa.next}return Wa}function no(t,e){return"function"==typeof e?e(t):e}function io(t){var e=eo(),n=e.queue;if(null===n)throw o(Error(311));if(n.lastRenderedReducer=t,0<$a){var i=n.dispatch;if(null!==qa){var r=qa.get(n);if(void 0!==r){qa.delete(n);var a=e.memoizedState;do{a=t(a,r.action),r=r.next}while(null!==r);return Wi(a,e.memoizedState)||(Co=!0),e.memoizedState=a,e.baseUpdate===n.last&&(e.baseState=a),n.lastRenderedState=a,[a,i]}}return[e.memoizedState,i]}i=n.last;var s=e.baseUpdate;if(a=e.baseState,null!==s?(null!==i&&(i.next=null),i=s.next):i=null!==i?i.next:null,null!==i){var l=r=null,c=i,u=!1;do{var h=c.expirationTime;h<Fa?(u||(u=!0,l=s,r=a),h>Ba&&Qs(Ba=h)):(Ks(h,c.suspenseConfig),a=c.eagerReducer===t?c.eagerState:t(a,c.action)),s=c,c=c.next}while(null!==c&&c!==i);u||(l=s,r=a),Wi(a,e.memoizedState)||(Co=!0),e.memoizedState=a,e.baseUpdate=l,e.baseState=r,n.lastRenderedState=a}return[e.memoizedState,n.dispatch]}function ro(t,e,n,i){return t={tag:t,create:e,destroy:n,deps:i,next:null},null===Va?(Va={lastEffect:null}).lastEffect=t.next=t:null===(e=Va.lastEffect)?Va.lastEffect=t.next=t:(n=e.next,e.next=t,t.next=n,Va.lastEffect=t),t}function ao(t,e,n,i){var r=to();Ua|=t,r.memoizedState=ro(e,n,void 0,void 0===i?null:i)}function oo(t,e,n,i){var r=eo();i=void 0===i?null:i;var a=void 0;if(null!==Xa){var o=Xa.memoizedState;if(a=o.destroy,null!==i&&Ka(i,o.deps))return void ro(0,n,a,i)}Ua|=t,r.memoizedState=ro(e,n,a,i)}function so(t,e){return"function"==typeof e?(t=t(),e(t),function(){e(null)}):null!=e?(t=t(),e.current=t,function(){e.current=null}):void 0}function lo(){}function co(t,e,n){if(!(25>$a))throw o(Error(301));var i=t.alternate;if(t===Da||null!==i&&i===Da)if(Ga=!0,t={expirationTime:Fa,suspenseConfig:null,action:n,eagerReducer:null,eagerState:null,next:null},null===qa&&(qa=new Map),void 0===(n=qa.get(e)))qa.set(e,t);else{for(e=n;null!==e.next;)e=e.next;e.next=t}else{var r=Is(),a=ua.suspense;a={expirationTime:r=Ns(r,t,a),suspenseConfig:a,action:n,eagerReducer:null,eagerState:null,next:null};var s=e.last;if(null===s)a.next=a;else{var l=s.next;null!==l&&(a.next=l),s.next=a}if(e.last=a,0===t.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=e.lastRenderedReducer))try{var c=e.lastRenderedState,u=i(c,n);if(a.eagerReducer=i,a.eagerState=u,Wi(u,c))return}catch(t){}Fs(t,r)}}var uo={readContext:Kr,useCallback:Za,useContext:Za,useEffect:Za,useImperativeHandle:Za,useLayoutEffect:Za,useMemo:Za,useReducer:Za,useRef:Za,useState:Za,useDebugValue:Za,useResponder:Za},ho={readContext:Kr,useCallback:function(t,e){return to().memoizedState=[t,void 0===e?null:e],t},useContext:Kr,useEffect:function(t,e){return ao(516,192,t,e)},useImperativeHandle:function(t,e,n){return n=null!=n?n.concat([t]):null,ao(4,36,so.bind(null,e,t),n)},useLayoutEffect:function(t,e){return ao(4,36,t,e)},useMemo:function(t,e){var n=to();return e=void 0===e?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var i=to();return e=void 0!==n?n(e):e,i.memoizedState=i.baseState=e,t=(t=i.queue={last:null,dispatch:null,lastRenderedReducer:t,lastRenderedState:e}).dispatch=co.bind(null,Da,t),[i.memoizedState,t]},useRef:function(t){return t={current:t},to().memoizedState=t},useState:function(t){var e=to();return"function"==typeof t&&(t=t()),e.memoizedState=e.baseState=t,t=(t=e.queue={last:null,dispatch:null,lastRenderedReducer:no,lastRenderedState:t}).dispatch=co.bind(null,Da,t),[e.memoizedState,t]},useDebugValue:lo,useResponder:Ra},fo={readContext:Kr,useCallback:function(t,e){var n=eo();e=void 0===e?null:e;var i=n.memoizedState;return null!==i&&null!==e&&Ka(e,i[1])?i[0]:(n.memoizedState=[t,e],t)},useContext:Kr,useEffect:function(t,e){return oo(516,192,t,e)},useImperativeHandle:function(t,e,n){return n=null!=n?n.concat([t]):null,oo(4,36,so.bind(null,e,t),n)},useLayoutEffect:function(t,e){return oo(4,36,t,e)},useMemo:function(t,e){var n=eo();e=void 0===e?null:e;var i=n.memoizedState;return null!==i&&null!==e&&Ka(e,i[1])?i[0]:(t=t(),n.memoizedState=[t,e],t)},useReducer:io,useRef:function(){return eo().memoizedState},useState:function(t){return io(no)},useDebugValue:lo,useResponder:Ra},po=null,go=null,mo=!1;function vo(t,e){var n=ml(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=e,n.return=t,n.effectTag=8,null!==t.lastEffect?(t.lastEffect.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n}function xo(t,e){switch(t.tag){case 5:var n=t.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(t.stateNode=e,!0);case 6:return null!==(e=""===t.pendingProps||3!==e.nodeType?null:e)&&(t.stateNode=e,!0);case 13:default:return!1}}function bo(t){if(mo){var e=go;if(e){var n=e;if(!xo(t,e)){if(!(e=$n(n.nextSibling))||!xo(t,e))return t.effectTag=t.effectTag&~xe|2,mo=!1,void(po=t);vo(po,n)}po=t,go=$n(e.firstChild)}else t.effectTag=t.effectTag&~xe|2,mo=!1,po=t}}function yo(t){for(t=t.return;null!==t&&5!==t.tag&&3!==t.tag&&13!==t.tag;)t=t.return;po=t}function wo(t){if(t!==po)return!1;if(!mo)return yo(t),mo=!0,!1;var e=t.type;if(5!==t.tag||"head"!==e&&"body"!==e&&!Un(e,t.memoizedProps))for(e=go;e;)vo(t,e),e=$n(e.nextSibling);if(yo(t),13===t.tag)if(null===(t=null!==(t=t.memoizedState)?t.dehydrated:null))t=go;else t:{for(t=t.nextSibling,e=0;t;){if(8===t.nodeType){var n=t.data;if("/$"===n){if(0===e){t=$n(t.nextSibling);break t}e--}else"$"!==n&&"$!"!==n&&"$?"!==n||e++}t=t.nextSibling}t=null}else t=po?$n(t.stateNode.nextSibling):null;return go=t,!0}function ko(){go=po=null,mo=!1}var So=I.ReactCurrentOwner,Co=!1;function Ao(t,e,n,i){e.child=null===t?Sa(e,null,n,i):ka(e,t.child,n,i)}function Eo(t,e,n,i,r){n=n.render;var a=e.ref;return Zr(e,r),i=Qa(t,e,n,i,a,r),null===t||Co?(e.effectTag|=1,Ao(t,e,i,r),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=r&&(t.expirationTime=0),jo(t,e,r))}function Po(t,e,n,i,r,a){if(null===t){var o=n.type;return"function"!=typeof o||vl(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((t=bl(n.type,null,i,null,e.mode,a)).ref=e.ref,t.return=e,e.child=t):(e.tag=15,e.type=o,To(t,e,o,i,r,a))}return o=t.child,r<a&&(r=o.memoizedProps,(n=null!==(n=n.compare)?n:Bi)(r,i)&&t.ref===e.ref)?jo(t,e,a):(e.effectTag|=1,(t=xl(o,i)).ref=e.ref,t.return=e,e.child=t)}function To(t,e,n,i,r,a){return null!==t&&Bi(t.memoizedProps,i)&&t.ref===e.ref&&(Co=!1,r<a)?jo(t,e,a):Lo(t,e,n,i,a)}function Oo(t,e){var n=e.ref;(null===t&&null!==n||null!==t&&t.ref!==n)&&(e.effectTag|=128)}function Lo(t,e,n,i,r){var a=lr(n)?or:rr.current;return a=sr(e,a),Zr(e,r),n=Qa(t,e,n,i,a,r),null===t||Co?(e.effectTag|=1,Ao(t,e,n,r),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=r&&(t.expirationTime=0),jo(t,e,r))}function Mo(t,e,n,i,r){if(lr(n)){var a=!0;dr(e)}else a=!1;if(Zr(e,r),null===e.stateNode)null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),ga(e,n,i),va(e,n,i,r),i=!0;else if(null===t){var o=e.stateNode,s=e.memoizedProps;o.props=s;var l=o.context,c=n.contextType;"object"==typeof c&&null!==c?c=Kr(c):c=sr(e,c=lr(n)?or:rr.current);var u=n.getDerivedStateFromProps,h="function"==typeof u||"function"==typeof o.getSnapshotBeforeUpdate;h||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(s!==i||l!==c)&&ma(e,o,i,c),Qr=!1;var f=e.memoizedState;l=o.state=f;var d=e.updateQueue;null!==d&&(sa(e,d,i,o,r),l=e.memoizedState),s!==i||f!==l||ar.current||Qr?("function"==typeof u&&(fa(e,n,u,i),l=e.memoizedState),(s=Qr||pa(e,n,s,i,f,l,c))?(h||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(e.effectTag|=4)):("function"==typeof o.componentDidMount&&(e.effectTag|=4),e.memoizedProps=i,e.memoizedState=l),o.props=i,o.state=l,o.context=c,i=s):("function"==typeof o.componentDidMount&&(e.effectTag|=4),i=!1)}else o=e.stateNode,s=e.memoizedProps,o.props=e.type===e.elementType?s:jr(e.type,s),l=o.context,"object"==typeof(c=n.contextType)&&null!==c?c=Kr(c):c=sr(e,c=lr(n)?or:rr.current),(h="function"==typeof(u=n.getDerivedStateFromProps)||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(s!==i||l!==c)&&ma(e,o,i,c),Qr=!1,l=e.memoizedState,f=o.state=l,null!==(d=e.updateQueue)&&(sa(e,d,i,o,r),f=e.memoizedState),s!==i||l!==f||ar.current||Qr?("function"==typeof u&&(fa(e,n,u,i),f=e.memoizedState),(u=Qr||pa(e,n,s,i,l,f,c))?(h||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(i,f,c),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(i,f,c)),"function"==typeof o.componentDidUpdate&&(e.effectTag|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(e.effectTag|=256)):("function"!=typeof o.componentDidUpdate||s===t.memoizedProps&&l===t.memoizedState||(e.effectTag|=4),"function"!=typeof o.getSnapshotBeforeUpdate||s===t.memoizedProps&&l===t.memoizedState||(e.effectTag|=256),e.memoizedProps=i,e.memoizedState=f),o.props=i,o.state=f,o.context=c,i=u):("function"!=typeof o.componentDidUpdate||s===t.memoizedProps&&l===t.memoizedState||(e.effectTag|=4),"function"!=typeof o.getSnapshotBeforeUpdate||s===t.memoizedProps&&l===t.memoizedState||(e.effectTag|=256),i=!1);return _o(t,e,n,i,a,r)}function _o(t,e,n,i,r,a){Oo(t,e);var o=0!=(64&e.effectTag);if(!i&&!o)return r&&pr(e,n,!1),jo(t,e,a);i=e.stateNode,So.current=e;var s=o&&"function"!=typeof n.getDerivedStateFromError?null:i.render();return e.effectTag|=1,null!==t&&o?(e.child=ka(e,t.child,null,a),e.child=ka(e,null,s,a)):Ao(t,e,s,a),e.memoizedState=i.state,r&&pr(e,n,!0),e.child}function Io(t){var e=t.stateNode;e.pendingContext?hr(0,e.pendingContext,e.pendingContext!==e.context):e.context&&hr(0,e.context,!1),Oa(t,e.containerInfo)}var No,Ro,zo,Fo={dehydrated:null,retryTime:1};function Do(t,e,n){var i,r=e.mode,a=e.pendingProps,o=Ia.current,s=!1;if((i=0!=(64&e.effectTag))||(i=0!=(2&o)&&(null===t||null!==t.memoizedState)),i?(s=!0,e.effectTag&=-65):null!==t&&null===t.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),nr(Ia,1&o),null===t){if(s){if(s=a.fallback,(a=yl(null,r,0,null)).return=e,0==(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,a.child=t;null!==t;)t.return=a,t=t.sibling;return(n=yl(s,r,n,null)).return=e,a.sibling=n,e.memoizedState=Fo,e.child=a,n}return r=a.children,e.memoizedState=null,e.child=Sa(e,null,r,n)}if(null!==t.memoizedState){if(r=(t=t.child).sibling,s){if(a=a.fallback,(n=xl(t,t.pendingProps)).return=e,0==(2&e.mode)&&(s=null!==e.memoizedState?e.child.child:e.child)!==t.child)for(n.child=s;null!==s;)s.return=n,s=s.sibling;return(r=xl(r,a,r.expirationTime)).return=e,n.sibling=r,n.childExpirationTime=0,e.memoizedState=Fo,e.child=n,r}return n=ka(e,t.child,a.children,n),e.memoizedState=null,e.child=n}if(t=t.child,s){if(s=a.fallback,(a=yl(null,r,0,null)).return=e,a.child=t,null!==t&&(t.return=a),0==(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,a.child=t;null!==t;)t.return=a,t=t.sibling;return(n=yl(s,r,n,null)).return=e,a.sibling=n,n.effectTag|=2,a.childExpirationTime=0,e.memoizedState=Fo,e.child=a,n}return e.memoizedState=null,e.child=ka(e,t,a.children,n)}function Xo(t,e,n,i,r){var a=t.memoizedState;null===a?t.memoizedState={isBackwards:e,rendering:null,last:i,tail:n,tailExpiration:0,tailMode:r}:(a.isBackwards=e,a.rendering=null,a.last=i,a.tail=n,a.tailExpiration=0,a.tailMode=r)}function Yo(t,e,n){var i=e.pendingProps,r=i.revealOrder,a=i.tail;if(Ao(t,e,i.children,n),0!=(2&(i=Ia.current)))i=1&i|2,e.effectTag|=64;else{if(null!==t&&0!=(64&t.effectTag))t:for(t=e.child;null!==t;){if(13===t.tag){if(null!==t.memoizedState){t.expirationTime<n&&(t.expirationTime=n);var o=t.alternate;null!==o&&o.expirationTime<n&&(o.expirationTime=n),$r(t.return,n)}}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break t;for(;null===t.sibling;){if(null===t.return||t.return===e)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}i&=1}if(nr(Ia,i),0==(2&e.mode))e.memoizedState=null;else switch(r){case"forwards":for(n=e.child,r=null;null!==n;)null!==(i=n.alternate)&&null===Na(i)&&(r=n),n=n.sibling;null===(n=r)?(r=e.child,e.child=null):(r=n.sibling,n.sibling=null),Xo(e,!1,r,n,a);break;case"backwards":for(n=null,r=e.child,e.child=null;null!==r;){if(null!==(i=r.alternate)&&null===Na(i)){e.child=r;break}i=r.sibling,r.sibling=n,n=r,r=i}Xo(e,!0,n,null,a);break;case"together":Xo(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function jo(t,e,n){null!==t&&(e.dependencies=t.dependencies);var i=e.expirationTime;if(0!==i&&Qs(i),e.childExpirationTime<n)return null;if(null!==t&&e.child!==t.child)throw o(Error(153));if(null!==e.child){for(n=xl(t=e.child,t.pendingProps,t.expirationTime),e.child=n,n.return=e;null!==t.sibling;)t=t.sibling,(n=n.sibling=xl(t,t.pendingProps,t.expirationTime)).return=e;n.sibling=null}return e.child}function Wo(t){t.effectTag|=4}function Ho(t,e){switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;null!==e;)null!==e.alternate&&(n=e),e=e.sibling;null===n?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var i=null;null!==n;)null!==n.alternate&&(i=n),n=n.sibling;null===i?e||null===t.tail?t.tail=null:t.tail.sibling=null:i.sibling=null}}function Bo(t){switch(t.tag){case 1:lr(t.type)&&cr();var e=t.effectTag;return 4096&e?(t.effectTag=-4097&e|64,t):null;case 3:if(La(),ur(),0!=(64&(e=t.effectTag)))throw o(Error(285));return t.effectTag=-4097&e|64,t;case 5:return _a(t),null;case 13:return er(Ia),4096&(e=t.effectTag)?(t.effectTag=-4097&e|64,t):null;case 19:return er(Ia),null;case 4:return La(),null;case 10:return qr(t),null;default:return null}}function Vo(t,e){return{value:t,source:e,stack:Q(e)}}No=function(t,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)t.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ro=function(t,e,n,i,a){var o=t.memoizedProps;if(o!==i){var s,l,c=e.stateNode;switch(Ta(Aa.current),t=null,n){case"input":o=Et(c,o),i=Et(c,i),t=[];break;case"option":o=_t(c,o),i=_t(c,i),t=[];break;case"select":o=r({},o,{value:void 0}),i=r({},i,{value:void 0}),t=[];break;case"textarea":o=Nt(c,o),i=Nt(c,i),t=[];break;default:"function"!=typeof o.onClick&&"function"==typeof i.onClick&&(c.onclick=Fn)}for(s in Nn(n,i),n=null,o)if(!i.hasOwnProperty(s)&&o.hasOwnProperty(s)&&null!=o[s])if("style"===s)for(l in c=o[s])c.hasOwnProperty(l)&&(n||(n={}),n[l]="");else"dangerouslySetInnerHTML"!==s&&"children"!==s&&"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(d.hasOwnProperty(s)?t||(t=[]):(t=t||[]).push(s,null));for(s in i){var u=i[s];if(c=null!=o?o[s]:void 0,i.hasOwnProperty(s)&&u!==c&&(null!=u||null!=c))if("style"===s)if(c){for(l in c)!c.hasOwnProperty(l)||u&&u.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in u)u.hasOwnProperty(l)&&c[l]!==u[l]&&(n||(n={}),n[l]=u[l])}else n||(t||(t=[]),t.push(s,n)),n=u;else"dangerouslySetInnerHTML"===s?(u=u?u.__html:void 0,c=c?c.__html:void 0,null!=u&&c!==u&&(t=t||[]).push(s,""+u)):"children"===s?c===u||"string"!=typeof u&&"number"!=typeof u||(t=t||[]).push(s,""+u):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&(d.hasOwnProperty(s)?(null!=u&&zn(a,s),t||c===u||(t=[])):(t=t||[]).push(s,u))}n&&(t=t||[]).push("style",n),a=t,(e.updateQueue=a)&&Wo(e)}},zo=function(t,e,n,i){n!==i&&Wo(e)};var Uo="function"==typeof WeakSet?WeakSet:Set;function Go(t,e){var n=e.source,i=e.stack;null===i&&null!==n&&(i=Q(n)),null!==n&&K(n.type),e=e.value,null!==t&&1===t.tag&&K(t.type);try{console.error(e)}catch(t){setTimeout((function(){throw t}))}}function qo(t){var e=t.ref;if(null!==e)if("function"==typeof e)try{e(null)}catch(e){ul(t,e)}else e.current=null}function $o(t,e){switch(e.tag){case 0:case 11:case 15:Zo(2,0,e);break;case 1:if(256&e.effectTag&&null!==t){var n=t.memoizedProps,i=t.memoizedState;e=(t=e.stateNode).getSnapshotBeforeUpdate(e.elementType===e.type?n:jr(e.type,n),i),t.__reactInternalSnapshotBeforeUpdate=e}break;case 3:case 5:case 6:case 4:case 17:break;default:throw o(Error(163))}}function Zo(t,e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var i=n=n.next;do{if(0!=(i.tag&t)){var r=i.destroy;i.destroy=void 0,void 0!==r&&r()}0!=(i.tag&e)&&(r=i.create,i.destroy=r()),i=i.next}while(i!==n)}}function Ko(t,e,n){switch("function"==typeof pl&&pl(e),e.tag){case 0:case 11:case 14:case 15:if(null!==(t=e.updateQueue)&&null!==(t=t.lastEffect)){var i=t.next;zr(97<n?97:n,(function(){var t=i;do{var n=t.destroy;if(void 0!==n){var r=e;try{n()}catch(t){ul(r,t)}}t=t.next}while(t!==i)}))}break;case 1:qo(e),"function"==typeof(n=e.stateNode).componentWillUnmount&&function(t,e){try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){ul(t,e)}}(e,n);break;case 5:qo(e);break;case 4:es(t,e,n)}}function Qo(t){var e=t.alternate;t.return=null,t.child=null,t.memoizedState=null,t.updateQueue=null,t.dependencies=null,t.alternate=null,t.firstEffect=null,t.lastEffect=null,t.pendingProps=null,t.memoizedProps=null,null!==e&&Qo(e)}function Jo(t){return 5===t.tag||3===t.tag||4===t.tag}function ts(t){t:{for(var e=t.return;null!==e;){if(Jo(e)){var n=e;break t}e=e.return}throw o(Error(160))}switch(e=n.stateNode,n.tag){case 5:var i=!1;break;case 3:case 4:e=e.containerInfo,i=!0;break;default:throw o(Error(161))}16&n.effectTag&&(Bt(e,""),n.effectTag&=-17);t:e:for(n=t;;){for(;null===n.sibling;){if(null===n.return||Jo(n.return)){n=null;break t}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue e;if(null===n.child||4===n.tag)continue e;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break t}}for(var r=t;;){var a=5===r.tag||6===r.tag;if(a){var s=a?r.stateNode:r.stateNode.instance;if(n)if(i){var l=s;s=n,8===(a=e).nodeType?a.parentNode.insertBefore(l,s):a.insertBefore(l,s)}else e.insertBefore(s,n);else i?(8===(l=e).nodeType?(a=l.parentNode).insertBefore(s,l):(a=l).appendChild(s),null!=(l=l._reactRootContainer)||null!==a.onclick||(a.onclick=Fn)):e.appendChild(s)}else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}}function es(t,e,n){for(var i,r,a=e,s=!1;;){if(!s){s=a.return;t:for(;;){if(null===s)throw o(Error(160));switch(i=s.stateNode,s.tag){case 5:r=!1;break t;case 3:case 4:i=i.containerInfo,r=!0;break t}s=s.return}s=!0}if(5===a.tag||6===a.tag){t:for(var l=t,c=a,u=n,h=c;;)if(Ko(l,h,u),null!==h.child&&4!==h.tag)h.child.return=h,h=h.child;else{if(h===c)break;for(;null===h.sibling;){if(null===h.return||h.return===c)break t;h=h.return}h.sibling.return=h.return,h=h.sibling}r?(l=i,c=a.stateNode,8===l.nodeType?l.parentNode.removeChild(c):l.removeChild(c)):i.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){i=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(Ko(t,a,n),null!==a.child){a.child.return=a,a=a.child;continue}if(a===e)break;for(;null===a.sibling;){if(null===a.return||a.return===e)return;4===(a=a.return).tag&&(s=!1)}a.sibling.return=a.return,a=a.sibling}}function ns(t,e){switch(e.tag){case 0:case 11:case 14:case 15:Zo(4,8,e);break;case 1:break;case 5:var n=e.stateNode;if(null!=n){var i=e.memoizedProps,r=null!==t?t.memoizedProps:i;t=e.type;var a=e.updateQueue;if(e.updateQueue=null,null!==a){for(n[Jn]=i,"input"===t&&"radio"===i.type&&null!=i.name&&Tt(n,i),Rn(t,r),e=Rn(t,i),r=0;r<a.length;r+=2){var s=a[r],l=a[r+1];"style"===s?_n(n,l):"dangerouslySetInnerHTML"===s?Ht(n,l):"children"===s?Bt(n,l):kt(n,s,l,e)}switch(t){case"input":Ot(n,i);break;case"textarea":zt(n,i);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!i.multiple,null!=(t=i.value)?It(n,!!i.multiple,t,!1):e!==!!i.multiple&&(null!=i.defaultValue?It(n,!!i.multiple,i.defaultValue,!0):It(n,!!i.multiple,i.multiple?[]:"",!1))}}}break;case 6:if(null===e.stateNode)throw o(Error(162));e.stateNode.nodeValue=e.memoizedProps;break;case 3:(e=e.stateNode).hydrate&&(e.hydrate=!1,ve(e.containerInfo));break;case 12:break;case 13:if(n=e,null===e.memoizedState?i=!1:(i=!0,n=e.child,ws=Ir()),null!==n)t:for(t=n;;){if(5===t.tag)a=t.stateNode,i?"function"==typeof(a=a.style).setProperty?a.setProperty("display","none","important"):a.display="none":(a=t.stateNode,r=null!=(r=t.memoizedProps.style)&&r.hasOwnProperty("display")?r.display:null,a.style.display=Mn("display",r));else if(6===t.tag)t.stateNode.nodeValue=i?"":t.memoizedProps;else{if(13===t.tag&&null!==t.memoizedState&&null===t.memoizedState.dehydrated){(a=t.child.sibling).return=t,t=a;continue}if(null!==t.child){t.child.return=t,t=t.child;continue}}if(t===n)break t;for(;null===t.sibling;){if(null===t.return||t.return===n)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}is(e);break;case 19:is(e);break;case 17:case 20:case 21:break;default:throw o(Error(163))}}function is(t){var e=t.updateQueue;if(null!==e){t.updateQueue=null;var n=t.stateNode;null===n&&(n=t.stateNode=new Uo),e.forEach((function(e){var i=fl.bind(null,t,e);n.has(e)||(n.add(e),e.then(i,i))}))}}var rs="function"==typeof WeakMap?WeakMap:Map;function as(t,e,n){(n=ea(n,null)).tag=3,n.payload={element:null};var i=e.value;return n.callback=function(){Ss||(Ss=!0,Cs=i),Go(t,e)},n}function os(t,e,n){(n=ea(n,null)).tag=3;var i=t.type.getDerivedStateFromError;if("function"==typeof i){var r=e.value;n.payload=function(){return Go(t,e),i(r)}}var a=t.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof i&&(null===As?As=new Set([this]):As.add(this),Go(t,e));var n=e.stack;this.componentDidCatch(e.value,{componentStack:null!==n?n:""})}),n}var ss=Math.ceil,ls=I.ReactCurrentDispatcher,cs=I.ReactCurrentOwner,us=0,hs=null,fs=null,ds=0,ps=0,gs=null,ms=1073741823,vs=1073741823,xs=null,bs=0,ys=!1,ws=0,ks=null,Ss=!1,Cs=null,As=null,Es=!1,Ps=null,Ts=90,Os=null,Ls=0,Ms=null,_s=0;function Is(){return 0!=(48&us)?1073741821-(Ir()/10|0):0!==_s?_s:_s=1073741821-(Ir()/10|0)}function Ns(t,e,n){if(0==(2&(e=e.mode)))return 1073741823;var i=Nr();if(0==(4&e))return 99===i?1073741823:1073741822;if(0!=(16&us))return ds;if(null!==n)t=1073741821-25*(1+((1073741821-t+(0|n.timeoutMs||5e3)/10)/25|0));else switch(i){case 99:t=1073741823;break;case 98:t=1073741821-10*(1+((1073741821-t+15)/10|0));break;case 97:case 96:t=1073741821-25*(1+((1073741821-t+500)/25|0));break;case 95:t=2;break;default:throw o(Error(326))}return null!==hs&&t===ds&&--t,t}var Rs,zs=0;function Fs(t,e){if(50<Ls)throw Ls=0,Ms=null,o(Error(185));if(null!==(t=Ds(t,e))){var n=Nr();1073741823===e?0!=(8&us)&&0==(48&us)?Ws(t):(Ys(t),0===us&&Xr()):Ys(t),0==(4&us)||98!==n&&99!==n||(null===Os?Os=new Map([[t,e]]):(void 0===(n=Os.get(t))||n>e)&&Os.set(t,e))}}function Ds(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e);var i=t.return,r=null;if(null===i&&3===t.tag)r=t.stateNode;else for(;null!==i;){if(n=i.alternate,i.childExpirationTime<e&&(i.childExpirationTime=e),null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e),null===i.return&&3===i.tag){r=i.stateNode;break}i=i.return}return null!==r&&(hs===r&&(Qs(e),4===ps&&Al(r,ds)),El(r,e)),r}function Xs(t){var e=t.lastExpiredTime;return 0!==e?e:Cl(t,e=t.firstPendingTime)?(e=t.lastPingedTime)>(t=t.nextKnownPendingLevel)?e:t:e}function Ys(t){if(0!==t.lastExpiredTime)t.callbackExpirationTime=1073741823,t.callbackPriority=99,t.callbackNode=Dr(Ws.bind(null,t));else{var e=Xs(t),n=t.callbackNode;if(0===e)null!==n&&(t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90);else{var i=Is();if(1073741823===e?i=99:1===e||2===e?i=95:i=0>=(i=10*(1073741821-e)-10*(1073741821-i))?99:250>=i?98:5250>=i?97:95,null!==n){var r=t.callbackPriority;if(t.callbackExpirationTime===e&&r>=i)return;n!==Pr&&vr(n)}t.callbackExpirationTime=e,t.callbackPriority=i,e=1073741823===e?Dr(Ws.bind(null,t)):Fr(i,js.bind(null,t),{timeout:10*(1073741821-e)-Ir()}),t.callbackNode=e}}}function js(t,e){if(_s=0,e)return Pl(t,e=Is()),Ys(t),null;var n=Xs(t);if(0!==n){if(e=t.callbackNode,0!=(48&us))throw o(Error(327));if(sl(),t===hs&&n===ds||qs(t,n),null!==fs){var i=us;us|=16;for(var r=Zs();;)try{tl();break}catch(e){$s(t,e)}if(Ur(),us=i,ls.current=r,1===ps)throw e=gs,qs(t,n),Al(t,n),Ys(t),e;if(null===fs)switch(r=t.finishedWork=t.current.alternate,t.finishedExpirationTime=n,Bs(t,n),i=ps,hs=null,i){case 0:case 1:throw o(Error(345));case 2:if(2!==n){Pl(t,2);break}rl(t);break;case 3:if(Al(t,n),n===(i=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=il(r)),1073741823===ms&&10<(r=ws+500-Ir())){if(ys){var a=t.lastPingedTime;if(0===a||a>=n){t.lastPingedTime=n,qs(t,n);break}}if(0!==(a=Xs(t))&&a!==n)break;if(0!==i&&i!==n){t.lastPingedTime=i;break}t.timeoutHandle=Gn(rl.bind(null,t),r);break}rl(t);break;case 4:if(Al(t,n),n===(i=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=il(r)),ys&&(0===(r=t.lastPingedTime)||r>=n)){t.lastPingedTime=n,qs(t,n);break}if(0!==(r=Xs(t))&&r!==n)break;if(0!==i&&i!==n){t.lastPingedTime=i;break}if(1073741823!==vs?i=10*(1073741821-vs)-Ir():1073741823===ms?i=0:(i=10*(1073741821-ms)-5e3,0>(i=(r=Ir())-i)&&(i=0),(n=10*(1073741821-n)-r)<(i=(120>i?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*ss(i/1960))-i)&&(i=n)),10<i){t.timeoutHandle=Gn(rl.bind(null,t),i);break}rl(t);break;case 5:if(1073741823!==ms&&null!==xs){a=ms;var s=xs;if(0>=(i=0|s.busyMinDurationMs)?i=0:(r=0|s.busyDelayMs,i=(a=Ir()-(10*(1073741821-a)-(0|s.timeoutMs||5e3)))<=r?0:r+i-a),10<i){Al(t,n),t.timeoutHandle=Gn(rl.bind(null,t),i);break}}rl(t);break;case 6:Al(t,n);break;default:throw o(Error(329))}if(Ys(t),t.callbackNode===e)return js.bind(null,t)}}return null}function Ws(t){var e=t.lastExpiredTime;if(e=0!==e?e:1073741823,t.finishedExpirationTime===e)rl(t);else{if(0!=(48&us))throw o(Error(327));if(sl(),t===hs&&e===ds||qs(t,e),null!==fs){var n=us;us|=16;for(var i=Zs();;)try{Js();break}catch(e){$s(t,e)}if(Ur(),us=n,ls.current=i,1===ps)throw n=gs,qs(t,e),Al(t,e),Ys(t),n;if(null!==fs)throw o(Error(261));t.finishedWork=t.current.alternate,t.finishedExpirationTime=e,Bs(t,e),6===ps?Al(t,e):(hs=null,rl(t)),Ys(t)}}return null}function Hs(){0==(49&us)&&(function(){if(null!==Os){var t=Os;Os=null,t.forEach((function(t,e){Pl(e,t),Ys(e)})),Xr()}}(),sl())}function Bs(t,e){var n=t.firstBatch;null!==n&&n._defer&&n._expirationTime>=e&&(Fr(97,(function(){return n._onComplete(),null})),ps=6)}function Vs(t,e){var n=us;us|=1;try{return t(e)}finally{0===(us=n)&&Xr()}}function Us(t,e,n,i){var r=us;us|=4;try{return zr(98,t.bind(null,e,n,i))}finally{0===(us=r)&&Xr()}}function Gs(t,e){var n=us;us&=-2,us|=8;try{return t(e)}finally{0===(us=n)&&Xr()}}function qs(t,e){t.finishedWork=null,t.finishedExpirationTime=0;var n=t.timeoutHandle;if(-1!==n&&(t.timeoutHandle=-1,qn(n)),null!==fs)for(n=fs.return;null!==n;){var i=n;switch(i.tag){case 1:var r=i.type.childContextTypes;null!=r&&cr();break;case 3:La(),ur();break;case 5:_a(i);break;case 4:La();break;case 13:case 19:er(Ia);break;case 10:qr(i)}n=n.return}hs=t,fs=xl(t.current,null),ds=e,ps=0,gs=null,vs=ms=1073741823,xs=null,bs=0,ys=!1}function $s(t,e){for(;;){try{if(Ur(),Ja(),null===fs||null===fs.return)return ps=1,gs=e,null;t:{var n=t,i=fs.return,r=fs,a=e;if(e=ds,r.effectTag|=2048,r.firstEffect=r.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var o=a,s=0!=(1&Ia.current),l=i;do{var c;if(c=13===l.tag){var u=l.memoizedState;if(null!==u)c=null!==u.dehydrated;else{var h=l.memoizedProps;c=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!s)}}if(c){var f=l.updateQueue;if(null===f){var d=new Set;d.add(o),l.updateQueue=d}else f.add(o);if(0==(2&l.mode)){if(l.effectTag|=64,r.effectTag&=-2981,1===r.tag)if(null===r.alternate)r.tag=17;else{var p=ea(1073741823,null);p.tag=2,ia(r,p)}r.expirationTime=1073741823;break t}a=void 0,r=e;var g=n.pingCache;if(null===g?(g=n.pingCache=new rs,a=new Set,g.set(o,a)):void 0===(a=g.get(o))&&(a=new Set,g.set(o,a)),!a.has(r)){a.add(r);var m=hl.bind(null,n,o,r);o.then(m,m)}l.effectTag|=4096,l.expirationTime=e;break t}l=l.return}while(null!==l);a=Error((K(r.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+Q(r))}5!==ps&&(ps=2),a=Vo(a,r),l=i;do{switch(l.tag){case 3:o=a,l.effectTag|=4096,l.expirationTime=e,ra(l,as(l,o,e));break t;case 1:o=a;var v=l.type,x=l.stateNode;if(0==(64&l.effectTag)&&("function"==typeof v.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===As||!As.has(x)))){l.effectTag|=4096,l.expirationTime=e,ra(l,os(l,o,e));break t}}l=l.return}while(null!==l)}fs=nl(fs)}catch(t){e=t;continue}break}}function Zs(){var t=ls.current;return ls.current=uo,null===t?uo:t}function Ks(t,e){t<ms&&2<t&&(ms=t),null!==e&&t<vs&&2<t&&(vs=t,xs=e)}function Qs(t){t>bs&&(bs=t)}function Js(){for(;null!==fs;)fs=el(fs)}function tl(){for(;null!==fs&&!xr();)fs=el(fs)}function el(t){var e=Rs(t.alternate,t,ds);return t.memoizedProps=t.pendingProps,null===e&&(e=nl(t)),cs.current=null,e}function nl(t){fs=t;do{var e=fs.alternate;if(t=fs.return,0==(2048&fs.effectTag)){t:{var n=e,i=ds,a=(e=fs).pendingProps;switch(e.tag){case 2:case 16:break;case 15:case 0:break;case 1:lr(e.type)&&cr();break;case 3:La(),ur(),(i=e.stateNode).pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),(null===n||null===n.child)&&wo(e)&&Wo(e);break;case 5:_a(e),i=Ta(Pa.current);var s=e.type;if(null!==n&&null!=e.stateNode)Ro(n,e,s,a,i),n.ref!==e.ref&&(e.effectTag|=128);else if(a){var l=Ta(Aa.current);if(wo(e)){s=void 0,n=(a=e).stateNode;var c=a.type,u=a.memoizedProps;switch(n[Qn]=a,n[Jn]=u,c){case"iframe":case"object":case"embed":xn("load",n);break;case"video":case"audio":for(var h=0;h<te.length;h++)xn(te[h],n);break;case"source":xn("error",n);break;case"img":case"image":case"link":xn("error",n),xn("load",n);break;case"form":xn("reset",n),xn("submit",n);break;case"details":xn("toggle",n);break;case"input":Pt(n,u),xn("invalid",n),zn(i,"onChange");break;case"select":n._wrapperState={wasMultiple:!!u.multiple},xn("invalid",n),zn(i,"onChange");break;case"textarea":Rt(n,u),xn("invalid",n),zn(i,"onChange")}for(s in Nn(c,u),h=null,u)u.hasOwnProperty(s)&&(l=u[s],"children"===s?"string"==typeof l?n.textContent!==l&&(h=["children",l]):"number"==typeof l&&n.textContent!==""+l&&(h=["children",""+l]):d.hasOwnProperty(s)&&null!=l&&zn(i,s));switch(c){case"input":Ct(n),Lt(n,u,!0);break;case"textarea":Ct(n),Ft(n);break;case"select":case"option":break;default:"function"==typeof u.onClick&&(n.onclick=Fn)}i=h,a.updateQueue=i,null!==i&&Wo(e)}else{u=s,n=a,c=e,h=9===i.nodeType?i:i.ownerDocument,l===Dt&&(l=Yt(u)),l===Dt?"script"===u?((u=h.createElement("div")).innerHTML="<script><\/script>",h=u.removeChild(u.firstChild)):"string"==typeof n.is?h=h.createElement(u,{is:n.is}):(h=h.createElement(u),"select"===u&&(u=h,n.multiple?u.multiple=!0:n.size&&(u.size=n.size))):h=h.createElementNS(l,u),(u=h)[Qn]=c,u[Jn]=n,No(n=u,e),e.stateNode=n,l=i;var f=Rn(s,a);switch(s){case"iframe":case"object":case"embed":xn("load",n),i=a;break;case"video":case"audio":for(i=0;i<te.length;i++)xn(te[i],n);i=a;break;case"source":xn("error",n),i=a;break;case"img":case"image":case"link":xn("error",n),xn("load",n),i=a;break;case"form":xn("reset",n),xn("submit",n),i=a;break;case"details":xn("toggle",n),i=a;break;case"input":Pt(n,a),i=Et(n,a),xn("invalid",n),zn(l,"onChange");break;case"option":i=_t(n,a);break;case"select":n._wrapperState={wasMultiple:!!a.multiple},i=r({},a,{value:void 0}),xn("invalid",n),zn(l,"onChange");break;case"textarea":Rt(n,a),i=Nt(n,a),xn("invalid",n),zn(l,"onChange");break;default:i=a}Nn(s,i),c=void 0,u=s,h=n;var p=i;for(c in p)if(p.hasOwnProperty(c)){var g=p[c];"style"===c?_n(h,g):"dangerouslySetInnerHTML"===c?null!=(g=g?g.__html:void 0)&&Ht(h,g):"children"===c?"string"==typeof g?("textarea"!==u||""!==g)&&Bt(h,g):"number"==typeof g&&Bt(h,""+g):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(d.hasOwnProperty(c)?null!=g&&zn(l,c):null!=g&&kt(h,c,g,f))}switch(s){case"input":Ct(n),Lt(n,a,!1);break;case"textarea":Ct(n),Ft(n);break;case"option":null!=a.value&&n.setAttribute("value",""+wt(a.value));break;case"select":i=n,n=a,i.multiple=!!n.multiple,null!=(c=n.value)?It(i,!!n.multiple,c,!1):null!=n.defaultValue&&It(i,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof i.onClick&&(n.onclick=Fn)}Vn(s,a)&&Wo(e)}null!==e.ref&&(e.effectTag|=128)}else if(null===e.stateNode)throw o(Error(166));break;case 6:if(n&&null!=e.stateNode)zo(0,e,n.memoizedProps,a);else{if("string"!=typeof a&&null===e.stateNode)throw o(Error(166));s=Ta(Pa.current),Ta(Aa.current),wo(e)?(i=e.stateNode,a=e.memoizedProps,i[Qn]=e,i.nodeValue!==a&&Wo(e)):(i=e,(a=(9===s.nodeType?s:s.ownerDocument).createTextNode(a))[Qn]=e,i.stateNode=a)}break;case 11:break;case 13:if(er(Ia),a=e.memoizedState,0!=(64&e.effectTag)){e.expirationTime=i;break t}i=null!==a,a=!1,null===n?wo(e):(a=null!==(s=n.memoizedState),i||null===s||null!==(s=n.child.sibling)&&(null!==(c=e.firstEffect)?(e.firstEffect=s,s.nextEffect=c):(e.firstEffect=e.lastEffect=s,s.nextEffect=null),s.effectTag=8)),i&&!a&&0!=(2&e.mode)&&(null===n&&!0!==e.memoizedProps.unstable_avoidThisFallback||0!=(1&Ia.current)?0===ps&&(ps=3):(0!==ps&&3!==ps||(ps=4),0!==bs&&null!==hs&&(Al(hs,ds),El(hs,bs)))),(i||a)&&(e.effectTag|=4);break;case 7:case 8:case 12:break;case 4:La();break;case 10:qr(e);break;case 9:case 14:break;case 17:lr(e.type)&&cr();break;case 19:if(er(Ia),null===(a=e.memoizedState))break;if(s=0!=(64&e.effectTag),null===(c=a.rendering)){if(s)Ho(a,!1);else if(0!==ps||null!==n&&0!=(64&n.effectTag))for(n=e.child;null!==n;){if(null!==(c=Na(n))){for(e.effectTag|=64,Ho(a,!1),null!==(a=c.updateQueue)&&(e.updateQueue=a,e.effectTag|=4),e.firstEffect=e.lastEffect=null,a=e.child;null!==a;)n=i,(s=a).effectTag&=2,s.nextEffect=null,s.firstEffect=null,s.lastEffect=null,null===(c=s.alternate)?(s.childExpirationTime=0,s.expirationTime=n,s.child=null,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null):(s.childExpirationTime=c.childExpirationTime,s.expirationTime=c.expirationTime,s.child=c.child,s.memoizedProps=c.memoizedProps,s.memoizedState=c.memoizedState,s.updateQueue=c.updateQueue,n=c.dependencies,s.dependencies=null===n?null:{expirationTime:n.expirationTime,firstContext:n.firstContext,responders:n.responders}),a=a.sibling;nr(Ia,1&Ia.current|2),e=e.child;break t}n=n.sibling}}else{if(!s)if(null!==(n=Na(c))){if(e.effectTag|=64,s=!0,Ho(a,!0),null===a.tail&&"hidden"===a.tailMode){null!==(i=n.updateQueue)&&(e.updateQueue=i,e.effectTag|=4),null!==(e=e.lastEffect=a.lastEffect)&&(e.nextEffect=null);break}}else Ir()>a.tailExpiration&&1<i&&(e.effectTag|=64,s=!0,Ho(a,!1),e.expirationTime=e.childExpirationTime=i-1);a.isBackwards?(c.sibling=e.child,e.child=c):(null!==(i=a.last)?i.sibling=c:e.child=c,a.last=c)}if(null!==a.tail){0===a.tailExpiration&&(a.tailExpiration=Ir()+500),i=a.tail,a.rendering=i,a.tail=i.sibling,a.lastEffect=e.lastEffect,i.sibling=null,a=Ia.current,nr(Ia,a=s?1&a|2:1&a),e=i;break t}break;case 20:case 21:break;default:throw o(Error(156),e.tag)}e=null}if(i=fs,1===ds||1!==i.childExpirationTime){for(a=0,s=i.child;null!==s;)(n=s.expirationTime)>a&&(a=n),(c=s.childExpirationTime)>a&&(a=c),s=s.sibling;i.childExpirationTime=a}if(null!==e)return e;null!==t&&0==(2048&t.effectTag)&&(null===t.firstEffect&&(t.firstEffect=fs.firstEffect),null!==fs.lastEffect&&(null!==t.lastEffect&&(t.lastEffect.nextEffect=fs.firstEffect),t.lastEffect=fs.lastEffect),1<fs.effectTag&&(null!==t.lastEffect?t.lastEffect.nextEffect=fs:t.firstEffect=fs,t.lastEffect=fs))}else{if(null!==(e=Bo(fs)))return e.effectTag&=2047,e;null!==t&&(t.firstEffect=t.lastEffect=null,t.effectTag|=2048)}if(null!==(e=fs.sibling))return e;fs=t}while(null!==fs);return 0===ps&&(ps=5),null}function il(t){var e=t.expirationTime;return e>(t=t.childExpirationTime)?e:t}function rl(t){var e=Nr();return zr(99,al.bind(null,t,e)),null}function al(t,e){if(sl(),0!=(48&us))throw o(Error(327));var n=t.finishedWork,i=t.finishedExpirationTime;if(null===n)return null;if(t.finishedWork=null,t.finishedExpirationTime=0,n===t.current)throw o(Error(177));t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90,t.nextKnownPendingLevel=0;var r=il(n);if(t.firstPendingTime=r,i<=t.lastSuspendedTime?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:i<=t.firstSuspendedTime&&(t.firstSuspendedTime=i-1),i<=t.lastPingedTime&&(t.lastPingedTime=0),i<=t.lastExpiredTime&&(t.lastExpiredTime=0),t===hs&&(fs=hs=null,ds=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){var a=us;us|=32,cs.current=null,Hn=vn;var s=jn();if(Wn(s)){if("selectionStart"in s)var l={start:s.selectionStart,end:s.selectionEnd};else t:{var c=(l=(l=s.ownerDocument)&&l.defaultView||window).getSelection&&l.getSelection();if(c&&0!==c.rangeCount){l=c.anchorNode;var u=c.anchorOffset,h=c.focusNode;c=c.focusOffset;try{l.nodeType,h.nodeType}catch(t){l=null;break t}var f=0,d=-1,p=-1,g=0,m=0,v=s,x=null;e:for(;;){for(var b;v!==l||0!==u&&3!==v.nodeType||(d=f+u),v!==h||0!==c&&3!==v.nodeType||(p=f+c),3===v.nodeType&&(f+=v.nodeValue.length),null!==(b=v.firstChild);)x=v,v=b;for(;;){if(v===s)break e;if(x===l&&++g===u&&(d=f),x===h&&++m===c&&(p=f),null!==(b=v.nextSibling))break;x=(v=x).parentNode}v=b}l=-1===d||-1===p?null:{start:d,end:p}}else l=null}l=l||{start:0,end:0}}else l=null;Bn={focusedElem:s,selectionRange:l},vn=!1,ks=r;do{try{ol()}catch(t){if(null===ks)throw o(Error(330));ul(ks,t),ks=ks.nextEffect}}while(null!==ks);ks=r;do{try{for(s=t,l=e;null!==ks;){var y=ks.effectTag;if(16&y&&Bt(ks.stateNode,""),128&y){var w=ks.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&y){case 2:ts(ks),ks.effectTag&=-3;break;case 6:ts(ks),ks.effectTag&=-3,ns(ks.alternate,ks);break;case xe:ks.effectTag&=~xe;break;case 1028:ks.effectTag&=~xe,ns(ks.alternate,ks);break;case 4:ns(ks.alternate,ks);break;case 8:es(s,u=ks,l),Qo(u)}ks=ks.nextEffect}}catch(t){if(null===ks)throw o(Error(330));ul(ks,t),ks=ks.nextEffect}}while(null!==ks);if(k=Bn,w=jn(),y=k.focusedElem,l=k.selectionRange,w!==y&&y&&y.ownerDocument&&function t(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?t(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}(y.ownerDocument.documentElement,y)){null!==l&&Wn(y)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in y?(y.selectionStart=w,y.selectionEnd=Math.min(k,y.value.length)):(k=(w=y.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=y.textContent.length,s=Math.min(l.start,u),l=void 0===l.end?s:Math.min(l.end,u),!k.extend&&s>l&&(u=l,l=s,s=u),u=Yn(y,s),h=Yn(y,l),u&&h&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==h.node||k.focusOffset!==h.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),s>l?(k.addRange(w),k.extend(h.node,h.offset)):(w.setEnd(h.node,h.offset),k.addRange(w))))),w=[];for(k=y;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof y.focus&&y.focus(),y=0;y<w.length;y++)(k=w[y]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Bn=null,vn=!!Hn,Hn=null,t.current=n,ks=r;do{try{for(y=i;null!==ks;){var S=ks.effectTag;if(36&S){var C=ks.alternate;switch(k=y,(w=ks).tag){case 0:case 11:case 15:Zo(16,32,w);break;case 1:var A=w.stateNode;if(4&w.effectTag)if(null===C)A.componentDidMount();else{var E=w.elementType===w.type?C.memoizedProps:jr(w.type,C.memoizedProps);A.componentDidUpdate(E,C.memoizedState,A.__reactInternalSnapshotBeforeUpdate)}var P=w.updateQueue;null!==P&&la(0,P,A);break;case 3:var T=w.updateQueue;if(null!==T){if(s=null,null!==w.child)switch(w.child.tag){case 5:s=w.child.stateNode;break;case 1:s=w.child.stateNode}la(0,T,s)}break;case 5:var O=w.stateNode;null===C&&4&w.effectTag&&(k=O,Vn(w.type,w.memoizedProps)&&k.focus());break;case 6:case 4:case 12:break;case 13:if(null===w.memoizedState){var L=w.alternate;if(null!==L){var M=L.memoizedState;if(null!==M){var _=M.dehydrated;null!==_&&ve(_)}}}break;case 19:case 17:case 20:case 21:break;default:throw o(Error(163))}}if(128&S){var I=(w=ks).ref;if(null!==I){var N=w.stateNode;switch(w.tag){case 5:var R=N;break;default:R=N}"function"==typeof I?I(R):I.current=R}}ks=ks.nextEffect}}catch(t){if(null===ks)throw o(Error(330));ul(ks,t),ks=ks.nextEffect}}while(null!==ks);ks=null,Tr(),us=a}else t.current=n;if(Es)Es=!1,Ps=t,Ts=e;else for(ks=r;null!==ks;)e=ks.nextEffect,ks.nextEffect=null,ks=e;if(0===(e=t.firstPendingTime)&&(As=null),1073741823===e?t===Ms?Ls++:(Ls=0,Ms=t):Ls=0,"function"==typeof dl&&dl(n.stateNode,i),Ys(t),Ss)throw Ss=!1,t=Cs,Cs=null,t;return 0!=(8&us)||Xr(),null}function ol(){for(;null!==ks;){var t=ks.effectTag;0!=(256&t)&&$o(ks.alternate,ks),0==(512&t)||Es||(Es=!0,Fr(97,(function(){return sl(),null}))),ks=ks.nextEffect}}function sl(){if(90!==Ts){var t=97<Ts?97:Ts;return Ts=90,zr(t,ll)}}function ll(){if(null===Ps)return!1;var t=Ps;if(Ps=null,0!=(48&us))throw o(Error(331));var e=us;for(us|=32,t=t.current.firstEffect;null!==t;){try{var n=t;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:Zo(128,0,n),Zo(0,64,n)}}catch(e){if(null===t)throw o(Error(330));ul(t,e)}n=t.nextEffect,t.nextEffect=null,t=n}return us=e,Xr(),!0}function cl(t,e,n){ia(t,e=as(t,e=Vo(n,e),1073741823)),null!==(t=Ds(t,1073741823))&&Ys(t)}function ul(t,e){if(3===t.tag)cl(t,t,e);else for(var n=t.return;null!==n;){if(3===n.tag){cl(n,t,e);break}if(1===n.tag){var i=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof i.componentDidCatch&&(null===As||!As.has(i))){ia(n,t=os(n,t=Vo(e,t),1073741823)),null!==(n=Ds(n,1073741823))&&Ys(n);break}}n=n.return}}function hl(t,e,n){var i=t.pingCache;null!==i&&i.delete(e),hs===t&&ds===n?4===ps||3===ps&&1073741823===ms&&Ir()-ws<500?qs(t,ds):ys=!0:Cl(t,n)&&(0!==(e=t.lastPingedTime)&&e<n||(t.lastPingedTime=n,t.finishedExpirationTime===n&&(t.finishedExpirationTime=0,t.finishedWork=null),Ys(t)))}function fl(t,e){var n=t.stateNode;null!==n&&n.delete(e),1===(e=1)&&(e=Ns(e=Is(),t,null)),null!==(t=Ds(t,e))&&Ys(t)}Rs=function(t,e,n){var i=e.expirationTime;if(null!==t){var r=e.pendingProps;if(t.memoizedProps!==r||ar.current)Co=!0;else{if(i<n){switch(Co=!1,e.tag){case 3:Io(e),ko();break;case 5:if(Ma(e),4&e.mode&&1!==n&&r.hidden)return e.expirationTime=e.childExpirationTime=1,null;break;case 1:lr(e.type)&&dr(e);break;case 4:Oa(e,e.stateNode.containerInfo);break;case 10:Gr(e,e.memoizedProps.value);break;case 13:if(null!==e.memoizedState)return 0!==(i=e.child.childExpirationTime)&&i>=n?Do(t,e,n):(nr(Ia,1&Ia.current),null!==(e=jo(t,e,n))?e.sibling:null);nr(Ia,1&Ia.current);break;case 19:if(i=e.childExpirationTime>=n,0!=(64&t.effectTag)){if(i)return Yo(t,e,n);e.effectTag|=64}if(null!==(r=e.memoizedState)&&(r.rendering=null,r.tail=null),nr(Ia,Ia.current),!i)return null}return jo(t,e,n)}Co=!1}}else Co=!1;switch(e.expirationTime=0,e.tag){case 2:if(i=e.type,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,r=sr(e,rr.current),Zr(e,n),r=Qa(null,e,i,t,r,n),e.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render&&void 0===r.$$typeof){if(e.tag=1,Ja(),lr(i)){var a=!0;dr(e)}else a=!1;e.memoizedState=null!==r.state&&void 0!==r.state?r.state:null;var s=i.getDerivedStateFromProps;"function"==typeof s&&fa(e,i,s,t),r.updater=da,e.stateNode=r,r._reactInternalFiber=e,va(e,i,t,n),e=_o(null,e,i,!0,a,n)}else e.tag=0,Ao(null,e,r,n),e=e.child;return e;case 16:if(r=e.elementType,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,function(t){if(-1===t._status){t._status=0;var e=t._ctor;e=e(),t._result=e,e.then((function(e){0===t._status&&(e=e.default,t._status=1,t._result=e)}),(function(e){0===t._status&&(t._status=2,t._result=e)}))}}(r),1!==r._status)throw r._result;switch(r=r._result,e.type=r,a=e.tag=function(t){if("function"==typeof t)return vl(t)?1:0;if(null!=t){if((t=t.$$typeof)===B)return 11;if(t===G)return 14}return 2}(r),t=jr(r,t),a){case 0:e=Lo(null,e,r,t,n);break;case 1:e=Mo(null,e,r,t,n);break;case 11:e=Eo(null,e,r,t,n);break;case 14:e=Po(null,e,r,jr(r.type,t),i,n);break;default:throw o(Error(306),r,"")}return e;case 0:return i=e.type,r=e.pendingProps,Lo(t,e,i,r=e.elementType===i?r:jr(i,r),n);case 1:return i=e.type,r=e.pendingProps,Mo(t,e,i,r=e.elementType===i?r:jr(i,r),n);case 3:if(Io(e),null===(i=e.updateQueue))throw o(Error(282));if(r=null!==(r=e.memoizedState)?r.element:null,sa(e,i,e.pendingProps,null,n),(i=e.memoizedState.element)===r)ko(),e=jo(t,e,n);else{if((r=e.stateNode.hydrate)&&(go=$n(e.stateNode.containerInfo.firstChild),po=e,r=mo=!0),r)for(n=Sa(e,null,i,n),e.child=n;n;)n.effectTag=-3&n.effectTag|xe,n=n.sibling;else Ao(t,e,i,n),ko();e=e.child}return e;case 5:return Ma(e),null===t&&bo(e),i=e.type,r=e.pendingProps,a=null!==t?t.memoizedProps:null,s=r.children,Un(i,r)?s=null:null!==a&&Un(i,a)&&(e.effectTag|=16),Oo(t,e),4&e.mode&&1!==n&&r.hidden?(e.expirationTime=e.childExpirationTime=1,e=null):(Ao(t,e,s,n),e=e.child),e;case 6:return null===t&&bo(e),null;case 13:return Do(t,e,n);case 4:return Oa(e,e.stateNode.containerInfo),i=e.pendingProps,null===t?e.child=ka(e,null,i,n):Ao(t,e,i,n),e.child;case 11:return i=e.type,r=e.pendingProps,Eo(t,e,i,r=e.elementType===i?r:jr(i,r),n);case 7:return Ao(t,e,e.pendingProps,n),e.child;case 8:case 12:return Ao(t,e,e.pendingProps.children,n),e.child;case 10:t:{if(i=e.type._context,r=e.pendingProps,s=e.memoizedProps,Gr(e,a=r.value),null!==s){var l=s.value;if(0===(a=Wi(l,a)?0:0|("function"==typeof i._calculateChangedBits?i._calculateChangedBits(l,a):1073741823))){if(s.children===r.children&&!ar.current){e=jo(t,e,n);break t}}else for(null!==(l=e.child)&&(l.return=e);null!==l;){var c=l.dependencies;if(null!==c){s=l.child;for(var u=c.firstContext;null!==u;){if(u.context===i&&0!=(u.observedBits&a)){1===l.tag&&((u=ea(n,null)).tag=2,ia(l,u)),l.expirationTime<n&&(l.expirationTime=n),null!==(u=l.alternate)&&u.expirationTime<n&&(u.expirationTime=n),$r(l.return,n),c.expirationTime<n&&(c.expirationTime=n);break}u=u.next}}else s=10===l.tag&&l.type===e.type?null:l.child;if(null!==s)s.return=l;else for(s=l;null!==s;){if(s===e){s=null;break}if(null!==(l=s.sibling)){l.return=s.return,s=l;break}s=s.return}l=s}}Ao(t,e,r.children,n),e=e.child}return e;case 9:return r=e.type,i=(a=e.pendingProps).children,Zr(e,n),i=i(r=Kr(r,a.unstable_observedBits)),e.effectTag|=1,Ao(t,e,i,n),e.child;case 14:return a=jr(r=e.type,e.pendingProps),Po(t,e,r,a=jr(r.type,a),i,n);case 15:return To(t,e,e.type,e.pendingProps,i,n);case 17:return i=e.type,r=e.pendingProps,r=e.elementType===i?r:jr(i,r),null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),e.tag=1,lr(i)?(t=!0,dr(e)):t=!1,Zr(e,n),ga(e,i,r),va(e,i,r,n),_o(null,e,i,!0,t,n);case 19:return Yo(t,e,n)}throw o(Error(156),e.tag)};var dl=null,pl=null;function gl(t,e,n,i){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function ml(t,e,n,i){return new gl(t,e,n,i)}function vl(t){return!(!(t=t.prototype)||!t.isReactComponent)}function xl(t,e){var n=t.alternate;return null===n?((n=ml(t.tag,e,t.key,t.mode)).elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=t.childExpirationTime,n.expirationTime=t.expirationTime,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=null===e?null:{expirationTime:e.expirationTime,firstContext:e.firstContext,responders:e.responders},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function bl(t,e,n,i,r,a){var s=2;if(i=t,"function"==typeof t)vl(t)&&(s=1);else if("string"==typeof t)s=5;else t:switch(t){case D:return yl(n.children,r,a,e);case H:s=8,r|=7;break;case X:s=8,r|=1;break;case Y:return(t=ml(12,n,e,8|r)).elementType=Y,t.type=Y,t.expirationTime=a,t;case V:return(t=ml(13,n,e,r)).type=V,t.elementType=V,t.expirationTime=a,t;case U:return(t=ml(19,n,e,r)).elementType=U,t.expirationTime=a,t;default:if("object"==typeof t&&null!==t)switch(t.$$typeof){case j:s=10;break t;case W:s=9;break t;case B:s=11;break t;case G:s=14;break t;case q:s=16,i=null;break t}throw o(Error(130),null==t?t:typeof t,"")}return(e=ml(s,n,e,r)).elementType=t,e.type=i,e.expirationTime=a,e}function yl(t,e,n,i){return(t=ml(7,t,i,e)).expirationTime=n,t}function wl(t,e,n){return(t=ml(6,t,null,e)).expirationTime=n,t}function kl(t,e,n){return(e=ml(4,null!==t.children?t.children:[],t.key,e)).expirationTime=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function Sl(t,e,n){this.tag=e,this.current=null,this.containerInfo=t,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=this.firstBatch=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Cl(t,e){var n=t.firstSuspendedTime;return t=t.lastSuspendedTime,0!==n&&n>=e&&t<=e}function Al(t,e){var n=t.firstSuspendedTime,i=t.lastSuspendedTime;n<e&&(t.firstSuspendedTime=e),(i>e||0===n)&&(t.lastSuspendedTime=e),e<=t.lastPingedTime&&(t.lastPingedTime=0),e<=t.lastExpiredTime&&(t.lastExpiredTime=0)}function El(t,e){e>t.firstPendingTime&&(t.firstPendingTime=e);var n=t.firstSuspendedTime;0!==n&&(e>=n?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:e>=t.lastSuspendedTime&&(t.lastSuspendedTime=e+1),e>t.nextKnownPendingLevel&&(t.nextKnownPendingLevel=e))}function Pl(t,e){var n=t.lastExpiredTime;(0===n||n>e)&&(t.lastExpiredTime=e)}function Tl(t,e,n,i,r,a){var s=e.current;t:if(n){e:{if(be(n=n._reactInternalFiber)!==n||1!==n.tag)throw o(Error(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break e;case 1:if(lr(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break e}}l=l.return}while(null!==l);throw o(Error(171))}if(1===n.tag){var c=n.type;if(lr(c)){n=fr(n,c,l);break t}}n=l}else n=ir;return null===e.context?e.context=n:e.pendingContext=n,e=a,(r=ea(i,r)).payload={element:t},null!==(e=void 0===e?null:e)&&(r.callback=e),ia(s,r),Fs(s,i),i}function Ol(t,e,n,i){var r=e.current,a=Is(),o=ua.suspense;return Tl(t,e,n,r=Ns(a,r,o),o,i)}function Ll(t){if(!(t=t.current).child)return null;switch(t.child.tag){case 5:default:return t.child.stateNode}}function Ml(t,e,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:F,key:null==i?null:""+i,children:t,containerInfo:e,implementation:n}}function _l(t){var e=1073741821-25*(1+((1073741821-Is()+500)/25|0));e<=zs&&--e,this._expirationTime=zs=e,this._root=t,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Il(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Nl(t,e,n){var i=new Sl(t,e,n=null!=n&&!0===n.hydrate),r=ml(3,null,null,2===e?7:1===e?3:0);return i.current=r,r.stateNode=i,t[ti]=i.current,n&&0!==e&&function(t){var e=Pn(t);le.forEach((function(n){Tn(n,t,e)})),ce.forEach((function(n){Tn(n,t,e)}))}(9===t.nodeType?t:t.ownerDocument),i}function Rl(t,e,n){this._internalRoot=Nl(t,e,n)}function zl(t,e){this._internalRoot=Nl(t,2,e)}function Fl(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType&&(8!==t.nodeType||" react-mount-point-unstable "!==t.nodeValue))}function Dl(t,e,n,i,r){var a=n._reactRootContainer;if(a){var o=a._internalRoot;if("function"==typeof r){var s=r;r=function(){var t=Ll(o);s.call(t)}}Ol(e,o,t,r)}else{if(a=n._reactRootContainer=function(t,e){if(e||(e=!(!(e=t?9===t.nodeType?t.documentElement:t.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))),!e)for(var n;n=t.lastChild;)t.removeChild(n);return new Rl(t,0,e?{hydrate:!0}:void 0)}(n,i),o=a._internalRoot,"function"==typeof r){var l=r;r=function(){var t=Ll(o);l.call(t)}}Gs((function(){Ol(e,o,t,r)}))}return Ll(o)}function Xl(t,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Fl(e))throw o(Error(200));return Ml(t,e,null,n)}tt=function(t,e,n){switch(e){case"input":if(Ot(t,n),e=n.name,"radio"===n.type&&null!=e){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var i=n[e];if(i!==t&&i.form===t.form){var r=ri(i);if(!r)throw o(Error(90));At(i),Ot(i,r)}}}break;case"textarea":zt(t,n);break;case"select":null!=(e=n.value)&&It(t,!!n.multiple,e,!1)}},_l.prototype.render=function(t){if(!this._defer)throw o(Error(250));this._hasChildren=!0,this._children=t;var e=this._root._internalRoot,n=this._expirationTime,i=new Il;return Tl(t,e,null,n,null,i._onCommit),i},_l.prototype.then=function(t){if(this._didComplete)t();else{var e=this._callbacks;null===e&&(e=this._callbacks=[]),e.push(t)}},_l.prototype.commit=function(){var t=this._root._internalRoot,e=t.firstBatch;if(!this._defer||null===e)throw o(Error(251));if(this._hasChildren){var n=this._expirationTime;if(e!==this){this._hasChildren&&(n=this._expirationTime=e._expirationTime,this.render(this._children));for(var i=null,r=e;r!==this;)i=r,r=r._next;if(null===i)throw o(Error(251));i._next=r._next,this._next=e,t.firstBatch=this}if(this._defer=!1,e=n,0!=(48&us))throw o(Error(253));Pl(t,e),Ys(t),Xr(),e=this._next,this._next=null,null!==(e=t.firstBatch=e)&&e._hasChildren&&e.render(e._children)}else this._next=null,this._defer=!1},_l.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var t=this._callbacks;if(null!==t)for(var e=0;e<t.length;e++)(0,t[e])()}},Il.prototype.then=function(t){if(this._didCommit)t();else{var e=this._callbacks;null===e&&(e=this._callbacks=[]),e.push(t)}},Il.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var t=this._callbacks;if(null!==t)for(var e=0;e<t.length;e++){var n=t[e];if("function"!=typeof n)throw o(Error(191),n);n()}}},zl.prototype.render=Rl.prototype.render=function(t,e){var n=this._internalRoot,i=new Il;return null!==(e=void 0===e?null:e)&&i.then(e),Ol(t,n,null,i._onCommit),i},zl.prototype.unmount=Rl.prototype.unmount=function(t){var e=this._internalRoot,n=new Il;return null!==(t=void 0===t?null:t)&&n.then(t),Ol(null,e,null,n._onCommit),n},zl.prototype.createBatch=function(){var t=new _l(this),e=t._expirationTime,n=this._internalRoot,i=n.firstBatch;if(null===i)n.firstBatch=t,t._next=null;else{for(n=null;null!==i&&i._expirationTime>=e;)n=i,i=i._next;t._next=i,null!==n&&(n._next=t)}return t},ot=Vs,st=Us,lt=Hs,ct=function(t,e){var n=us;us|=2;try{return t(e)}finally{0===(us=n)&&Xr()}};var Yl,jl,Wl={createPortal:Xl,findDOMNode:function(t){if(null==t)t=null;else if(1!==t.nodeType){var e=t._reactInternalFiber;if(void 0===e){if("function"==typeof t.render)throw o(Error(188));throw o(Error(268),Object.keys(t))}t=null===(t=we(e))?null:t.stateNode}return t},hydrate:function(t,e,n){if(!Fl(e))throw o(Error(200));return Dl(null,t,e,!0,n)},render:function(t,e,n){if(!Fl(e))throw o(Error(200));return Dl(null,t,e,!1,n)},unstable_renderSubtreeIntoContainer:function(t,e,n,i){if(!Fl(n))throw o(Error(200));if(null==t||void 0===t._reactInternalFiber)throw o(Error(38));return Dl(t,e,n,!1,i)},unmountComponentAtNode:function(t){if(!Fl(t))throw o(Error(40));return!!t._reactRootContainer&&(Gs((function(){Dl(null,null,t,!1,(function(){t._reactRootContainer=null}))})),!0)},unstable_createPortal:function(){return Xl.apply(void 0,arguments)},unstable_batchedUpdates:Vs,unstable_interactiveUpdates:function(t,e,n,i){return Hs(),Us(t,e,n,i)},unstable_discreteUpdates:Us,unstable_flushDiscreteUpdates:Hs,flushSync:function(t,e){if(0!=(48&us))throw o(Error(187));var n=us;us|=1;try{return zr(99,t.bind(null,e))}finally{us=n,Xr()}},unstable_createRoot:function(t,e){if(!Fl(t))throw o(Error(299),"unstable_createRoot");return new zl(t,e)},unstable_createSyncRoot:function(t,e){if(!Fl(t))throw o(Error(299),"unstable_createRoot");return new Rl(t,1,e)},unstable_flushControlled:function(t){var e=us;us|=1;try{zr(99,t)}finally{0===(us=e)&&Xr()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[ni,ii,ri,M.injectEventPluginsByName,f,Te,function(t){P(t,Pe)},rt,at,Sn,L,sl,{current:!1}]}};jl=(Yl={findFiberByHostInstance:ei,bundleType:0,version:"16.10.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(t){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var e=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(e.isDisabled||!e.supportsFiber)return!0;try{var n=e.inject(t);dl=function(t){try{e.onCommitFiberRoot(n,t,void 0,64==(64&t.current.effectTag))}catch(t){}},pl=function(t){try{e.onCommitFiberUnmount(n,t)}catch(t){}}}catch(t){}}(r({},Yl,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:I.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return null===(t=we(t))?null:t.stateNode},findFiberByHostInstance:function(t){return jl?jl(t):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}));var Hl={default:Wl},Bl=Hl&&Wl||Hl;t.exports=Bl.default||Bl},function(t,e,n){"use strict";t.exports=n(338)},function(t,e,n){"use strict";var i,r,a,o,s;if(Object.defineProperty(e,"__esModule",{value:!0}),"undefined"==typeof window||"function"!=typeof MessageChannel){var l=null,c=null,u=function(){if(null!==l)try{var t=e.unstable_now();l(!0,t),l=null}catch(t){throw setTimeout(u,0),t}},h=Date.now();e.unstable_now=function(){return Date.now()-h},i=function(t){null!==l?setTimeout(i,0,t):(l=t,setTimeout(u,0))},r=function(t,e){c=setTimeout(t,e)},a=function(){clearTimeout(c)},o=function(){return!1},s=e.unstable_forceFrameRate=function(){}}else{var f=window.performance,d=window.Date,p=window.setTimeout,g=window.clearTimeout,m=window.requestAnimationFrame,v=window.cancelAnimationFrame;if("undefined"!=typeof console&&("function"!=typeof m&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")),"object"==typeof f&&"function"==typeof f.now)e.unstable_now=function(){return f.now()};else{var x=d.now();e.unstable_now=function(){return d.now()-x}}var b=!1,y=null,w=-1,k=5,S=0;o=function(){return e.unstable_now()>=S},s=function(){},e.unstable_forceFrameRate=function(t){0>t||125<t?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):k=0<t?Math.floor(1e3/t):33.33};var C=new MessageChannel,A=C.port2;C.port1.onmessage=function(){if(null!==y){var t=e.unstable_now();S=t+k;try{y(!0,t)?A.postMessage(null):(b=!1,y=null)}catch(t){throw A.postMessage(null),t}}else b=!1},i=function(t){y=t,b||(b=!0,A.postMessage(null))},r=function(t,n){w=p((function(){t(e.unstable_now())}),n)},a=function(){g(w),w=-1}}function E(t,e){var n=t.length;t.push(e);t:for(;;){var i=Math.floor((n-1)/2),r=t[i];if(!(void 0!==r&&0<O(r,e)))break t;t[i]=e,t[n]=r,n=i}}function P(t){return void 0===(t=t[0])?null:t}function T(t){var e=t[0];if(void 0!==e){var n=t.pop();if(n!==e){t[0]=n;t:for(var i=0,r=t.length;i<r;){var a=2*(i+1)-1,o=t[a],s=a+1,l=t[s];if(void 0!==o&&0>O(o,n))void 0!==l&&0>O(l,o)?(t[i]=l,t[s]=n,i=s):(t[i]=o,t[a]=n,i=a);else{if(!(void 0!==l&&0>O(l,n)))break t;t[i]=l,t[s]=n,i=s}}}return e}return null}function O(t,e){var n=t.sortIndex-e.sortIndex;return 0!==n?n:t.id-e.id}var L=[],M=[],_=1,I=null,N=3,R=!1,z=!1,F=!1;function D(t){for(var e=P(M);null!==e;){if(null===e.callback)T(M);else{if(!(e.startTime<=t))break;T(M),e.sortIndex=e.expirationTime,E(L,e)}e=P(M)}}function X(t){if(F=!1,D(t),!z)if(null!==P(L))z=!0,i(Y);else{var e=P(M);null!==e&&r(X,e.startTime-t)}}function Y(t,n){z=!1,F&&(F=!1,a()),R=!0;var i=N;try{for(D(n),I=P(L);null!==I&&(!(I.expirationTime>n)||t&&!o());){var s=I.callback;if(null!==s){I.callback=null,N=I.priorityLevel;var l=s(I.expirationTime<=n);n=e.unstable_now(),"function"==typeof l?I.callback=l:I===P(L)&&T(L),D(n)}else T(L);I=P(L)}if(null!==I)var c=!0;else{var u=P(M);null!==u&&r(X,u.startTime-n),c=!1}return c}finally{I=null,N=i,R=!1}}function j(t){switch(t){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var W=s;e.unstable_ImmediatePriority=1,e.unstable_UserBlockingPriority=2,e.unstable_NormalPriority=3,e.unstable_IdlePriority=5,e.unstable_LowPriority=4,e.unstable_runWithPriority=function(t,e){switch(t){case 1:case 2:case 3:case 4:case 5:break;default:t=3}var n=N;N=t;try{return e()}finally{N=n}},e.unstable_next=function(t){switch(N){case 1:case 2:case 3:var e=3;break;default:e=N}var n=N;N=e;try{return t()}finally{N=n}},e.unstable_scheduleCallback=function(t,n,o){var s=e.unstable_now();if("object"==typeof o&&null!==o){var l=o.delay;l="number"==typeof l&&0<l?s+l:s,o="number"==typeof o.timeout?o.timeout:j(t)}else o=j(t),l=s;return t={id:_++,callback:n,priorityLevel:t,startTime:l,expirationTime:o=l+o,sortIndex:-1},l>s?(t.sortIndex=l,E(M,t),null===P(L)&&t===P(M)&&(F?a():F=!0,r(X,l-s))):(t.sortIndex=o,E(L,t),z||R||(z=!0,i(Y))),t},e.unstable_cancelCallback=function(t){t.callback=null},e.unstable_wrapCallback=function(t){var e=N;return function(){var n=N;N=e;try{return t.apply(this,arguments)}finally{N=n}}},e.unstable_getCurrentPriorityLevel=function(){return N},e.unstable_shouldYield=function(){var t=e.unstable_now();D(t);var n=P(L);return n!==I&&null!==I&&null!==n&&null!==n.callback&&n.startTime<=t&&n.expirationTime<I.expirationTime||o()},e.unstable_requestPaint=W,e.unstable_continueExecution=function(){z||R||(z=!0,i(Y))},e.unstable_pauseExecution=function(){},e.unstable_getFirstCallbackNode=function(){return P(L)},e.unstable_Profiling=null},function(t,e,n){"use strict";var i=n(340);function r(){}function a(){}a.resetWarningCache=r,t.exports=function(){function t(t,e,n,r,a,o){if(o!==i){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function e(){return t}t.isRequired=t;var n={array:t,bool:t,func:t,number:t,object:t,string:t,symbol:t,any:t,arrayOf:e,element:t,elementType:t,instanceOf:e,node:t,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e,checkPropTypes:a,resetWarningCache:r};return n.PropTypes=n,n}},function(t,e,n){"use strict";t.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(t,e,n){"use strict";var i="function"==typeof Symbol&&Symbol.for,r=i?Symbol.for("react.element"):60103,a=i?Symbol.for("react.portal"):60106,o=i?Symbol.for("react.fragment"):60107,s=i?Symbol.for("react.strict_mode"):60108,l=i?Symbol.for("react.profiler"):60114,c=i?Symbol.for("react.provider"):60109,u=i?Symbol.for("react.context"):60110,h=i?Symbol.for("react.async_mode"):60111,f=i?Symbol.for("react.concurrent_mode"):60111,d=i?Symbol.for("react.forward_ref"):60112,p=i?Symbol.for("react.suspense"):60113,g=i?Symbol.for("react.suspense_list"):60120,m=i?Symbol.for("react.memo"):60115,v=i?Symbol.for("react.lazy"):60116,x=i?Symbol.for("react.block"):60121,b=i?Symbol.for("react.fundamental"):60117,y=i?Symbol.for("react.responder"):60118,w=i?Symbol.for("react.scope"):60119;function k(t){if("object"==typeof t&&null!==t){var e=t.$$typeof;switch(e){case r:switch(t=t.type){case h:case f:case o:case l:case s:case p:return t;default:switch(t=t&&t.$$typeof){case u:case d:case v:case m:case c:return t;default:return e}}case a:return e}}}function S(t){return k(t)===f}e.AsyncMode=h,e.ConcurrentMode=f,e.ContextConsumer=u,e.ContextProvider=c,e.Element=r,e.ForwardRef=d,e.Fragment=o,e.Lazy=v,e.Memo=m,e.Portal=a,e.Profiler=l,e.StrictMode=s,e.Suspense=p,e.isAsyncMode=function(t){return S(t)||k(t)===h},e.isConcurrentMode=S,e.isContextConsumer=function(t){return k(t)===u},e.isContextProvider=function(t){return k(t)===c},e.isElement=function(t){return"object"==typeof t&&null!==t&&t.$$typeof===r},e.isForwardRef=function(t){return k(t)===d},e.isFragment=function(t){return k(t)===o},e.isLazy=function(t){return k(t)===v},e.isMemo=function(t){return k(t)===m},e.isPortal=function(t){return k(t)===a},e.isProfiler=function(t){return k(t)===l},e.isStrictMode=function(t){return k(t)===s},e.isSuspense=function(t){return k(t)===p},e.isValidElementType=function(t){return"string"==typeof t||"function"==typeof t||t===o||t===f||t===l||t===s||t===p||t===g||"object"==typeof t&&null!==t&&(t.$$typeof===v||t.$$typeof===m||t.$$typeof===c||t.$$typeof===u||t.$$typeof===d||t.$$typeof===b||t.$$typeof===y||t.$$typeof===w||t.$$typeof===x)},e.typeOf=k},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e){t.exports=function(t){if(!t.webpackPolyfill){var e=Object.create(t);e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,"exports",{enumerable:!0}),e.webpackPolyfill=1}return e}},function(t,e){t.exports=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)}},function(t,e,n){"use strict";var i=n(16),r=n(132),a=n(347),o=n(138);function s(t){var e=new a(t),n=r(a.prototype.request,e);return i.extend(n,a.prototype,e),i.extend(n,e),n}var l=s(n(135));l.Axios=a,l.create=function(t){return s(o(l.defaults,t))},l.Cancel=n(139),l.CancelToken=n(360),l.isCancel=n(134),l.all=function(t){return Promise.all(t)},l.spread=n(361),t.exports=l,t.exports.default=l},function(t,e){t.exports=function(t){return null!=t&&null!=t.constructor&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}},function(t,e,n){"use strict";var i=n(16),r=n(133),a=n(348),o=n(349),s=n(138);function l(t){this.defaults=t,this.interceptors={request:new a,response:new a}}l.prototype.request=function(t){"string"==typeof t?(t=arguments[1]||{}).url=arguments[0]:t=t||{},(t=s(this.defaults,t)).method=t.method?t.method.toLowerCase():"get";var e=[o,void 0],n=Promise.resolve(t);for(this.interceptors.request.forEach((function(t){e.unshift(t.fulfilled,t.rejected)})),this.interceptors.response.forEach((function(t){e.push(t.fulfilled,t.rejected)}));e.length;)n=n.then(e.shift(),e.shift());return n},l.prototype.getUri=function(t){return t=s(this.defaults,t),r(t.url,t.params,t.paramsSerializer).replace(/^\?/,"")},i.forEach(["delete","get","head","options"],(function(t){l.prototype[t]=function(e,n){return this.request(i.merge(n||{},{method:t,url:e}))}})),i.forEach(["post","put","patch"],(function(t){l.prototype[t]=function(e,n,r){return this.request(i.merge(r||{},{method:t,url:e,data:n}))}})),t.exports=l},function(t,e,n){"use strict";var i=n(16);function r(){this.handlers=[]}r.prototype.use=function(t,e){return this.handlers.push({fulfilled:t,rejected:e}),this.handlers.length-1},r.prototype.eject=function(t){this.handlers[t]&&(this.handlers[t]=null)},r.prototype.forEach=function(t){i.forEach(this.handlers,(function(e){null!==e&&t(e)}))},t.exports=r},function(t,e,n){"use strict";var i=n(16),r=n(350),a=n(134),o=n(135),s=n(358),l=n(359);function c(t){t.cancelToken&&t.cancelToken.throwIfRequested()}t.exports=function(t){return c(t),t.baseURL&&!s(t.url)&&(t.url=l(t.baseURL,t.url)),t.headers=t.headers||{},t.data=r(t.data,t.headers,t.transformRequest),t.headers=i.merge(t.headers.common||{},t.headers[t.method]||{},t.headers||{}),i.forEach(["delete","get","head","post","put","patch","common"],(function(e){delete t.headers[e]})),(t.adapter||o.adapter)(t).then((function(e){return c(t),e.data=r(e.data,e.headers,t.transformResponse),e}),(function(e){return a(e)||(c(t),e&&e.response&&(e.response.data=r(e.response.data,e.response.headers,t.transformResponse))),Promise.reject(e)}))}},function(t,e,n){"use strict";var i=n(16);t.exports=function(t,e,n){return i.forEach(n,(function(n){t=n(t,e)})),t}},function(t,e){var n,i,r=t.exports={};function a(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(t){n=a}try{i="function"==typeof clearTimeout?clearTimeout:o}catch(t){i=o}}();var l,c=[],u=!1,h=-1;function f(){u&&l&&(u=!1,l.length?c=l.concat(c):h=-1,c.length&&d())}function d(){if(!u){var t=s(f);u=!0;for(var e=c.length;e;){for(l=c,c=[];++h<e;)l&&l[h].run();h=-1,e=c.length}l=null,u=!1,function(t){if(i===clearTimeout)return clearTimeout(t);if((i===o||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(t);try{i(t)}catch(e){try{return i.call(null,t)}catch(e){return i.call(this,t)}}}(t)}}function p(t,e){this.fun=t,this.array=e}function g(){}r.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];c.push(new p(t,e)),1!==c.length||u||s(d)},p.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=g,r.addListener=g,r.once=g,r.off=g,r.removeListener=g,r.removeAllListeners=g,r.emit=g,r.prependListener=g,r.prependOnceListener=g,r.listeners=function(t){return[]},r.binding=function(t){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(t){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(t,e,n){"use strict";var i=n(16);t.exports=function(t,e){i.forEach(t,(function(n,i){i!==e&&i.toUpperCase()===e.toUpperCase()&&(t[e]=n,delete t[i])}))}},function(t,e,n){"use strict";var i=n(137);t.exports=function(t,e,n){var r=n.config.validateStatus;!r||r(n.status)?t(n):e(i("Request failed with status code "+n.status,n.config,null,n.request,n))}},function(t,e,n){"use strict";t.exports=function(t,e,n,i,r){return t.config=e,n&&(t.code=n),t.request=i,t.response=r,t.isAxiosError=!0,t.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},t}},function(t,e,n){"use strict";var i=n(16),r=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];t.exports=function(t){var e,n,a,o={};return t?(i.forEach(t.split("\n"),(function(t){if(a=t.indexOf(":"),e=i.trim(t.substr(0,a)).toLowerCase(),n=i.trim(t.substr(a+1)),e){if(o[e]&&r.indexOf(e)>=0)return;o[e]="set-cookie"===e?(o[e]?o[e]:[]).concat([n]):o[e]?o[e]+", "+n:n}})),o):o}},function(t,e,n){"use strict";var i=n(16);t.exports=i.isStandardBrowserEnv()?function(){var t,e=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function r(t){var i=t;return e&&(n.setAttribute("href",i),i=n.href),n.setAttribute("href",i),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return t=r(window.location.href),function(e){var n=i.isString(e)?r(e):e;return n.protocol===t.protocol&&n.host===t.host}}():function(){return!0}},function(t,e,n){"use strict";var i=n(16);t.exports=i.isStandardBrowserEnv()?{write:function(t,e,n,r,a,o){var s=[];s.push(t+"="+encodeURIComponent(e)),i.isNumber(n)&&s.push("expires="+new Date(n).toGMTString()),i.isString(r)&&s.push("path="+r),i.isString(a)&&s.push("domain="+a),!0===o&&s.push("secure"),document.cookie=s.join("; ")},read:function(t){var e=document.cookie.match(new RegExp("(^|;\\s*)("+t+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove:function(t){this.write(t,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(t,e,n){"use strict";t.exports=function(t){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t)}},function(t,e,n){"use strict";t.exports=function(t,e){return e?t.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):t}},function(t,e,n){"use strict";var i=n(139);function r(t){if("function"!=typeof t)throw new TypeError("executor must be a function.");var e;this.promise=new Promise((function(t){e=t}));var n=this;t((function(t){n.reason||(n.reason=new i(t),e(n.reason))}))}r.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},r.source=function(){var t;return{token:new r((function(e){t=e})),cancel:t}},t.exports=r},function(t,e,n){"use strict";t.exports=function(t){return function(e){return t.apply(null,e)}}},function(t,e,n){"use strict";var i;function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function s(t,e,n){return e&&o(t.prototype,e),n&&o(t,n),t}function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function u(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?c(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function h(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&function(t,e){(Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}(t,e)}function f(t){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function d(t,e){return!e||"object"!=typeof e&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function p(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var g=function(){function t(){a(this,t)}return s(t,[{key:"shadeRGBColor",value:function(t,e){var n=e.split(","),i=t<0?0:255,r=t<0?-1*t:t,a=parseInt(n[0].slice(4),10),o=parseInt(n[1],10),s=parseInt(n[2],10);return"rgb("+(Math.round((i-a)*r)+a)+","+(Math.round((i-o)*r)+o)+","+(Math.round((i-s)*r)+s)+")"}},{key:"shadeHexColor",value:function(t,e){var n=parseInt(e.slice(1),16),i=t<0?0:255,r=t<0?-1*t:t,a=n>>16,o=n>>8&255,s=255&n;return"#"+(16777216+65536*(Math.round((i-a)*r)+a)+256*(Math.round((i-o)*r)+o)+(Math.round((i-s)*r)+s)).toString(16).slice(1)}},{key:"shadeColor",value:function(t,e){return e.length>7?this.shadeRGBColor(t,e):this.shadeHexColor(t,e)}}],[{key:"bind",value:function(t,e){return function(){return t.apply(e,arguments)}}},{key:"isObject",value:function(t){return t&&"object"===r(t)&&!Array.isArray(t)&&null!=t}},{key:"listToArray",value:function(t){var e,n=[];for(e=0;e<t.length;e++)n[e]=t[e];return n}},{key:"extend",value:function(t,e){var n=this;"function"!=typeof Object.assign&&(Object.assign=function(t){if(null==t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),n=1;n<arguments.length;n++){var i=arguments[n];if(null!=i)for(var r in i)i.hasOwnProperty(r)&&(e[r]=i[r])}return e});var i=Object.assign({},t);return this.isObject(t)&&this.isObject(e)&&Object.keys(e).forEach((function(r){n.isObject(e[r])&&r in t?i[r]=n.extend(t[r],e[r]):Object.assign(i,l({},r,e[r]))})),i}},{key:"extendArray",value:function(e,n){var i=[];return e.map((function(e){i.push(t.extend(n,e))})),i}},{key:"monthMod",value:function(t){return t%12}},{key:"clone",value:function(t){if("[object Array]"===Object.prototype.toString.call(t)){for(var e=[],n=0;n<t.length;n++)e[n]=this.clone(t[n]);return e}if("object"===r(t)){var i={};for(var a in t)t.hasOwnProperty(a)&&(i[a]=this.clone(t[a]));return i}return t}},{key:"log10",value:function(t){return Math.log(t)/Math.LN10}},{key:"roundToBase10",value:function(t){return Math.pow(10,Math.floor(Math.log10(t)))}},{key:"roundToBase",value:function(t,e){return Math.pow(e,Math.floor(Math.log(t)/Math.log(e)))}},{key:"parseNumber",value:function(t){return null===t?t:parseFloat(t)}},{key:"randomId",value:function(){return(new Date%9e6).toString(16)}},{key:"noExponents",value:function(t){var e=String(t).split(/[eE]/);if(1===e.length)return e[0];var n="",i=t<0?"-":"",r=e[0].replace(".",""),a=Number(e[1])+1;if(a<0){for(n=i+"0.";a++;)n+="0";return n+r.replace(/^-/,"")}for(a-=r.length;a--;)n+="0";return r+n}},{key:"getDimensions",value:function(t){var e=getComputedStyle(t),n=[],i=t.clientHeight,r=t.clientWidth;return i-=parseFloat(e.paddingTop)+parseFloat(e.paddingBottom),r-=parseFloat(e.paddingLeft)+parseFloat(e.paddingRight),n.push(r),n.push(i),n}},{key:"getBoundingClientRect",value:function(t){var e=t.getBoundingClientRect();return{top:e.top,right:e.right,bottom:e.bottom,left:e.left,width:e.width,height:e.height,x:e.x,y:e.y}}},{key:"getLargestStringFromArr",value:function(t){return t.reduce((function(t,e){return Array.isArray(e)&&(e=e.reduce((function(t,e){return t.length>e.length?t:e}))),t.length>e.length?t:e}),0)}},{key:"hexToRgba",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"#999999",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.6;"#"!==t.substring(0,1)&&(t="#999999");var n=t.replace("#","");n=n.match(new RegExp("(.{"+n.length/3+"})","g"));for(var i=0;i<n.length;i++)n[i]=parseInt(1===n[i].length?n[i]+n[i]:n[i],16);return void 0!==e&&n.push(e),"rgba("+n.join(",")+")"}},{key:"getOpacityFromRGBA",value:function(t){return(t=t.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i))[3]}},{key:"rgb2hex",value:function(t){return(t=t.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i))&&4===t.length?"#"+("0"+parseInt(t[1],10).toString(16)).slice(-2)+("0"+parseInt(t[2],10).toString(16)).slice(-2)+("0"+parseInt(t[3],10).toString(16)).slice(-2):""}},{key:"isColorHex",value:function(t){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t)}},{key:"polarToCartesian",value:function(t,e,n,i){var r=(i-90)*Math.PI/180;return{x:t+n*Math.cos(r),y:e+n*Math.sin(r)}}},{key:"escapeString",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"x",n=t.toString().slice();return n.replace(/[` ~!@#$%^&*()_|+\-=?;:'",.<>{}[\]\\/]/gi,e)}},{key:"negToZero",value:function(t){return t<0?0:t}},{key:"moveIndexInArray",value:function(t,e,n){if(n>=t.length)for(var i=n-t.length+1;i--;)t.push(void 0);return t.splice(n,0,t.splice(e,1)[0]),t}},{key:"extractNumber",value:function(t){return parseFloat(t.replace(/[^\d.]*/g,""))}},{key:"findAncestor",value:function(t,e){for(;(t=t.parentElement)&&!t.classList.contains(e););return t}},{key:"setELstyles",value:function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t.style.key=e[n])}},{key:"isNumber",value:function(t){return!isNaN(t)&&parseFloat(Number(t))===t&&!isNaN(parseInt(t,10))}},{key:"isFloat",value:function(t){return Number(t)===t&&t%1!=0}},{key:"isSafari",value:function(){return/^((?!chrome|android).)*safari/i.test(navigator.userAgent)}},{key:"isFirefox",value:function(){return navigator.userAgent.toLowerCase().indexOf("firefox")>-1}},{key:"isIE11",value:function(){if(-1!==window.navigator.userAgent.indexOf("MSIE")||window.navigator.appVersion.indexOf("Trident/")>-1)return!0}},{key:"isIE",value:function(){var t=window.navigator.userAgent,e=t.indexOf("MSIE ");if(e>0)return parseInt(t.substring(e+5,t.indexOf(".",e)),10);if(t.indexOf("Trident/")>0){var n=t.indexOf("rv:");return parseInt(t.substring(n+3,t.indexOf(".",n)),10)}var i=t.indexOf("Edge/");return i>0&&parseInt(t.substring(i+5,t.indexOf(".",i)),10)}}]),t}(),m=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"getDefaultFilter",value:function(t,e){var n=this.w;t.unfilter(!0),(new window.SVG.Filter).size("120%","180%","-5%","-40%"),"none"!==n.config.states.normal.filter?this.applyFilter(t,e,n.config.states.normal.filter.type,n.config.states.normal.filter.value):n.config.chart.dropShadow.enabled&&this.dropShadow(t,n.config.chart.dropShadow,e)}},{key:"addNormalFilter",value:function(t,e){var n=this.w;n.config.chart.dropShadow.enabled&&!t.node.classList.contains("apexcharts-marker")&&this.dropShadow(t,n.config.chart.dropShadow,e)}},{key:"addLightenFilter",value:function(t,e,n){var i=this,r=this.w,a=n.intensity;g.isFirefox()||(t.unfilter(!0),new window.SVG.Filter,t.filter((function(t){var n=r.config.chart.dropShadow;(n.enabled?i.addShadow(t,e,n):t).componentTransfer({rgb:{type:"linear",slope:1.5,intercept:a}})})),t.filterer.node.setAttribute("filterUnits","userSpaceOnUse"),this._scaleFilterSize(t.filterer.node))}},{key:"addDarkenFilter",value:function(t,e,n){var i=this,r=this.w,a=n.intensity;g.isFirefox()||(t.unfilter(!0),new window.SVG.Filter,t.filter((function(t){var n=r.config.chart.dropShadow;(n.enabled?i.addShadow(t,e,n):t).componentTransfer({rgb:{type:"linear",slope:a}})})),t.filterer.node.setAttribute("filterUnits","userSpaceOnUse"),this._scaleFilterSize(t.filterer.node))}},{key:"applyFilter",value:function(t,e,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;switch(n){case"none":this.addNormalFilter(t,e);break;case"lighten":this.addLightenFilter(t,e,{intensity:i});break;case"darken":this.addDarkenFilter(t,e,{intensity:i})}}},{key:"addShadow",value:function(t,e,n){var i=n.blur,r=n.top,a=n.left,o=n.color,s=n.opacity,l=t.flood(Array.isArray(o)?o[e]:o,s).composite(t.sourceAlpha,"in").offset(a,r).gaussianBlur(i).merge(t.source);return t.blend(t.source,l)}},{key:"dropShadow",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=e.top,r=e.left,a=e.blur,o=e.color,s=e.opacity,l=e.noUserSpaceOnUse,c=this.w;return t.unfilter(!0),g.isIE()&&"radialBar"===c.config.chart.type||(o=Array.isArray(o)?o[n]:o,t.filter((function(t){var e;e=g.isSafari()||g.isFirefox()||g.isIE()?t.flood(o,s).composite(t.sourceAlpha,"in").offset(r,i).gaussianBlur(a):t.flood(o,s).composite(t.sourceAlpha,"in").offset(r,i).gaussianBlur(a).merge(t.source),t.blend(t.source,e)})),l||t.filterer.node.setAttribute("filterUnits","userSpaceOnUse"),this._scaleFilterSize(t.filterer.node)),t}},{key:"setSelectionFilter",value:function(t,e,n){var i=this.w;if(void 0!==i.globals.selectedDataPoints[e]&&i.globals.selectedDataPoints[e].indexOf(n)>-1){t.node.setAttribute("selected",!0);var r=i.config.states.active.filter;"none"!==r&&this.applyFilter(t,e,r.type,r.value)}}},{key:"_scaleFilterSize",value:function(t){!function(e){for(var n in e)e.hasOwnProperty(n)&&t.setAttribute(n,e[n])}({width:"200%",height:"200%",x:"-50%",y:"-50%"})}}]),t}(),v=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.setEasingFunctions()}return s(t,[{key:"setEasingFunctions",value:function(){var t;if(!this.w.globals.easing){switch(this.w.config.chart.animations.easing){case"linear":t="-";break;case"easein":t="<";break;case"easeout":t=">";break;case"easeinout":t="<>";break;case"swing":t=function(t){var e=1.70158;return(t-=1)*t*((e+1)*t+e)+1};break;case"bounce":t=function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375};break;case"elastic":t=function(t){return t===!!t?t:Math.pow(2,-10*t)*Math.sin((t-.075)*(2*Math.PI)/.3)+1};break;default:t="<>"}this.w.globals.easing=t}}},{key:"animateLine",value:function(t,e,n,i){t.attr(e).animate(i).attr(n)}},{key:"animateCircleRadius",value:function(t,e,n,i,r,a){e||(e=0),t.attr({r:e}).animate(i,r).attr({r:n}).afterAll((function(){a()}))}},{key:"animateCircle",value:function(t,e,n,i,r){t.attr({r:e.r,cx:e.cx,cy:e.cy}).animate(i,r).attr({r:n.r,cx:n.cx,cy:n.cy})}},{key:"animateRect",value:function(t,e,n,i,r){t.attr(e).animate(i).attr(n).afterAll((function(){return r()}))}},{key:"animatePathsGradually",value:function(t){var e=t.el,n=t.realIndex,i=t.j,r=t.fill,a=t.pathFrom,o=t.pathTo,s=t.speed,l=t.delay,c=this.w,u=0;c.config.chart.animations.animateGradually.enabled&&(u=c.config.chart.animations.animateGradually.delay),c.config.chart.animations.dynamicAnimation.enabled&&c.globals.dataChanged&&"bar"!==c.config.chart.type&&(u=0),this.morphSVG(e,n,i,"line"!==c.config.chart.type||c.globals.comboCharts?r:"stroke",a,o,s,l*u)}},{key:"showDelayedElements",value:function(){this.w.globals.delayedElements.forEach((function(t){t.el.classList.remove("apexcharts-element-hidden")}))}},{key:"animationCompleted",value:function(t){var e=this.w;e.globals.animationEnded||(e.globals.animationEnded=!0,"function"==typeof e.config.chart.events.animationEnd&&e.config.chart.events.animationEnd(this.ctx,{el:t,w:e}))}},{key:"morphSVG",value:function(t,e,n,i,r,a,o,s){var l=this,c=this.w;r||(r=t.attr("pathFrom")),a||(a=t.attr("pathTo"));var u=function(t){return"radar"===c.config.chart.type&&(o=1),"M 0 ".concat(c.globals.gridHeight)};(!r||r.indexOf("undefined")>-1||r.indexOf("NaN")>-1)&&(r=u()),(a.indexOf("undefined")>-1||a.indexOf("NaN")>-1)&&(a=u()),c.globals.shouldAnimate||(o=1),t.plot(r).animate(1,c.globals.easing,s).plot(r).animate(o,c.globals.easing,s).plot(a).afterAll((function(){g.isNumber(n)?n===c.globals.series[c.globals.maxValsInArrayIndex].length-2&&c.globals.shouldAnimate&&l.animationCompleted(t):"none"!==i&&c.globals.shouldAnimate&&(!c.globals.comboCharts&&e===c.globals.series.length-1||c.globals.comboCharts)&&l.animationCompleted(t),l.showDelayedElements()}))}}]),t}(),x=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"drawLine",value:function(t,e,n,i){var r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"#a8a8a8",a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,s=this.w,l=s.globals.dom.Paper.line().attr({x1:t,y1:e,x2:n,y2:i,stroke:r,"stroke-dasharray":a,"stroke-width":o});return l}},{key:"drawRect",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"#fefefe",o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,s=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:null,c=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,u=this.w,h=u.globals.dom.Paper.rect();return h.attr({x:t,y:e,width:n>0?n:0,height:i>0?i:0,rx:r,ry:r,fill:a,opacity:o,"stroke-width":null!==s?s:0,stroke:null!==l?l:"none","stroke-dasharray":c}),h}},{key:"drawPolygon",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"#e1e1e1",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"none",i=this.w,r=i.globals.dom.Paper.polygon(t).attr({fill:n,stroke:e});return r}},{key:"drawCircle",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=this.w,i=n.globals.dom.Paper.circle(2*t);return null!==e&&i.attr(e),i}},{key:"drawPath",value:function(t){var e=t.d,n=void 0===e?"":e,i=t.stroke,r=void 0===i?"#a8a8a8":i,a=t.strokeWidth,o=void 0===a?1:a,s=t.fill,l=t.fillOpacity,c=void 0===l?1:l,u=t.strokeOpacity,h=void 0===u?1:u,f=t.classes,d=t.strokeLinecap,p=void 0===d?null:d,g=t.strokeDashArray,m=void 0===g?0:g,v=this.w;return null===p&&(p=v.config.stroke.lineCap),(n.indexOf("undefined")>-1||n.indexOf("NaN")>-1)&&(n="M 0 ".concat(v.globals.gridHeight)),v.globals.dom.Paper.path(n).attr({fill:s,"fill-opacity":c,stroke:r,"stroke-opacity":h,"stroke-linecap":p,"stroke-width":o,"stroke-dasharray":m,class:f})}},{key:"group",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=this.w,n=e.globals.dom.Paper.group();return null!==t&&n.attr(t),n}},{key:"move",value:function(t,e){return["M",t,e].join(" ")}},{key:"line",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=null;return null===n?i=["L",t,e].join(" "):"H"===n?i=["H",t].join(" "):"V"===n&&(i=["V",e].join(" ")),i}},{key:"curve",value:function(t,e,n,i,r,a){return["C",t,e,n,i,r,a].join(" ")}},{key:"quadraticCurve",value:function(t,e,n,i){return["Q",t,e,n,i].join(" ")}},{key:"arc",value:function(t,e,n,i,r,a,o){var s=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l="A";s&&(l="a");var c=[l,t,e,n,i,r,a,o].join(" ");return c}},{key:"renderPaths",value:function(t){var e,n=t.j,i=t.realIndex,r=t.pathFrom,a=t.pathTo,o=t.stroke,s=t.strokeWidth,l=t.strokeLinecap,c=t.fill,h=t.animationDelay,f=t.initialSpeed,d=t.dataChangeSpeed,p=t.className,g=t.shouldClipToGrid,x=void 0===g||g,b=t.bindEventsOnPaths,y=void 0===b||b,w=t.drawShadow,k=void 0===w||w,S=this.w,C=new m(this.ctx),A=new v(this.ctx),E=this.w.config.chart.animations.enabled,P=E&&this.w.config.chart.animations.dynamicAnimation.enabled,T=!!(E&&!S.globals.resized||P&&S.globals.dataChanged&&S.globals.shouldAnimate);T?e=r:(e=a,S.globals.animationEnded=!0);var O,L=S.config.stroke.dashArray;O=Array.isArray(L)?L[i]:S.config.stroke.dashArray;var M=this.drawPath({d:e,stroke:o,strokeWidth:s,fill:c,fillOpacity:1,classes:p,strokeLinecap:l,strokeDashArray:O});if(M.attr("index",i),x&&M.attr({"clip-path":"url(#gridRectMask".concat(S.globals.cuid,")")}),"none"!==S.config.states.normal.filter.type)C.getDefaultFilter(M,i);else if(S.config.chart.dropShadow.enabled&&k&&(!S.config.chart.dropShadow.enabledOnSeries||S.config.chart.dropShadow.enabledOnSeries&&-1!==S.config.chart.dropShadow.enabledOnSeries.indexOf(i))){var _=S.config.chart.dropShadow;C.dropShadow(M,_,i)}y&&(M.node.addEventListener("mouseenter",this.pathMouseEnter.bind(this,M)),M.node.addEventListener("mouseleave",this.pathMouseLeave.bind(this,M)),M.node.addEventListener("mousedown",this.pathMouseDown.bind(this,M))),M.attr({pathTo:a,pathFrom:r});var I={el:M,j:n,realIndex:i,pathFrom:r,pathTo:a,fill:c,strokeWidth:s,delay:h};return!E||S.globals.resized||S.globals.dataChanged?!S.globals.resized&&S.globals.dataChanged||A.showDelayedElements():A.animatePathsGradually(u({},I,{speed:f})),S.globals.dataChanged&&P&&T&&A.animatePathsGradually(u({},I,{speed:d})),M}},{key:"drawPattern",value:function(t,e,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"#a8a8a8",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=this.w,o=a.globals.dom.Paper.pattern(e,n,(function(a){"horizontalLines"===t?a.line(0,0,n,0).stroke({color:i,width:r+1}):"verticalLines"===t?a.line(0,0,0,e).stroke({color:i,width:r+1}):"slantedLines"===t?a.line(0,0,e,n).stroke({color:i,width:r}):"squares"===t?a.rect(e,n).fill("none").stroke({color:i,width:r}):"circles"===t&&a.circle(e).fill("none").stroke({color:i,width:r})}));return o}},{key:"drawGradient",value:function(t,e,n,i,r){var a,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,l=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0,u=this.w;e=g.hexToRgba(e,i),n=g.hexToRgba(n,r);var h=0,f=1,d=1,p=null;null!==s&&(h=void 0!==s[0]?s[0]/100:0,f=void 0!==s[1]?s[1]/100:1,d=void 0!==s[2]?s[2]/100:1,p=void 0!==s[3]?s[3]/100:null);var m=!("donut"!==u.config.chart.type&&"pie"!==u.config.chart.type&&"bubble"!==u.config.chart.type);if(a=null===l||0===l.length?u.globals.dom.Paper.gradient(m?"radial":"linear",(function(t){t.at(h,e,i),t.at(f,n,r),t.at(d,n,r),null!==p&&t.at(p,e,i)})):u.globals.dom.Paper.gradient(m?"radial":"linear",(function(t){(Array.isArray(l[c])?l[c]:l).forEach((function(e){t.at(e.offset/100,e.color,e.opacity)}))})),m){var v=u.globals.gridWidth/2,x=u.globals.gridHeight/2;"bubble"!==u.config.chart.type?a.attr({gradientUnits:"userSpaceOnUse",cx:v,cy:x,r:o}):a.attr({cx:.5,cy:.5,r:.8,fx:.2,fy:.2})}else"vertical"===t?a.from(0,0).to(0,1):"diagonal"===t?a.from(0,0).to(1,1):"horizontal"===t?a.from(0,1).to(1,1):"diagonal2"===t&&a.from(1,0).to(0,1);return a}},{key:"drawText",value:function(t){var e,n=t.x,i=t.y,r=t.text,a=t.textAnchor,o=t.fontSize,s=t.fontFamily,l=t.fontWeight,c=t.foreColor,u=t.opacity,h=t.cssClass,f=void 0===h?"":h,d=t.isPlainText,p=void 0===d||d,g=this.w;return void 0===r&&(r=""),a||(a="start"),c&&c.length||(c=g.config.chart.foreColor),s=s||g.config.chart.fontFamily,l=l||"regular",(e=Array.isArray(r)?g.globals.dom.Paper.text((function(t){for(var e=0;e<r.length;e++)0===e?t.tspan(r[e]):t.tspan(r[e]).newLine()})):p?g.globals.dom.Paper.plain(r):g.globals.dom.Paper.text((function(t){return t.tspan(r)}))).attr({x:n,y:i,"text-anchor":a,"dominant-baseline":"auto","font-size":o,"font-family":s,"font-weight":l,fill:c,class:"apexcharts-text "+f}),e.node.style.fontFamily=s,e.node.style.opacity=u,e}},{key:"drawMarker",value:function(t,e,n){t=t||0;var i=n.pSize||0,r=null;if("square"===n.shape){var a=void 0===n.pRadius?i/2:n.pRadius;null!==e&&i||(i=0,a=0);var o=1.2*i+a,s=this.drawRect(o,o,o,o,a);s.attr({x:t-o/2,y:e-o/2,cx:t,cy:e,class:n.class?n.class:"",fill:n.pointFillColor,"fill-opacity":n.pointFillOpacity?n.pointFillOpacity:1,stroke:n.pointStrokeColor,"stroke-width":n.pWidth?n.pWidth:0,"stroke-opacity":n.pointStrokeOpacity?n.pointStrokeOpacity:1}),r=s}else"circle"!==n.shape&&n.shape||(g.isNumber(e)||(i=0,e=0),r=this.drawCircle(i,{cx:t,cy:e,class:n.class?n.class:"",stroke:n.pointStrokeColor,fill:n.pointFillColor,"fill-opacity":n.pointFillOpacity?n.pointFillOpacity:1,"stroke-width":n.pWidth?n.pWidth:0,"stroke-opacity":n.pointStrokeOpacity?n.pointStrokeOpacity:1}));return r}},{key:"pathMouseEnter",value:function(t,e){var n=this.w,i=new m(this.ctx),r=parseInt(t.node.getAttribute("index"),10),a=parseInt(t.node.getAttribute("j"),10);if("function"==typeof n.config.chart.events.dataPointMouseEnter&&n.config.chart.events.dataPointMouseEnter(e,this.ctx,{seriesIndex:r,dataPointIndex:a,w:n}),this.ctx.events.fireEvent("dataPointMouseEnter",[e,this.ctx,{seriesIndex:r,dataPointIndex:a,w:n}]),("none"===n.config.states.active.filter.type||"true"!==t.node.getAttribute("selected"))&&"none"!==n.config.states.hover.filter.type&&"none"!==n.config.states.active.filter.type&&!n.globals.isTouchDevice){var o=n.config.states.hover.filter;i.applyFilter(t,r,o.type,o.value)}}},{key:"pathMouseLeave",value:function(t,e){var n=this.w,i=new m(this.ctx),r=parseInt(t.node.getAttribute("index"),10),a=parseInt(t.node.getAttribute("j"),10);"function"==typeof n.config.chart.events.dataPointMouseLeave&&n.config.chart.events.dataPointMouseLeave(e,this.ctx,{seriesIndex:r,dataPointIndex:a,w:n}),this.ctx.events.fireEvent("dataPointMouseLeave",[e,this.ctx,{seriesIndex:r,dataPointIndex:a,w:n}]),"none"!==n.config.states.active.filter.type&&"true"===t.node.getAttribute("selected")||"none"!==n.config.states.hover.filter.type&&i.getDefaultFilter(t,r)}},{key:"pathMouseDown",value:function(t,e){var n=this.w,i=new m(this.ctx),r=parseInt(t.node.getAttribute("index"),10),a=parseInt(t.node.getAttribute("j"),10),o="false";if("true"===t.node.getAttribute("selected")){if(t.node.setAttribute("selected","false"),n.globals.selectedDataPoints[r].indexOf(a)>-1){var s=n.globals.selectedDataPoints[r].indexOf(a);n.globals.selectedDataPoints[r].splice(s,1)}}else{if(!n.config.states.active.allowMultipleDataPointsSelection&&n.globals.selectedDataPoints.length>0){n.globals.selectedDataPoints=[];var l=n.globals.dom.Paper.select(".apexcharts-series path").members,c=n.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members,u=function(t){Array.prototype.forEach.call(t,(function(t){t.node.setAttribute("selected","false"),i.getDefaultFilter(t,r)}))};u(l),u(c)}t.node.setAttribute("selected","true"),o="true",void 0===n.globals.selectedDataPoints[r]&&(n.globals.selectedDataPoints[r]=[]),n.globals.selectedDataPoints[r].push(a)}if("true"===o){var h=n.config.states.active.filter;"none"!==h&&i.applyFilter(t,r,h.type,h.value)}else"none"!==n.config.states.active.filter.type&&i.getDefaultFilter(t,r);"function"==typeof n.config.chart.events.dataPointSelection&&n.config.chart.events.dataPointSelection(e,this.ctx,{selectedDataPoints:n.globals.selectedDataPoints,seriesIndex:r,dataPointIndex:a,w:n}),e&&this.ctx.events.fireEvent("dataPointSelection",[e,this.ctx,{selectedDataPoints:n.globals.selectedDataPoints,seriesIndex:r,dataPointIndex:a,w:n}])}},{key:"rotateAroundCenter",value:function(t){var e=t.getBBox();return{x:e.x+e.width/2,y:e.y+e.height/2}}},{key:"getTextRects",value:function(t,e,n,i){var r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],a=this.w,o=this.drawText({x:-200,y:-200,text:t,textAnchor:"start",fontSize:e,fontFamily:n,foreColor:"#fff",opacity:0});i&&o.attr("transform",i),a.globals.dom.Paper.add(o);var s=o.bbox();return r||(s=o.node.getBoundingClientRect()),o.remove(),{width:s.width,height:s.height}}},{key:"placeTextWithEllipsis",value:function(t,e,n){if("function"==typeof t.getComputedTextLength&&(t.textContent=e,e.length>0&&t.getComputedTextLength()>=n/.8)){for(var i=e.length-3;i>0;i-=3)if(t.getSubStringLength(0,i)<=n/.8)return void(t.textContent=e.substring(0,i)+"...");t.textContent="."}}}],[{key:"setAttrs",value:function(t,e){for(var n in e)e.hasOwnProperty(n)&&t.setAttribute(n,e[n])}}]),t}(),b=function(){function t(e){a(this,t),this.w=e.w,this.annoCtx=e}return s(t,[{key:"setOrientations",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=this.w;if("vertical"===t.label.orientation){var i=null!==e?e:0,r=n.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(i,"']"));if(null!==r){var a=r.getBoundingClientRect();r.setAttribute("x",parseFloat(r.getAttribute("x"))-a.height+4),"top"===t.label.position?r.setAttribute("y",parseFloat(r.getAttribute("y"))+a.width):r.setAttribute("y",parseFloat(r.getAttribute("y"))-a.width);var o=this.annoCtx.graphics.rotateAroundCenter(r),s=o.x,l=o.y;r.setAttribute("transform","rotate(-90 ".concat(s," ").concat(l,")"))}}}},{key:"addBackgroundToAnno",value:function(t,e){var n=this.w;if(!e.label.text||e.label.text&&!e.label.text.trim())return null;var i=n.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect(),r=t.getBoundingClientRect(),a=e.label.style.padding.left,o=e.label.style.padding.right,s=e.label.style.padding.top,l=e.label.style.padding.bottom;"vertical"===e.label.orientation&&(s=e.label.style.padding.left,l=e.label.style.padding.right,a=e.label.style.padding.top,o=e.label.style.padding.bottom);var c=r.left-i.left-a,u=r.top-i.top-s,h=this.annoCtx.graphics.drawRect(c,u,r.width+a+o,r.height+s+l,0,e.label.style.background,1,e.label.borderWidth,e.label.borderColor,0);return e.id&&h.node.classList.add(e.id),h}},{key:"annotationsBackground",value:function(){var t=this,e=this.w,n=function(n,i,r){var a=e.globals.dom.baseEl.querySelector(".apexcharts-".concat(r,"-annotations .apexcharts-").concat(r,"-annotation-label[rel='").concat(i,"']"));if(a){var o=a.parentNode,s=t.addBackgroundToAnno(a,n);s&&o.insertBefore(s.node,a)}};e.config.annotations.xaxis.map((function(t,e){n(t,e,"xaxis")})),e.config.annotations.yaxis.map((function(t,e){n(t,e,"yaxis")})),e.config.annotations.points.map((function(t,e){n(t,e,"point")}))}},{key:"makeAnnotationDraggable",value:function(t,e,n){var i=this.w.config.annotations[e][n];t.draggable().on("dragend",(function(t){var e=t.target.getAttribute("x"),n=t.target.getAttribute("y"),r=t.target.getAttribute("cx"),a=t.target.getAttribute("cy");i.x=e,i.y=n,r&&a&&(i.x=r,i.y=a)})),t.node.addEventListener("mousedown",(function(e){e.stopPropagation(),t.selectize({pointSize:8,rotationPoint:!1,pointType:"rect"}),t.resize().on("resizedone",(function(t){var e=t.target.getAttribute("width"),n=t.target.getAttribute("height"),r=t.target.getAttribute("r");i.width=e,i.height=n,r&&(i.radius=r)}))}))}},{key:"getStringX",value:function(t){var e=this.w,n=t;e.config.xaxis.convertedCatToNumeric&&e.globals.categoryLabels.length&&(t=e.globals.categoryLabels.indexOf(t)+1);var i=e.globals.labels.indexOf(t),r=e.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child("+(i+1)+")");return r&&(n=parseFloat(r.getAttribute("x"))),n}}]),t}(),y=function(){function t(e){a(this,t),this.w=e.w,this.annoCtx=e,this.invertAxis=this.annoCtx.invertAxis}return s(t,[{key:"addXaxisAnnotation",value:function(t,e,n){var i=this.w,r=this.invertAxis?i.globals.minY:i.globals.minX,a=this.invertAxis?i.globals.maxY:i.globals.maxX,o=this.invertAxis?i.globals.yRange[0]:i.globals.xRange,s=(t.x-r)/(o/i.globals.gridWidth);this.annoCtx.inversedReversedAxis&&(s=(a-t.x)/(o/i.globals.gridWidth));var l=t.label.text;"category"!==i.config.xaxis.type&&!i.config.xaxis.convertedCatToNumeric||this.invertAxis||i.globals.dataFormatXNumeric||(s=this.annoCtx.helpers.getStringX(t.x));var c=t.strokeDashArray;if(g.isNumber(s)){if(null===t.x2||void 0===t.x2){var u=this.annoCtx.graphics.drawLine(s+t.offsetX,0+t.offsetY,s+t.offsetX,i.globals.gridHeight+t.offsetY,t.borderColor,c,t.borderWidth);e.appendChild(u.node),t.id&&u.node.classList.add(t.id)}else{var h=(t.x2-r)/(o/i.globals.gridWidth);if(this.annoCtx.inversedReversedAxis&&(h=(a-t.x2)/(o/i.globals.gridWidth)),"category"!==i.config.xaxis.type&&!i.config.xaxis.convertedCatToNumeric||this.invertAxis||i.globals.dataFormatXNumeric||(h=this.annoCtx.helpers.getStringX(t.x2)),h<s){var f=s;s=h,h=f}var d=this.annoCtx.graphics.drawRect(s+t.offsetX,0+t.offsetY,h-s,i.globals.gridHeight+t.offsetY,0,t.fillColor,t.opacity,1,t.borderColor,c);d.node.classList.add("apexcharts-annotation-rect"),d.attr("clip-path","url(#gridRectMask".concat(i.globals.cuid,")")),e.appendChild(d.node),t.id&&d.node.classList.add(t.id)}var p="top"===t.label.position?4:i.globals.gridHeight,m=this.annoCtx.graphics.getTextRects(l,parseFloat(t.label.style.fontSize)),v=this.annoCtx.graphics.drawText({x:s+t.label.offsetX,y:p+t.label.offsetY-("vertical"===t.label.orientation?"top"===t.label.position?m.width/2-12:-m.width/2:0),text:l,textAnchor:t.label.textAnchor,fontSize:t.label.style.fontSize,fontFamily:t.label.style.fontFamily,fontWeight:t.label.style.fontWeight,foreColor:t.label.style.color,cssClass:"apexcharts-xaxis-annotation-label ".concat(t.label.style.cssClass," ").concat(t.id?t.id:"")});v.attr({rel:n}),e.appendChild(v.node),this.annoCtx.helpers.setOrientations(t,n)}}},{key:"drawXAxisAnnotations",value:function(){var t=this,e=this.w,n=this.annoCtx.graphics.group({class:"apexcharts-xaxis-annotations"});return e.config.annotations.xaxis.map((function(e,i){t.addXaxisAnnotation(e,n.node,i)})),n}}]),t}(),w=function(){function t(e){a(this,t),this.w=e.w,this.annoCtx=e}return s(t,[{key:"addYaxisAnnotation",value:function(t,e,n){var i,r=this.w,a=t.strokeDashArray,o=this._getY1Y2("y1",t),s=t.label.text;if(null===t.y2||void 0===t.y2){var l=this.annoCtx.graphics.drawLine(0+t.offsetX,o+t.offsetY,r.globals.gridWidth+t.offsetX,o+t.offsetY,t.borderColor,a,t.borderWidth);e.appendChild(l.node),t.id&&l.node.classList.add(t.id)}else{if((i=this._getY1Y2("y2",t))>o){var c=o;o=i,i=c}var u=this.annoCtx.graphics.drawRect(0+t.offsetX,i+t.offsetY,r.globals.gridWidth+t.offsetX,o-i,0,t.fillColor,t.opacity,1,t.borderColor,a);u.node.classList.add("apexcharts-annotation-rect"),u.attr("clip-path","url(#gridRectMask".concat(r.globals.cuid,")")),e.appendChild(u.node),t.id&&u.node.classList.add(t.id)}var h="right"===t.label.position?r.globals.gridWidth:0,f=this.annoCtx.graphics.drawText({x:h+t.label.offsetX,y:(i||o)+t.label.offsetY-3,text:s,textAnchor:t.label.textAnchor,fontSize:t.label.style.fontSize,fontFamily:t.label.style.fontFamily,fontWeight:t.label.style.fontWeight,foreColor:t.label.style.color,cssClass:"apexcharts-yaxis-annotation-label ".concat(t.label.style.cssClass," ").concat(t.id?t.id:"")});f.attr({rel:n}),e.appendChild(f.node)}},{key:"_getY1Y2",value:function(t,e){var n,i="y1"===t?e.y:e.y2,r=this.w;if(this.annoCtx.invertAxis){var a=r.globals.labels.indexOf(i);r.config.xaxis.convertedCatToNumeric&&(a=r.globals.categoryLabels.indexOf(i));var o=r.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child("+(a+1)+")");o&&(n=parseFloat(o.getAttribute("y")))}else n=r.globals.gridHeight-(i-r.globals.minYArr[e.yAxisIndex])/(r.globals.yRange[e.yAxisIndex]/r.globals.gridHeight),r.config.yaxis[e.yAxisIndex]&&r.config.yaxis[e.yAxisIndex].reversed&&(n=(i-r.globals.minYArr[e.yAxisIndex])/(r.globals.yRange[e.yAxisIndex]/r.globals.gridHeight));return n}},{key:"drawYAxisAnnotations",value:function(){var t=this,e=this.w,n=this.annoCtx.graphics.group({class:"apexcharts-yaxis-annotations"});return e.config.annotations.yaxis.map((function(e,i){t.addYaxisAnnotation(e,n.node,i)})),n}}]),t}(),k=function(){function t(e){a(this,t),this.w=e.w,this.annoCtx=e}return s(t,[{key:"addPointAnnotation",value:function(t,e,n){var i=this.w,r=0,a=0,o=0;if(this.annoCtx.invertAxis&&console.warn("Point annotation is not supported in horizontal bar charts."),"string"==typeof t.x){var s=i.globals.labels.indexOf(t.x);i.config.xaxis.convertedCatToNumeric&&(s=i.globals.categoryLabels.indexOf(t.x)),r=this.annoCtx.helpers.getStringX(t.x);var l=t.y;null===t.y&&(l=i.globals.series[t.seriesIndex][s]),a=i.globals.gridHeight-(l-i.globals.minYArr[t.yAxisIndex])/(i.globals.yRange[t.yAxisIndex]/i.globals.gridHeight)-parseFloat(t.label.style.fontSize)-t.marker.size,o=i.globals.gridHeight-(l-i.globals.minYArr[t.yAxisIndex])/(i.globals.yRange[t.yAxisIndex]/i.globals.gridHeight),i.config.yaxis[t.yAxisIndex]&&i.config.yaxis[t.yAxisIndex].reversed&&(a=(l-i.globals.minYArr[t.yAxisIndex])/(i.globals.yRange[t.yAxisIndex]/i.globals.gridHeight)+parseFloat(t.label.style.fontSize)+t.marker.size,o=(l-i.globals.minYArr[t.yAxisIndex])/(i.globals.yRange[t.yAxisIndex]/i.globals.gridHeight))}else r=(t.x-i.globals.minX)/(i.globals.xRange/i.globals.gridWidth),a=i.globals.gridHeight-(parseFloat(t.y)-i.globals.minYArr[t.yAxisIndex])/(i.globals.yRange[t.yAxisIndex]/i.globals.gridHeight)-parseFloat(t.label.style.fontSize)-t.marker.size,o=i.globals.gridHeight-(t.y-i.globals.minYArr[t.yAxisIndex])/(i.globals.yRange[t.yAxisIndex]/i.globals.gridHeight),i.config.yaxis[t.yAxisIndex]&&i.config.yaxis[t.yAxisIndex].reversed&&(a=(parseFloat(t.y)-i.globals.minYArr[t.yAxisIndex])/(i.globals.yRange[t.yAxisIndex]/i.globals.gridHeight)-parseFloat(t.label.style.fontSize)-t.marker.size,o=(t.y-i.globals.minYArr[t.yAxisIndex])/(i.globals.yRange[t.yAxisIndex]/i.globals.gridHeight));if(g.isNumber(r)){var c={pSize:t.marker.size,pWidth:t.marker.strokeWidth,pointFillColor:t.marker.fillColor,pointStrokeColor:t.marker.strokeColor,shape:t.marker.shape,pRadius:t.marker.radius,class:"apexcharts-point-annotation-marker ".concat(t.marker.cssClass," ").concat(t.id?t.id:"")},u=this.annoCtx.graphics.drawMarker(r+t.marker.offsetX,o+t.marker.offsetY,c);e.appendChild(u.node);var h=t.label.text?t.label.text:"",f=this.annoCtx.graphics.drawText({x:r+t.label.offsetX,y:a+t.label.offsetY,text:h,textAnchor:t.label.textAnchor,fontSize:t.label.style.fontSize,fontFamily:t.label.style.fontFamily,fontWeight:t.label.style.fontWeight,foreColor:t.label.style.color,cssClass:"apexcharts-point-annotation-label ".concat(t.label.style.cssClass," ").concat(t.id?t.id:"")});if(f.attr({rel:n}),e.appendChild(f.node),t.customSVG.SVG){var d=this.annoCtx.graphics.group({class:"apexcharts-point-annotations-custom-svg "+t.customSVG.cssClass});d.attr({transform:"translate(".concat(r+t.customSVG.offsetX,", ").concat(a+t.customSVG.offsetY,")")}),d.node.innerHTML=t.customSVG.SVG,e.appendChild(d.node)}if(t.image.path){var p=t.image.width?t.image.width:20,m=t.image.height?t.image.height:20;this.annoCtx.addImage({x:r+t.image.offsetX-p/2,y:a+t.image.offsetY-m/2,width:p,height:m,path:t.image.path,appendTo:e})}}}},{key:"drawPointAnnotations",value:function(){var t=this,e=this.w,n=this.annoCtx.graphics.group({class:"apexcharts-point-annotations"});return e.config.annotations.points.map((function(e,i){t.addPointAnnotation(e,n.node,i)})),n}}]),t}();var S,C={name:"en",options:{months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],toolbar:{exportToSVG:"Download SVG",exportToPNG:"Download PNG",exportToCSV:"Download CSV",menu:"Menu",selection:"Selection",selectionZoom:"Selection Zoom",zoomIn:"Zoom In",zoomOut:"Zoom Out",pan:"Panning",reset:"Reset Zoom"}}},A=function(){function t(){a(this,t),this.yAxis={show:!0,showAlways:!1,seriesName:void 0,opposite:!1,reversed:!1,logarithmic:!1,tickAmount:void 0,forceNiceScale:!1,max:void 0,min:void 0,floating:!1,decimalsInFloat:void 0,labels:{show:!0,minWidth:0,maxWidth:160,offsetX:0,offsetY:0,align:void 0,rotate:0,padding:20,style:{colors:[],fontSize:"11px",fontWeight:400,fontFamily:void 0,cssClass:""},formatter:void 0},axisBorder:{show:!1,color:"#e0e0e0",width:1,offsetX:0,offsetY:0},axisTicks:{show:!1,color:"#e0e0e0",width:6,offsetX:0,offsetY:0},title:{text:void 0,rotate:90,offsetY:0,offsetX:0,style:{color:void 0,fontSize:"11px",fontWeight:900,fontFamily:void 0,cssClass:""}},tooltip:{enabled:!1,offsetX:0},crosshairs:{show:!0,position:"front",stroke:{color:"#b6b6b6",width:1,dashArray:0}}},this.pointAnnotation={x:0,y:null,yAxisIndex:0,seriesIndex:0,marker:{size:4,fillColor:"#fff",strokeWidth:2,strokeColor:"#333",shape:"circle",offsetX:0,offsetY:0,radius:2,cssClass:""},label:{borderColor:"#c2c2c2",borderWidth:1,text:void 0,textAnchor:"middle",offsetX:0,offsetY:-15,style:{background:"#fff",color:void 0,fontSize:"11px",fontFamily:void 0,fontWeight:400,cssClass:"",padding:{left:5,right:5,top:2,bottom:2}}},customSVG:{SVG:void 0,cssClass:void 0,offsetX:0,offsetY:0},image:{path:void 0,width:20,height:20,offsetX:0,offsetY:0}},this.yAxisAnnotation={y:0,y2:null,strokeDashArray:1,fillColor:"#c2c2c2",borderColor:"#c2c2c2",borderWidth:1,opacity:.3,offsetX:0,offsetY:0,yAxisIndex:0,label:{borderColor:"#c2c2c2",borderWidth:1,text:void 0,textAnchor:"end",position:"right",offsetX:0,offsetY:-3,style:{background:"#fff",color:void 0,fontSize:"11px",fontFamily:void 0,fontWeight:400,cssClass:"",padding:{left:5,right:5,top:2,bottom:2}}}},this.xAxisAnnotation={x:0,x2:null,strokeDashArray:1,fillColor:"#c2c2c2",borderColor:"#c2c2c2",borderWidth:1,opacity:.3,offsetX:0,offsetY:0,label:{borderColor:"#c2c2c2",borderWidth:1,text:void 0,textAnchor:"middle",orientation:"vertical",position:"top",offsetX:0,offsetY:0,style:{background:"#fff",color:void 0,fontSize:"11px",fontFamily:void 0,fontWeight:400,cssClass:"",padding:{left:5,right:5,top:2,bottom:2}}}},this.text={x:0,y:0,text:"",textAnchor:"start",foreColor:void 0,fontSize:"13px",fontFamily:void 0,fontWeight:400,backgroundColor:"transparent",borderColor:"#c2c2c2",borderRadius:0,borderWidth:0,paddingLeft:4,paddingRight:4,paddingTop:2,paddingBottom:2},this.shape={x:0,y:0,type:"rect",width:"100%",height:50,backgroundColor:"#fff",opacity:1,borderWidth:0,borderRadius:4,borderColor:"#c2c2c2"}}return s(t,[{key:"init",value:function(){return{annotations:{position:"front",yaxis:[this.yAxisAnnotation],xaxis:[this.xAxisAnnotation],points:[this.pointAnnotation],texts:[],images:[],shapes:[]},chart:{animations:{enabled:!0,easing:"easeinout",speed:800,animateGradually:{delay:150,enabled:!0},dynamicAnimation:{enabled:!0,speed:350}},background:"transparent",locales:[C],defaultLocale:"en",dropShadow:{enabled:!1,enabledOnSeries:void 0,top:2,left:2,blur:4,color:"#000",opacity:.35},events:{animationEnd:void 0,beforeMount:void 0,mounted:void 0,updated:void 0,click:void 0,mouseMove:void 0,legendClick:void 0,markerClick:void 0,selection:void 0,dataPointSelection:void 0,dataPointMouseEnter:void 0,dataPointMouseLeave:void 0,beforeZoom:void 0,zoomed:void 0,scrolled:void 0},foreColor:"#373d3f",fontFamily:"Helvetica, Arial, sans-serif",height:"auto",parentHeightOffset:15,redrawOnParentResize:!0,id:void 0,group:void 0,offsetX:0,offsetY:0,selection:{enabled:!1,type:"x",fill:{color:"#24292e",opacity:.1},stroke:{width:1,color:"#24292e",opacity:.4,dashArray:3},xaxis:{min:void 0,max:void 0},yaxis:{min:void 0,max:void 0}},sparkline:{enabled:!1},brush:{enabled:!1,autoScaleYaxis:!0,target:void 0},stacked:!1,stackType:"normal",toolbar:{show:!0,offsetX:0,offsetY:0,tools:{download:!0,selection:!0,zoom:!0,zoomin:!0,zoomout:!0,pan:!0,reset:!0,customIcons:[]},autoSelected:"zoom"},type:"line",width:"100%",zoom:{enabled:!0,type:"x",autoScaleYaxis:!1,zoomedArea:{fill:{color:"#90CAF9",opacity:.4},stroke:{color:"#0D47A1",opacity:.4,width:1}}}},plotOptions:{bar:{horizontal:!1,columnWidth:"70%",barHeight:"70%",distributed:!1,endingShape:"flat",colors:{ranges:[],backgroundBarColors:[],backgroundBarOpacity:1},dataLabels:{position:"top",maxItems:100,hideOverflowingLabels:!0,orientation:"horizontal"}},bubble:{minBubbleRadius:void 0,maxBubbleRadius:void 0},candlestick:{colors:{upward:"#00B746",downward:"#EF403C"},wick:{useFillColor:!0}},heatmap:{radius:2,enableShades:!0,shadeIntensity:.5,reverseNegativeShade:!1,distributed:!1,colorScale:{inverse:!1,ranges:[],min:void 0,max:void 0}},radialBar:{inverseOrder:!1,startAngle:0,endAngle:360,offsetX:0,offsetY:0,hollow:{margin:5,size:"50%",background:"transparent",image:void 0,imageWidth:150,imageHeight:150,imageOffsetX:0,imageOffsetY:0,imageClipped:!0,position:"front",dropShadow:{enabled:!1,top:0,left:0,blur:3,color:"#000",opacity:.5}},track:{show:!0,startAngle:void 0,endAngle:void 0,background:"#f2f2f2",strokeWidth:"97%",opacity:1,margin:5,dropShadow:{enabled:!1,top:0,left:0,blur:3,color:"#000",opacity:.5}},dataLabels:{show:!0,name:{show:!0,fontSize:"16px",fontFamily:void 0,fontWeight:600,color:void 0,offsetY:0,formatter:function(t){return t}},value:{show:!0,fontSize:"14px",fontFamily:void 0,fontWeight:400,color:void 0,offsetY:16,formatter:function(t){return t+"%"}},total:{show:!1,label:"Total",fontSize:"16px",fontWeight:600,fontFamily:void 0,color:void 0,formatter:function(t){return t.globals.seriesTotals.reduce((function(t,e){return t+e}),0)/t.globals.series.length+"%"}}}},pie:{customScale:1,offsetX:0,offsetY:0,expandOnClick:!0,dataLabels:{offset:0,minAngleToShowLabel:10},donut:{size:"65%",background:"transparent",labels:{show:!1,name:{show:!0,fontSize:"16px",fontFamily:void 0,fontWeight:600,color:void 0,offsetY:-10,formatter:function(t){return t}},value:{show:!0,fontSize:"20px",fontFamily:void 0,fontWeight:400,color:void 0,offsetY:10,formatter:function(t){return t}},total:{show:!1,showAlways:!1,label:"Total",fontSize:"16px",fontWeight:400,fontFamily:void 0,color:void 0,formatter:function(t){return t.globals.seriesTotals.reduce((function(t,e){return t+e}),0)}}}}},radar:{size:void 0,offsetX:0,offsetY:0,polygons:{strokeColors:"#e8e8e8",connectorColors:"#e8e8e8",fill:{colors:void 0}}}},colors:void 0,dataLabels:{enabled:!0,enabledOnSeries:void 0,formatter:function(t){return null!==t?t:""},textAnchor:"middle",distributed:!1,offsetX:0,offsetY:0,style:{fontSize:"12px",fontFamily:void 0,fontWeight:600,colors:void 0},background:{enabled:!0,foreColor:"#fff",borderRadius:2,padding:4,opacity:.9,borderWidth:1,borderColor:"#fff",dropShadow:{enabled:!1,top:1,left:1,blur:1,color:"#000",opacity:.45}},dropShadow:{enabled:!1,top:1,left:1,blur:1,color:"#000",opacity:.45}},fill:{type:"solid",colors:void 0,opacity:.85,gradient:{shade:"dark",type:"horizontal",shadeIntensity:.5,gradientToColors:void 0,inverseColors:!0,opacityFrom:1,opacityTo:1,stops:[0,50,100],colorStops:[]},image:{src:[],width:void 0,height:void 0},pattern:{style:"squares",width:6,height:6,strokeWidth:2}},grid:{show:!0,borderColor:"#e0e0e0",strokeDashArray:0,position:"back",xaxis:{lines:{show:!1}},yaxis:{lines:{show:!0}},row:{colors:void 0,opacity:.5},column:{colors:void 0,opacity:.5},padding:{top:0,right:10,bottom:0,left:12}},labels:[],legend:{show:!0,showForSingleSeries:!1,showForNullSeries:!0,showForZeroSeries:!0,floating:!1,position:"bottom",horizontalAlign:"center",inverseOrder:!1,fontSize:"12px",fontFamily:void 0,fontWeight:400,width:void 0,height:void 0,formatter:void 0,tooltipHoverFormatter:void 0,offsetX:-20,offsetY:0,labels:{colors:void 0,useSeriesColors:!1},markers:{width:12,height:12,strokeWidth:0,fillColors:void 0,strokeColor:"#fff",radius:12,customHTML:void 0,offsetX:0,offsetY:0,onClick:void 0},itemMargin:{horizontal:5,vertical:0},onItemClick:{toggleDataSeries:!0},onItemHover:{highlightDataSeries:!0}},markers:{discrete:[],size:0,colors:void 0,strokeColors:"#fff",strokeWidth:2,strokeOpacity:.9,strokeDashArray:0,fillOpacity:1,shape:"circle",radius:2,offsetX:0,offsetY:0,onClick:void 0,onDblClick:void 0,showNullDataPoints:!0,hover:{size:void 0,sizeOffset:3}},noData:{text:void 0,align:"center",verticalAlign:"middle",offsetX:0,offsetY:0,style:{color:void 0,fontSize:"14px",fontFamily:void 0}},responsive:[],series:void 0,states:{normal:{filter:{type:"none",value:0}},hover:{filter:{type:"lighten",value:.15}},active:{allowMultipleDataPointsSelection:!1,filter:{type:"darken",value:.65}}},title:{text:void 0,align:"left",margin:5,offsetX:0,offsetY:0,floating:!1,style:{fontSize:"14px",fontWeight:900,fontFamily:void 0,color:void 0}},subtitle:{text:void 0,align:"left",margin:5,offsetX:0,offsetY:30,floating:!1,style:{fontSize:"12px",fontWeight:400,fontFamily:void 0,color:void 0}},stroke:{show:!0,curve:"smooth",lineCap:"butt",width:2,colors:void 0,dashArray:0},tooltip:{enabled:!0,enabledOnSeries:void 0,shared:!0,followCursor:!1,intersect:!1,inverseOrder:!1,custom:void 0,fillSeriesColor:!1,theme:"light",style:{fontSize:"12px",fontFamily:void 0},onDatasetHover:{highlightDataSeries:!1},x:{show:!0,format:"dd MMM",formatter:void 0},y:{formatter:void 0,title:{formatter:function(t){return t}}},z:{formatter:void 0,title:"Size: "},marker:{show:!0,fillColors:void 0},items:{display:"flex"},fixed:{enabled:!1,position:"topRight",offsetX:0,offsetY:0}},xaxis:{type:"category",categories:[],convertedCatToNumeric:!1,offsetX:0,offsetY:0,labels:{show:!0,rotate:-25,rotateAlways:!1,hideOverlappingLabels:!0,trim:!1,minHeight:void 0,maxHeight:120,showDuplicates:!0,style:{colors:[],fontSize:"12px",fontWeight:400,fontFamily:void 0,cssClass:""},offsetX:0,offsetY:0,format:void 0,formatter:void 0,datetimeUTC:!0,datetimeFormatter:{year:"yyyy",month:"MMM 'yy",day:"dd MMM",hour:"HH:mm",minute:"HH:mm:ss"}},axisBorder:{show:!0,color:"#e0e0e0",width:"100%",height:1,offsetX:0,offsetY:0},axisTicks:{show:!0,color:"#e0e0e0",height:6,offsetX:0,offsetY:0},tickAmount:void 0,tickPlacement:"on",min:void 0,max:void 0,range:void 0,floating:!1,position:"bottom",title:{text:void 0,offsetX:0,offsetY:0,style:{color:void 0,fontSize:"12px",fontWeight:900,fontFamily:void 0,cssClass:""}},crosshairs:{show:!0,width:1,position:"back",opacity:.9,stroke:{color:"#b6b6b6",width:1,dashArray:3},fill:{type:"solid",color:"#B1B9C4",gradient:{colorFrom:"#D8E3F0",colorTo:"#BED1E6",stops:[0,100],opacityFrom:.4,opacityTo:.5}},dropShadow:{enabled:!1,left:0,top:0,blur:1,opacity:.4}},tooltip:{enabled:!0,offsetY:0,formatter:void 0,style:{fontSize:"12px",fontFamily:void 0}}},yaxis:this.yAxis,theme:{mode:"light",palette:"palette1",monochrome:{enabled:!1,color:"#008FFB",shadeTo:"light",shadeIntensity:.65}}}}}]),t}(),E=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.graphics=new x(this.ctx),this.w.globals.isBarHorizontal&&(this.invertAxis=!0),this.helpers=new b(this),this.xAxisAnnotations=new y(this),this.yAxisAnnotations=new w(this),this.pointsAnnotations=new k(this),this.w.globals.isBarHorizontal&&this.w.config.yaxis[0].reversed&&(this.inversedReversedAxis=!0),this.xDivision=this.w.globals.gridWidth/this.w.globals.dataPoints}return s(t,[{key:"drawAxesAnnotations",value:function(){var t=this.w;if(t.globals.axisCharts){for(var e=this.yAxisAnnotations.drawYAxisAnnotations(),n=this.xAxisAnnotations.drawXAxisAnnotations(),i=this.pointsAnnotations.drawPointAnnotations(),r=t.config.chart.animations.enabled,a=[e,n,i],o=[n.node,e.node,i.node],s=0;s<3;s++)t.globals.dom.elGraphical.add(a[s]),!r||t.globals.resized||t.globals.dataChanged||"scatter"!==t.config.chart.type&&"bubble"!==t.config.chart.type&&t.globals.dataPoints>1&&o[s].classList.add("apexcharts-element-hidden"),t.globals.delayedElements.push({el:o[s],index:0});this.helpers.annotationsBackground()}}},{key:"drawShapeAnnos",value:function(){var t=this;this.w.config.annotations.shapes.map((function(e,n){t.addShape(e,n)}))}},{key:"drawImageAnnos",value:function(){var t=this;this.w.config.annotations.images.map((function(e,n){t.addImage(e,n)}))}},{key:"drawTextAnnos",value:function(){var t=this;this.w.config.annotations.texts.map((function(e,n){t.addText(e,n)}))}},{key:"addXaxisAnnotation",value:function(t,e,n){this.xAxisAnnotations.addXaxisAnnotation(t,e,n)}},{key:"addYaxisAnnotation",value:function(t,e,n){this.yAxisAnnotations.addYaxisAnnotation(t,e,n)}},{key:"addPointAnnotation",value:function(t,e,n){this.pointsAnnotations.addPointAnnotation(t,e,n)}},{key:"addText",value:function(t,e){var n=t.x,i=t.y,r=t.text,a=t.textAnchor,o=t.foreColor,s=t.fontSize,l=t.fontFamily,c=t.fontWeight,u=t.cssClass,h=t.backgroundColor,f=t.borderWidth,d=t.strokeDashArray,p=t.borderRadius,g=t.borderColor,m=t.paddingLeft,v=void 0===m?4:m,x=t.paddingRight,b=void 0===x?4:x,y=t.paddingBottom,w=void 0===y?2:y,k=t.paddingTop,S=void 0===k?2:k,C=this.w,A=this.graphics.drawText({x:n,y:i,text:r,textAnchor:a||"start",fontSize:s||"12px",fontWeight:c||"regular",fontFamily:l||C.config.chart.fontFamily,foreColor:o||C.config.chart.foreColor,cssClass:u});C.globals.dom.elAnnotations.add(A);var E=A.bbox();if(t.draggable&&this.helpers.makeAnnotationDraggable(A,"texts",e),r){var P=this.graphics.drawRect(E.x-v,E.y-S,E.width+v+b,E.height+w+S,p,h||"transparent",1,f,g,d);C.globals.dom.elAnnotations.node.insertBefore(P.node,A.node)}}},{key:"addShape",value:function(t,e){var n={type:t.type,x:t.x||0,y:t.y||0,width:t.width||"100%",height:t.height||50,circleRadius:t.radius||25,backgroundColor:t.backgroundColor||"#fff",opacity:t.opacity||1,borderWidth:t.borderWidth||0,borderRadius:t.borderRadius||4,borderColor:t.borderColor||"#c2c2c2"},i=this.w;String(n.width).indexOf("%")>-1&&(n.width=parseInt(n.width,10)*parseInt(i.globals.svgWidth,10)/100);var r=null;r="circle"===n.type?this.graphics.drawCircle(n.circleRadius,{fill:n.backgroundColor,stroke:n.borderColor,"stroke-width":n.borderWidth,opacity:n.opacity,cx:n.x,cy:n.y}):this.graphics.drawRect(n.x,n.y,n.width,n.height,n.borderRadius,n.backgroundColor,n.opacity,n.borderWidth,n.borderColor),t.draggable&&(this.helpers.makeAnnotationDraggable(r,"shapes",e),r.node.classList.add("apexcharts-resizable-element")),i.globals.dom.elAnnotations.add(r)}},{key:"addImage",value:function(t,e){var n=this.w,i=t.path,r=t.x,a=void 0===r?0:r,o=t.y,s=void 0===o?0:o,l=t.width,c=void 0===l?20:l,u=t.height,h=void 0===u?20:u,f=t.appendTo,d=void 0===f?n.globals.dom.elAnnotations.node:f,p=n.globals.dom.Paper.image(i);p.size(c,h).move(a,s),d.appendChild(p.node),t.draggable&&(this.helpers.makeAnnotationDraggable(p,"images",e),p.node.classList.add("apexcharts-resizable-element"))}},{key:"addXaxisAnnotationExternal",value:function(t,e,n){return this.addAnnotationExternal({params:t,pushToMemory:e,context:n,type:"xaxis",contextMethod:n.addXaxisAnnotation}),n}},{key:"addYaxisAnnotationExternal",value:function(t,e,n){return this.addAnnotationExternal({params:t,pushToMemory:e,context:n,type:"yaxis",contextMethod:n.addYaxisAnnotation}),n}},{key:"addPointAnnotationExternal",value:function(t,e,n){return void 0===this.invertAxis&&(this.invertAxis=n.w.globals.isBarHorizontal),this.addAnnotationExternal({params:t,pushToMemory:e,context:n,type:"point",contextMethod:n.addPointAnnotation}),n}},{key:"addAnnotationExternal",value:function(t){var e=t.params,n=t.pushToMemory,i=t.context,r=t.type,a=t.contextMethod,o=i,s=o.w,l=s.globals.dom.baseEl.querySelector(".apexcharts-".concat(r,"-annotations")),c=l.childNodes.length+1,u=new A,h=Object.assign({},"xaxis"===r?u.xAxisAnnotation:"yaxis"===r?u.yAxisAnnotation:u.pointAnnotation),f=g.extend(h,e);switch(r){case"xaxis":this.addXaxisAnnotation(f,l,c);break;case"yaxis":this.addYaxisAnnotation(f,l,c);break;case"point":this.addPointAnnotation(f,l,c)}var d=s.globals.dom.baseEl.querySelector(".apexcharts-".concat(r,"-annotations .apexcharts-").concat(r,"-annotation-label[rel='").concat(c,"']")),p=this.helpers.addBackgroundToAnno(d,f);return p&&l.insertBefore(p.node,d),n&&s.globals.memory.methodsToExec.push({context:o,id:f.id?f.id:g.randomId(),method:a,label:"addAnnotation",params:e}),i}},{key:"clearAnnotations",value:function(t){var e=t.w,n=e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations");e.globals.memory.methodsToExec.map((function(t,n){"addText"!==t.label&&"addAnnotation"!==t.label||e.globals.memory.methodsToExec.splice(n,1)})),n=g.listToArray(n),Array.prototype.forEach.call(n,(function(t){for(;t.firstChild;)t.removeChild(t.firstChild)}))}},{key:"removeAnnotation",value:function(t,e){var n=t.w,i=n.globals.dom.baseEl.querySelectorAll(".".concat(e));i&&(n.globals.memory.methodsToExec.map((function(t,i){t.id===e&&n.globals.memory.methodsToExec.splice(i,1)})),Array.prototype.forEach.call(i,(function(t){t.parentElement.removeChild(t)})))}}]),t}(),P=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.months31=[1,3,5,7,8,10,12],this.months30=[2,4,6,9,11],this.daysCntOfYear=[0,31,59,90,120,151,181,212,243,273,304,334]}return s(t,[{key:"isValidDate",value:function(t){return!isNaN(this.parseDate(t))}},{key:"getTimeStamp",value:function(t){return Date.parse(t)?this.w.config.xaxis.labels.datetimeUTC?new Date(new Date(t).toISOString().substr(0,25)).getTime():new Date(t).getTime():t}},{key:"getDate",value:function(t){return this.w.config.xaxis.labels.datetimeUTC?new Date(new Date(t).toUTCString()):new Date(t)}},{key:"parseDate",value:function(t){var e=Date.parse(t);if(!isNaN(e))return this.getTimeStamp(t);var n=Date.parse(t.replace(/-/g,"/").replace(/[a-z]+/gi," "));return this.getTimeStamp(n)}},{key:"formatDate",value:function(t,e){var n=this.w.globals.locale,i=this.w.config.xaxis.labels.datetimeUTC,r=["\0"].concat(p(n.months)),a=[""].concat(p(n.shortMonths)),o=[""].concat(p(n.days)),s=[""].concat(p(n.shortDays));function l(t,e){var n=t+"";for(e=e||2;n.length<e;)n="0"+n;return n}var c=i?t.getUTCFullYear():t.getFullYear();e=(e=(e=e.replace(/(^|[^\\])yyyy+/g,"$1"+c)).replace(/(^|[^\\])yy/g,"$1"+c.toString().substr(2,2))).replace(/(^|[^\\])y/g,"$1"+c);var u=(i?t.getUTCMonth():t.getMonth())+1;e=(e=(e=(e=e.replace(/(^|[^\\])MMMM+/g,"$1"+r[0])).replace(/(^|[^\\])MMM/g,"$1"+a[0])).replace(/(^|[^\\])MM/g,"$1"+l(u))).replace(/(^|[^\\])M/g,"$1"+u);var h=i?t.getUTCDate():t.getDate();e=(e=(e=(e=e.replace(/(^|[^\\])dddd+/g,"$1"+o[0])).replace(/(^|[^\\])ddd/g,"$1"+s[0])).replace(/(^|[^\\])dd/g,"$1"+l(h))).replace(/(^|[^\\])d/g,"$1"+h);var f=i?t.getUTCHours():t.getHours(),d=f>12?f-12:0===f?12:f;e=(e=(e=(e=e.replace(/(^|[^\\])HH+/g,"$1"+l(f))).replace(/(^|[^\\])H/g,"$1"+f)).replace(/(^|[^\\])hh+/g,"$1"+l(d))).replace(/(^|[^\\])h/g,"$1"+d);var g=i?t.getUTCMinutes():t.getMinutes();e=(e=e.replace(/(^|[^\\])mm+/g,"$1"+l(g))).replace(/(^|[^\\])m/g,"$1"+g);var m=i?t.getUTCSeconds():t.getSeconds();e=(e=e.replace(/(^|[^\\])ss+/g,"$1"+l(m))).replace(/(^|[^\\])s/g,"$1"+m);var v=i?t.getUTCMilliseconds():t.getMilliseconds();e=e.replace(/(^|[^\\])fff+/g,"$1"+l(v,3)),v=Math.round(v/10),e=e.replace(/(^|[^\\])ff/g,"$1"+l(v)),v=Math.round(v/10);var x=f<12?"AM":"PM";e=(e=(e=e.replace(/(^|[^\\])f/g,"$1"+v)).replace(/(^|[^\\])TT+/g,"$1"+x)).replace(/(^|[^\\])T/g,"$1"+x.charAt(0));var b=x.toLowerCase();e=(e=e.replace(/(^|[^\\])tt+/g,"$1"+b)).replace(/(^|[^\\])t/g,"$1"+b.charAt(0));var y=-t.getTimezoneOffset(),w=i||!y?"Z":y>0?"+":"-";if(!i){var k=(y=Math.abs(y))%60;w+=l(Math.floor(y/60))+":"+l(k)}e=e.replace(/(^|[^\\])K/g,"$1"+w);var S=(i?t.getUTCDay():t.getDay())+1;return(e=(e=(e=(e=e.replace(new RegExp(o[0],"g"),o[S])).replace(new RegExp(s[0],"g"),s[S])).replace(new RegExp(r[0],"g"),r[u])).replace(new RegExp(a[0],"g"),a[u])).replace(/\\(.)/g,"$1")}},{key:"getTimeUnitsfromTimestamp",value:function(t,e,n){var i=this.w;void 0!==i.config.xaxis.min&&(t=i.config.xaxis.min),void 0!==i.config.xaxis.max&&(e=i.config.xaxis.max);var r=this.getDate(t),a=this.getDate(e),o=this.formatDate(r,"yyyy MM dd HH mm").split(" "),s=this.formatDate(a,"yyyy MM dd HH mm").split(" ");return{minMinute:parseInt(o[4],10),maxMinute:parseInt(s[4],10),minHour:parseInt(o[3],10),maxHour:parseInt(s[3],10),minDate:parseInt(o[2],10),maxDate:parseInt(s[2],10),minMonth:parseInt(o[1],10)-1,maxMonth:parseInt(s[1],10)-1,minYear:parseInt(o[0],10),maxYear:parseInt(s[0],10)}}},{key:"isLeapYear",value:function(t){return t%4==0&&t%100!=0||t%400==0}},{key:"calculcateLastDaysOfMonth",value:function(t,e,n){return this.determineDaysOfMonths(t,e)-n}},{key:"determineDaysOfYear",value:function(t){var e=365;return this.isLeapYear(t)&&(e=366),e}},{key:"determineRemainingDaysOfYear",value:function(t,e,n){var i=this.daysCntOfYear[e]+n;return e>1&&this.isLeapYear()&&i++,i}},{key:"determineDaysOfMonths",value:function(t,e){var n=30;switch(t=g.monthMod(t),!0){case this.months30.indexOf(t)>-1:2===t&&(n=this.isLeapYear(e)?29:28);break;case this.months31.indexOf(t)>-1:default:n=31}return n}}]),t}(),T=function(){function t(e){a(this,t),this.opts=e}return s(t,[{key:"line",value:function(){return{chart:{animations:{easing:"swing"}},dataLabels:{enabled:!1},stroke:{width:5,curve:"straight"},markers:{size:0,hover:{sizeOffset:6}},xaxis:{crosshairs:{width:1}}}}},{key:"sparkline",value:function(t){return this.opts.yaxis[0].show=!1,this.opts.yaxis[0].title.text="",this.opts.yaxis[0].axisBorder.show=!1,this.opts.yaxis[0].axisTicks.show=!1,this.opts.yaxis[0].floating=!0,g.extend(t,{grid:{show:!1,padding:{left:0,right:0,top:0,bottom:0}},legend:{show:!1},xaxis:{labels:{show:!1},tooltip:{enabled:!1},axisBorder:{show:!1},axisTicks:{show:!1}},chart:{toolbar:{show:!1},zoom:{enabled:!1}},dataLabels:{enabled:!1}})}},{key:"bar",value:function(){return{chart:{stacked:!1,animations:{easing:"swing"}},plotOptions:{bar:{dataLabels:{position:"center"}}},dataLabels:{style:{colors:["#fff"]},background:{enabled:!1}},stroke:{width:0},fill:{opacity:.85},legend:{markers:{shape:"square",radius:2,size:8}},tooltip:{shared:!1},xaxis:{tooltip:{enabled:!1},tickPlacement:"between",crosshairs:{width:"barWidth",position:"back",fill:{type:"gradient"},dropShadow:{enabled:!1},stroke:{width:0}}}}}},{key:"candlestick",value:function(){return{stroke:{width:1,colors:["#333"]},dataLabels:{enabled:!1},tooltip:{shared:!0,custom:function(t){var e=t.seriesIndex,n=t.dataPointIndex,i=t.w;return'<div class="apexcharts-tooltip-candlestick"><div>Open: <span class="value">'+i.globals.seriesCandleO[e][n]+'</span></div><div>High: <span class="value">'+i.globals.seriesCandleH[e][n]+'</span></div><div>Low: <span class="value">'+i.globals.seriesCandleL[e][n]+'</span></div><div>Close: <span class="value">'+i.globals.seriesCandleC[e][n]+"</span></div></div>"}},states:{active:{filter:{type:"none"}}},xaxis:{crosshairs:{width:1}}}}},{key:"rangeBar",value:function(){return{stroke:{width:0},plotOptions:{bar:{dataLabels:{position:"center"}}},dataLabels:{enabled:!1,formatter:function(t,e){e.ctx;var n=e.seriesIndex,i=e.dataPointIndex,r=e.w,a=r.globals.seriesRangeStart[n][i];return r.globals.seriesRangeEnd[n][i]-a},background:{enabled:!1},style:{colors:["#fff"]}},tooltip:{shared:!1,followCursor:!0,custom:function(t){var e=t.ctx,n=t.seriesIndex,i=t.dataPointIndex,r=t.y1,a=t.y2,o=t.w,s=o.globals.seriesRangeStart[n][i],l=o.globals.seriesRangeEnd[n][i],c=o.globals.labels[i],u=o.config.series[n].name,h=o.config.tooltip.y.formatter,f=o.config.tooltip.y.title.formatter;"function"==typeof f&&(u=f(u)),r&&a&&(s=r,l=a,o.config.series[n].data[i].x&&(c=o.config.series[n].data[i].x+":"),"function"==typeof h&&(c=h(c)));var d="",p="",g=o.globals.colors[n];if(void 0===o.config.tooltip.x.formatter)if("datetime"===o.config.xaxis.type){var m=new P(e);d=m.formatDate(m.getDate(s),o.config.tooltip.x.format),p=m.formatDate(m.getDate(l),o.config.tooltip.x.format)}else d=s,p=l;else d=o.config.tooltip.x.formatter(s),p=o.config.tooltip.x.formatter(l);return'<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: '+g+'">'+(u||"")+'</span></div><div> <span class="category">'+c+' </span> <span class="value start-value">'+d+'</span> <span class="separator">-</span> <span class="value end-value">'+p+"</span></div></div>"}},xaxis:{tickPlacement:"between",tooltip:{enabled:!1},crosshairs:{stroke:{width:0}}}}}},{key:"area",value:function(){return{stroke:{width:4},fill:{type:"gradient",gradient:{inverseColors:!1,shade:"light",type:"vertical",opacityFrom:.65,opacityTo:.5,stops:[0,100,100]}},markers:{size:0,hover:{sizeOffset:6}},tooltip:{followCursor:!1}}}},{key:"brush",value:function(t){return g.extend(t,{chart:{toolbar:{autoSelected:"selection",show:!1},zoom:{enabled:!1}},dataLabels:{enabled:!1},stroke:{width:1},tooltip:{enabled:!1},xaxis:{tooltip:{enabled:!1}}})}},{key:"stacked100",value:function(t){t.dataLabels=t.dataLabels||{},t.dataLabels.formatter=t.dataLabels.formatter||void 0;var e=t.dataLabels.formatter;return t.yaxis.forEach((function(e,n){t.yaxis[n].min=0,t.yaxis[n].max=100})),"bar"===t.chart.type&&(t.dataLabels.formatter=e||function(t){return"number"==typeof t&&t?t.toFixed(0)+"%":t}),t}},{key:"convertCatToNumeric",value:function(t){return t.xaxis.convertedCatToNumeric=!0,t}},{key:"convertCatToNumericXaxis",value:function(t,e,n){t.xaxis.type="numeric",t.xaxis.labels=t.xaxis.labels||{},t.xaxis.labels.formatter=t.xaxis.labels.formatter||function(t){return g.isNumber(t)?Math.floor(t):t};var i=t.xaxis.labels.formatter,r=t.xaxis.categories&&t.xaxis.categories.length?t.xaxis.categories:t.labels;return n&&n.length&&(r=n.map((function(t){return t.toString()}))),r&&r.length&&(t.xaxis.labels.formatter=function(t){return g.isNumber(t)?i(r[Math.floor(t)-1]):i(t)}),t.xaxis.categories=[],t.labels=[],t.xaxis.tickAmount=t.xaxis.tickAmount||"dataPoints",t}},{key:"bubble",value:function(){return{dataLabels:{style:{colors:["#fff"]}},tooltip:{shared:!1,intersect:!0},xaxis:{crosshairs:{width:0}},fill:{type:"solid",gradient:{shade:"light",inverse:!0,shadeIntensity:.55,opacityFrom:.4,opacityTo:.8}}}}},{key:"scatter",value:function(){return{dataLabels:{enabled:!1},tooltip:{shared:!1,intersect:!0},markers:{size:6,strokeWidth:1,hover:{sizeOffset:2}}}}},{key:"heatmap",value:function(){return{chart:{stacked:!1},fill:{opacity:1},dataLabels:{style:{colors:["#fff"]}},stroke:{colors:["#fff"]},tooltip:{followCursor:!0,marker:{show:!1},x:{show:!1}},legend:{position:"top",markers:{shape:"square",size:10,offsetY:2}},grid:{padding:{right:20}}}}},{key:"pie",value:function(){return{chart:{toolbar:{show:!1}},plotOptions:{pie:{donut:{labels:{show:!1}}}},dataLabels:{formatter:function(t){return t.toFixed(1)+"%"},style:{colors:["#fff"]},dropShadow:{enabled:!0}},stroke:{colors:["#fff"]},fill:{opacity:1,gradient:{shade:"dark",shadeIntensity:.35,inverseColors:!1,stops:[0,100,100]}},tooltip:{theme:"dark",fillSeriesColor:!0},legend:{position:"right"}}}},{key:"donut",value:function(){return{chart:{toolbar:{show:!1}},dataLabels:{formatter:function(t){return t.toFixed(1)+"%"},style:{colors:["#fff"]},dropShadow:{enabled:!0}},stroke:{colors:["#fff"]},fill:{opacity:1,gradient:{shade:"dark",shadeIntensity:.4,inverseColors:!1,type:"vertical",opacityFrom:1,opacityTo:1,stops:[70,98,100]}},tooltip:{theme:"dark",fillSeriesColor:!0},legend:{position:"right"}}}},{key:"radar",value:function(){return this.opts.yaxis[0].labels.offsetY=this.opts.yaxis[0].labels.offsetY?this.opts.yaxis[0].labels.offsetY:6,{dataLabels:{enabled:!1,style:{fontSize:"11px"}},stroke:{width:2},markers:{size:3,strokeWidth:1,strokeOpacity:1},fill:{opacity:.2},tooltip:{shared:!1,intersect:!0,followCursor:!0},grid:{show:!1},xaxis:{labels:{formatter:function(t){return t},style:{colors:["#a8a8a8"],fontSize:"11px"}},tooltip:{enabled:!1},crosshairs:{show:!1}}}}},{key:"radialBar",value:function(){return{chart:{animations:{dynamicAnimation:{enabled:!0,speed:800}},toolbar:{show:!1}},fill:{gradient:{shade:"dark",shadeIntensity:.4,inverseColors:!1,type:"diagonal2",opacityFrom:1,opacityTo:1,stops:[70,98,100]}},legend:{show:!1,position:"right"},tooltip:{enabled:!1,fillSeriesColor:!0}}}}]),t}(),O=function(){function t(e){a(this,t),this.opts=e}return s(t,[{key:"init",value:function(t){var e=t.responsiveOverride,n=this.opts,i=new A,a=new T(n);this.chartType=n.chart.type,"histogram"===this.chartType&&(n.chart.type="bar",n=g.extend({plotOptions:{bar:{columnWidth:"99.99%"}}},n)),n=this.extendYAxis(n),n=this.extendAnnotations(n);var o=i.init(),s={};if(n&&"object"===r(n)){var l={};l=-1!==["line","area","bar","candlestick","rangeBar","histogram","bubble","scatter","heatmap","pie","donut","radar","radialBar"].indexOf(n.chart.type)?a[n.chart.type]():a.line(),n.chart.brush&&n.chart.brush.enabled&&(l=a.brush(l)),n.chart.stacked&&"100%"===n.chart.stackType&&(n=a.stacked100(n)),this.checkForDarkTheme(window.Apex),this.checkForDarkTheme(n),n.xaxis=n.xaxis||window.Apex.xaxis||{},e||(n.xaxis.convertedCatToNumeric=!1),((n=this.checkForCatToNumericXAxis(this.chartType,l,n)).chart.sparkline&&n.chart.sparkline.enabled||window.Apex.chart&&window.Apex.chart.sparkline&&window.Apex.chart.sparkline.enabled)&&(l=a.sparkline(l)),s=g.extend(o,l)}var c=g.extend(s,window.Apex);return o=g.extend(c,n),this.handleUserInputErrors(o)}},{key:"checkForCatToNumericXAxis",value:function(t,e,n){var i=new T(n),r="bar"===t&&n.plotOptions&&n.plotOptions.bar&&n.plotOptions.bar.horizontal,a="pie"===t||"donut"===t||"radar"===t||"radialBar"===t||"heatmap"===t,o="datetime"!==n.xaxis.type&&"numeric"!==n.xaxis.type,s=n.xaxis.tickPlacement?n.xaxis.tickPlacement:e.xaxis&&e.xaxis.tickPlacement;return r||a||!o||"between"===s||(n=i.convertCatToNumeric(n)),n}},{key:"extendYAxis",value:function(t){var e=new A;(void 0===t.yaxis||!t.yaxis||Array.isArray(t.yaxis)&&0===t.yaxis.length)&&(t.yaxis={}),t.yaxis.constructor!==Array&&window.Apex.yaxis&&window.Apex.yaxis.constructor!==Array&&(t.yaxis=g.extend(t.yaxis,window.Apex.yaxis)),t.yaxis.constructor!==Array?t.yaxis=[g.extend(e.yAxis,t.yaxis)]:t.yaxis=g.extendArray(t.yaxis,e.yAxis);var n=!1;return t.yaxis.forEach((function(t){t.logarithmic&&(n=!0)})),n&&t.series.length!==t.yaxis.length&&t.series.length&&(t.yaxis=t.series.map((function(n,i){if(n.name||(t.series[i].name="series-".concat(i+1)),t.yaxis[i])return t.yaxis[i].seriesName=t.series[i].name,t.yaxis[i];var r=g.extend(e.yAxis,t.yaxis[0]);return r.show=!1,r}))),n&&t.series.length>1&&t.series.length!==t.yaxis.length&&console.warn("A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both."),t}},{key:"extendAnnotations",value:function(t){return void 0===t.annotations&&(t.annotations={},t.annotations.yaxis=[],t.annotations.xaxis=[],t.annotations.points=[]),t=this.extendYAxisAnnotations(t),t=this.extendXAxisAnnotations(t),this.extendPointAnnotations(t)}},{key:"extendYAxisAnnotations",value:function(t){var e=new A;return t.annotations.yaxis=g.extendArray(void 0!==t.annotations.yaxis?t.annotations.yaxis:[],e.yAxisAnnotation),t}},{key:"extendXAxisAnnotations",value:function(t){var e=new A;return t.annotations.xaxis=g.extendArray(void 0!==t.annotations.xaxis?t.annotations.xaxis:[],e.xAxisAnnotation),t}},{key:"extendPointAnnotations",value:function(t){var e=new A;return t.annotations.points=g.extendArray(void 0!==t.annotations.points?t.annotations.points:[],e.pointAnnotation),t}},{key:"checkForDarkTheme",value:function(t){t.theme&&"dark"===t.theme.mode&&(t.tooltip||(t.tooltip={}),"light"!==t.tooltip.theme&&(t.tooltip.theme="dark"),t.chart.foreColor||(t.chart.foreColor="#f6f7f8"),t.theme.palette||(t.theme.palette="palette4"))}},{key:"handleUserInputErrors",value:function(t){var e=t;if(e.tooltip.shared&&e.tooltip.intersect)throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");if(("bar"===e.chart.type||"rangeBar"===e.chart.type)&&e.plotOptions.bar.horizontal){if(e.yaxis.length>1)throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");e.yaxis[0].reversed&&(e.yaxis[0].opposite=!0),e.xaxis.tooltip.enabled=!1,e.yaxis[0].tooltip.enabled=!1,e.chart.zoom.enabled=!1}return"bar"!==e.chart.type&&"rangeBar"!==e.chart.type||e.tooltip.shared&&("barWidth"===e.xaxis.crosshairs.width&&e.series.length>1&&(console.warn('crosshairs.width = "barWidth" is only supported in single series, not in a multi-series barChart.'),e.xaxis.crosshairs.width="tickWidth"),e.plotOptions.bar.horizontal&&(e.states.hover.type="none",e.tooltip.shared=!1),e.tooltip.followCursor||(console.warn("followCursor option in shared columns cannot be turned off. Please set %ctooltip.followCursor: true","color: blue;"),e.tooltip.followCursor=!0)),"candlestick"===e.chart.type&&e.yaxis[0].reversed&&(console.warn("Reversed y-axis in candlestick chart is not supported."),e.yaxis[0].reversed=!1),e.chart.group&&0===e.yaxis[0].labels.minWidth&&console.warn("It looks like you have multiple charts in synchronization. You must provide yaxis.labels.minWidth which must be EQUAL for all grouped charts to prevent incorrect behaviour."),Array.isArray(e.stroke.width)&&"line"!==e.chart.type&&"area"!==e.chart.type&&(console.warn("stroke.width option accepts array only for line and area charts. Reverted back to Number"),e.stroke.width=e.stroke.width[0]),e}}]),t}(),L=function(){function t(){a(this,t)}return s(t,[{key:"initGlobalVars",value:function(t){t.series=[],t.seriesCandleO=[],t.seriesCandleH=[],t.seriesCandleL=[],t.seriesCandleC=[],t.seriesRangeStart=[],t.seriesRangeEnd=[],t.seriesRangeBarTimeline=[],t.seriesPercent=[],t.seriesX=[],t.seriesZ=[],t.seriesNames=[],t.seriesTotals=[],t.seriesLog=[],t.stackedSeriesTotals=[],t.seriesXvalues=[],t.seriesYvalues=[],t.labels=[],t.categoryLabels=[],t.timescaleLabels=[],t.noLabelsProvided=!1,t.resizeTimer=null,t.selectionResizeTimer=null,t.delayedElements=[],t.pointsArray=[],t.dataLabelsRects=[],t.isXNumeric=!1,t.xaxisLabelsCount=0,t.skipLastTimelinelabel=!1,t.skipFirstTimelinelabel=!1,t.x2SpaceAvailable=0,t.isDataXYZ=!1,t.isMultiLineX=!1,t.isMultipleYAxis=!1,t.maxY=-Number.MAX_VALUE,t.minY=Number.MIN_VALUE,t.minYArr=[],t.maxYArr=[],t.maxX=-Number.MAX_VALUE,t.minX=Number.MAX_VALUE,t.initialMaxX=-Number.MAX_VALUE,t.initialMinX=Number.MAX_VALUE,t.maxDate=0,t.minDate=Number.MAX_VALUE,t.minZ=Number.MAX_VALUE,t.maxZ=-Number.MAX_VALUE,t.minXDiff=Number.MAX_VALUE,t.yAxisScale=[],t.xAxisScale=null,t.xAxisTicksPositions=[],t.yLabelsCoords=[],t.yTitleCoords=[],t.barPadForNumericAxis=0,t.padHorizontal=0,t.xRange=0,t.yRange=[],t.zRange=0,t.dataPoints=0,t.xTickAmount=0}},{key:"globalVars",value:function(t){return{chartID:null,cuid:null,events:{beforeMount:[],mounted:[],updated:[],clicked:[],selection:[],dataPointSelection:[],zoomed:[],scrolled:[]},colors:[],clientX:null,clientY:null,fill:{colors:[]},stroke:{colors:[]},dataLabels:{style:{colors:[]}},radarPolygons:{fill:{colors:[]}},markers:{colors:[],size:t.markers.size,largestSize:0},animationEnded:!1,isTouchDevice:"ontouchstart"in window||navigator.msMaxTouchPoints,isDirty:!1,isExecCalled:!1,initialConfig:null,lastXAxis:[],lastYAxis:[],columnSeries:null,labels:[],timescaleLabels:[],noLabelsProvided:!1,allSeriesCollapsed:!1,collapsedSeries:[],collapsedSeriesIndices:[],ancillaryCollapsedSeries:[],ancillaryCollapsedSeriesIndices:[],risingSeries:[],dataFormatXNumeric:!1,capturedSeriesIndex:-1,capturedDataPointIndex:-1,selectedDataPoints:[],goldenPadding:35,invalidLogScale:!1,ignoreYAxisIndexes:[],yAxisSameScaleIndices:[],maxValsInArrayIndex:0,radialSize:0,zoomEnabled:"zoom"===t.chart.toolbar.autoSelected&&t.chart.toolbar.tools.zoom&&t.chart.zoom.enabled,panEnabled:"pan"===t.chart.toolbar.autoSelected&&t.chart.toolbar.tools.pan,selectionEnabled:"selection"===t.chart.toolbar.autoSelected&&t.chart.toolbar.tools.selection,yaxis:null,mousedown:!1,lastClientPosition:{},visibleXRange:void 0,yValueDecimal:0,total:0,SVGNS:"http://www.w3.org/2000/svg",svgWidth:0,svgHeight:0,noData:!1,locale:{},dom:{},memory:{methodsToExec:[]},shouldAnimate:!0,skipLastTimelinelabel:!1,skipFirstTimelinelabel:!1,delayedElements:[],axisCharts:!0,isDataXYZ:!1,resized:!1,resizeTimer:null,comboCharts:!1,dataChanged:!1,previousPaths:[],allSeriesHasEqualX:!0,pointsArray:[],dataLabelsRects:[],lastDrawnDataLabelsIndexes:[],x2SpaceAvailable:0,hasNullValues:!1,easing:null,zoomed:!1,gridWidth:0,gridHeight:0,rotateXLabels:!1,defaultLabels:!1,xLabelFormatter:void 0,yLabelFormatters:[],xaxisTooltipFormatter:void 0,ttKeyFormatter:void 0,ttVal:void 0,ttZFormatter:void 0,LINE_HEIGHT_RATIO:1.618,xAxisLabelsHeight:0,yAxisLabelsWidth:0,scaleX:1,scaleY:1,translateX:0,translateY:0,translateYAxisX:[],yAxisWidths:[],translateXAxisY:0,translateXAxisX:0,tooltip:null}}},{key:"init",value:function(t){var e=this.globalVars(t);return this.initGlobalVars(e),e.initialConfig=g.extend({},t),e.initialSeries=JSON.parse(JSON.stringify(e.initialConfig.series)),e.lastXAxis=JSON.parse(JSON.stringify(e.initialConfig.xaxis)),e.lastYAxis=JSON.parse(JSON.stringify(e.initialConfig.yaxis)),e}}]),t}(),M=function(){function t(e){a(this,t),this.opts=e}return s(t,[{key:"init",value:function(){var t=new O(this.opts).init({responsiveOverride:!1});return{config:t,globals:(new L).init(t)}}}]),t}(),_=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"getStackedSeriesTotals",value:function(){var t=this.w,e=[];if(0===t.globals.series.length)return e;for(var n=0;n<t.globals.series[t.globals.maxValsInArrayIndex].length;n++){for(var i=0,r=0;r<t.globals.series.length;r++)void 0!==t.globals.series[r][n]&&(i+=t.globals.series[r][n]);e.push(i)}return t.globals.stackedSeriesTotals=e,e}},{key:"getSeriesTotalByIndex",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return null===t?this.w.config.series.reduce((function(t,e){return t+e}),0):this.w.globals.series[t].reduce((function(t,e){return t+e}),0)}},{key:"isSeriesNull",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return 0===(null===t?this.w.config.series.filter((function(t){return null!==t})):this.w.globals.series[t].filter((function(t){return null!==t}))).length}},{key:"seriesHaveSameValues",value:function(t){return this.w.globals.series[t].every((function(t,e,n){return t===n[0]}))}},{key:"getCategoryLabels",value:function(t){var e=this.w,n=t.slice();return e.config.xaxis.convertedCatToNumeric&&(n=t.map((function(t){return e.config.xaxis.labels.formatter(t-e.globals.minX+1)}))),n}},{key:"getLargestSeries",value:function(){var t=this.w;t.globals.maxValsInArrayIndex=t.globals.series.map((function(t){return t.length})).indexOf(Math.max.apply(Math,t.globals.series.map((function(t){return t.length}))))}},{key:"getLargestMarkerSize",value:function(){var t=this.w,e=0;return t.globals.markers.size.forEach((function(t){e=Math.max(e,t)})),t.globals.markers.largestSize=e,e}},{key:"getSeriesTotals",value:function(){var t=this.w;t.globals.seriesTotals=t.globals.series.map((function(t,e){var n=0;if(Array.isArray(t))for(var i=0;i<t.length;i++)n+=t[i];else n+=t;return n}))}},{key:"getSeriesTotalsXRange",value:function(t,e){var n=this.w;return n.globals.series.map((function(i,r){for(var a=0,o=0;o<i.length;o++)n.globals.seriesX[r][o]>t&&n.globals.seriesX[r][o]<e&&(a+=i[o]);return a}))}},{key:"getPercentSeries",value:function(){var t=this.w;t.globals.seriesPercent=t.globals.series.map((function(e,n){var i=[];if(Array.isArray(e))for(var r=0;r<e.length;r++){var a=t.globals.stackedSeriesTotals[r],o=0;a&&(o=100*e[r]/a),i.push(o)}else{var s=100*e/t.globals.seriesTotals.reduce((function(t,e){return t+e}),0);i.push(s)}return i}))}},{key:"getCalculatedRatios",value:function(){var t,e,n,i,r=this.w.globals,a=[],o=0,s=[],l=.1,c=0;if(r.yRange=[],r.isMultipleYAxis)for(var u=0;u<r.minYArr.length;u++)r.yRange.push(Math.abs(r.minYArr[u]-r.maxYArr[u])),s.push(0);else r.yRange.push(Math.abs(r.minY-r.maxY));r.xRange=Math.abs(r.maxX-r.minX),r.zRange=Math.abs(r.maxZ-r.minZ);for(var h=0;h<r.yRange.length;h++)a.push(r.yRange[h]/r.gridHeight);if(e=r.xRange/r.gridWidth,n=Math.abs(r.initialMaxX-r.initialMinX)/r.gridWidth,t=r.yRange/r.gridWidth,i=r.xRange/r.gridHeight,(o=r.zRange/r.gridHeight*16)||(o=1),r.minY!==Number.MIN_VALUE&&0!==Math.abs(r.minY)&&(r.hasNegs=!0),r.isMultipleYAxis){s=[];for(var f=0;f<a.length;f++)s.push(-r.minYArr[f]/a[f])}else s.push(-r.minY/a[0]),r.minY!==Number.MIN_VALUE&&0!==Math.abs(r.minY)&&(l=-r.minY/t,c=r.minX/e);return{yRatio:a,invertedYRatio:t,zRatio:o,xRatio:e,initialXRatio:n,invertedXRatio:i,baseLineInvertedY:l,baseLineY:s,baseLineX:c}}},{key:"getLogSeries",value:function(t){var e=this.w;return e.globals.seriesLog=t.map((function(t,n){return e.config.yaxis[n]&&e.config.yaxis[n].logarithmic?t.map((function(t){return null===t?null:(Math.log(t)-Math.log(e.globals.minYArr[n]))/(Math.log(e.globals.maxYArr[n])-Math.log(e.globals.minYArr[n]))})):t})),e.globals.invalidLogScale?t:e.globals.seriesLog}},{key:"getLogYRatios",value:function(t){var e=this,n=this.w,i=this.w.globals;return i.yLogRatio=t.slice(),i.logYRange=i.yRange.map((function(t,r){if(n.config.yaxis[r]&&e.w.config.yaxis[r].logarithmic){var a,o=-Number.MAX_VALUE,s=Number.MIN_VALUE;return i.seriesLog.forEach((function(t,e){t.forEach((function(t){n.config.yaxis[e]&&n.config.yaxis[e].logarithmic&&(o=Math.max(t,o),s=Math.min(t,s))}))})),a=Math.pow(i.yRange[r],Math.abs(s-o)/i.yRange[r]),i.yLogRatio[r]=a/i.gridHeight,a}})),i.invalidLogScale?t.slice():i.yLogRatio}}],[{key:"checkComboSeries",value:function(t){var e=!1,n=0;return t.length&&void 0!==t[0].type&&(e=!0,t.forEach((function(t){"bar"!==t.type&&"column"!==t.type&&"candlestick"!==t.type||n++}))),{comboBarCount:n,comboCharts:e}}},{key:"extendArrayProps",value:function(t,e){return e.yaxis&&(e=t.extendYAxis(e)),e.annotations&&(e.annotations.yaxis&&(e=t.extendYAxisAnnotations(e)),e.annotations.xaxis&&(e=t.extendXAxisAnnotations(e)),e.annotations.points&&(e=t.extendPointAnnotations(e))),e}}]),t}(),I=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.opts=null,this.seriesIndex=0}return s(t,[{key:"clippedImgArea",value:function(t){var e=this.w,n=e.config,i=parseInt(e.globals.gridWidth,10),r=parseInt(e.globals.gridHeight,10),a=i>r?i:r,o=t.image,s=0,l=0;void 0===t.width&&void 0===t.height?void 0!==n.fill.image.width&&void 0!==n.fill.image.height?(s=n.fill.image.width+1,l=n.fill.image.height):(s=a+1,l=a):(s=t.width,l=t.height);var c=document.createElementNS(e.globals.SVGNS,"pattern");x.setAttrs(c,{id:t.patternID,patternUnits:t.patternUnits?t.patternUnits:"userSpaceOnUse",width:s+"px",height:l+"px"});var u=document.createElementNS(e.globals.SVGNS,"image");c.appendChild(u),u.setAttributeNS(window.SVG.xlink,"href",o),x.setAttrs(u,{x:0,y:0,preserveAspectRatio:"none",width:s+"px",height:l+"px"}),u.style.opacity=t.opacity,e.globals.dom.elDefs.node.appendChild(c)}},{key:"getSeriesIndex",value:function(t){var e=this.w;return("bar"===e.config.chart.type||"rangeBar"===e.config.chart.type)&&e.config.plotOptions.bar.distributed||"heatmap"===e.config.chart.type?this.seriesIndex=t.seriesNumber:this.seriesIndex=t.seriesNumber%e.globals.series.length,this.seriesIndex}},{key:"fillPath",value:function(t){var e=this.w;this.opts=t;var n,i,r,a=this.w.config;this.seriesIndex=this.getSeriesIndex(t);var o=this.getFillColors()[this.seriesIndex];"function"==typeof o&&(o=o({seriesIndex:this.seriesIndex,dataPointIndex:t.dataPointIndex,value:t.value,w:e}));var s=this.getFillType(this.seriesIndex),l=Array.isArray(a.fill.opacity)?a.fill.opacity[this.seriesIndex]:a.fill.opacity,c=o;if(t.color&&(o=t.color),-1===o.indexOf("rgb")?c=g.hexToRgba(o,l):o.indexOf("rgba")>-1&&(l="0."+g.getOpacityFromRGBA(o)),t.opacity&&(l=t.opacity),"pattern"===s&&(i=this.handlePatternFill(i,o,l,c)),"gradient"===s&&(r=this.handleGradientFill(r,o,l,this.seriesIndex)),"image"===s){var u=a.fill.image.src,h=t.patternID?t.patternID:"";this.clippedImgArea({opacity:l,image:Array.isArray(u)?t.seriesNumber<u.length?u[t.seriesNumber]:u[0]:u,width:t.width?t.width:void 0,height:t.height?t.height:void 0,patternUnits:t.patternUnits,patternID:"pattern".concat(e.globals.cuid).concat(t.seriesNumber+1).concat(h)}),n="url(#pattern".concat(e.globals.cuid).concat(t.seriesNumber+1).concat(h,")")}else n="gradient"===s?r:"pattern"===s?i:c;return t.solid&&(n=c),n}},{key:"getFillType",value:function(t){var e=this.w;return Array.isArray(e.config.fill.type)?e.config.fill.type[t]:e.config.fill.type}},{key:"getFillColors",value:function(){var t=this.w,e=t.config,n=this.opts,i=[];return t.globals.comboCharts?"line"===t.config.series[this.seriesIndex].type?t.globals.stroke.colors instanceof Array?i=t.globals.stroke.colors:i.push(t.globals.stroke.colors):t.globals.fill.colors instanceof Array?i=t.globals.fill.colors:i.push(t.globals.fill.colors):"line"===e.chart.type?t.globals.stroke.colors instanceof Array?i=t.globals.stroke.colors:i.push(t.globals.stroke.colors):t.globals.fill.colors instanceof Array?i=t.globals.fill.colors:i.push(t.globals.fill.colors),void 0!==n.fillColors&&(i=[],n.fillColors instanceof Array?i=n.fillColors.slice():i.push(n.fillColors)),i}},{key:"handlePatternFill",value:function(t,e,n,i){var r=this.w.config,a=this.opts,o=new x(this.ctx),s=void 0===r.fill.pattern.strokeWidth?Array.isArray(r.stroke.width)?r.stroke.width[this.seriesIndex]:r.stroke.width:Array.isArray(r.fill.pattern.strokeWidth)?r.fill.pattern.strokeWidth[this.seriesIndex]:r.fill.pattern.strokeWidth,l=e;return r.fill.pattern.style instanceof Array?void 0!==r.fill.pattern.style[a.seriesNumber]?o.drawPattern(r.fill.pattern.style[a.seriesNumber],r.fill.pattern.width,r.fill.pattern.height,l,s,n):i:o.drawPattern(r.fill.pattern.style,r.fill.pattern.width,r.fill.pattern.height,l,s,n)}},{key:"handleGradientFill",value:function(t,e,n,i){var r,a,o=this.w.config,s=this.opts,l=new x(this.ctx),c=new g,u=o.fill.gradient.type,h=void 0===o.fill.gradient.opacityFrom?n:Array.isArray(o.fill.gradient.opacityFrom)?o.fill.gradient.opacityFrom[i]:o.fill.gradient.opacityFrom,f=void 0===o.fill.gradient.opacityTo?n:Array.isArray(o.fill.gradient.opacityTo)?o.fill.gradient.opacityTo[i]:o.fill.gradient.opacityTo;if(r=e,a=void 0===o.fill.gradient.gradientToColors||0===o.fill.gradient.gradientToColors.length?"dark"===o.fill.gradient.shade?c.shadeColor(-1*parseFloat(o.fill.gradient.shadeIntensity),e):c.shadeColor(parseFloat(o.fill.gradient.shadeIntensity),e):o.fill.gradient.gradientToColors[s.seriesNumber],o.fill.gradient.inverseColors){var d=r;r=a,a=d}return l.drawGradient(u,r,a,h,f,s.size,o.fill.gradient.stops,o.fill.gradient.colorStops,i)}}]),t}(),N=function(){function t(e,n){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"setGlobalMarkerSize",value:function(){var t=this.w;if(t.globals.markers.size=Array.isArray(t.config.markers.size)?t.config.markers.size:[t.config.markers.size],t.globals.markers.size.length>0){if(t.globals.markers.size.length<t.globals.series.length+1)for(var e=0;e<=t.globals.series.length;e++)void 0===t.globals.markers.size[e]&&t.globals.markers.size.push(t.globals.markers.size[0])}else t.globals.markers.size=t.config.series.map((function(e){return t.config.markers.size}))}},{key:"plotChartMarkers",value:function(t,e,n,i){var r,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=this.w,s=e,l=t,c=null,u=new x(this.ctx);if((o.globals.markers.size[e]>0||a)&&(c=u.group({class:a?"":"apexcharts-series-markers"})).attr("clip-path","url(#gridRectMarkerMask".concat(o.globals.cuid,")")),l.x instanceof Array)for(var h=0;h<l.x.length;h++){var f=n;1===n&&0===h&&(f=0),1===n&&1===h&&(f=1);var d="apexcharts-marker";"line"!==o.config.chart.type&&"area"!==o.config.chart.type||o.globals.comboCharts||o.config.tooltip.intersect||(d+=" no-pointer-events");var p=Array.isArray(o.config.markers.size)?o.globals.markers.size[e]>0:o.config.markers.size>0;if(p||a){g.isNumber(l.y[h])?d+=" w".concat(g.randomId()):d="apexcharts-nullpoint";var v=this.getMarkerConfig(d,e,f);o.config.series[s].data[n]&&(o.config.series[s].data[n].fillColor&&(v.pointFillColor=o.config.series[s].data[n].fillColor),o.config.series[s].data[n].strokeColor&&(v.pointStrokeColor=o.config.series[s].data[n].strokeColor)),i&&(v.pSize=i),(r=u.drawMarker(l.x[h],l.y[h],v)).attr("rel",f),r.attr("j",f),r.attr("index",e),r.node.setAttribute("default-marker-size",v.pSize);var b=new m(this.ctx);b.setSelectionFilter(r,e,f),this.addEvents(r),c&&c.add(r)}else void 0===o.globals.pointsArray[e]&&(o.globals.pointsArray[e]=[]),o.globals.pointsArray[e].push([l.x[h],l.y[h]])}return c}},{key:"getMarkerConfig",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=this.w,r=this.getMarkerStyle(e),a=i.globals.markers.size[e],o=i.config.markers;return null!==n&&o.discrete.length&&o.discrete.map((function(t){t.seriesIndex===e&&t.dataPointIndex===n&&(r.pointStrokeColor=t.strokeColor,r.pointFillColor=t.fillColor,a=t.size)})),{pSize:a,pRadius:o.radius,pWidth:o.strokeWidth instanceof Array?o.strokeWidth[e]:o.strokeWidth,pointStrokeColor:r.pointStrokeColor,pointFillColor:r.pointFillColor,shape:o.shape instanceof Array?o.shape[e]:o.shape,class:t,pointStrokeOpacity:o.strokeOpacity instanceof Array?o.strokeOpacity[e]:o.strokeOpacity,pointStrokeDashArray:o.strokeDashArray instanceof Array?o.strokeDashArray[e]:o.strokeDashArray,pointFillOpacity:o.fillOpacity instanceof Array?o.fillOpacity[e]:o.fillOpacity,seriesIndex:e}}},{key:"addEvents",value:function(t){var e=this.w,n=new x(this.ctx);t.node.addEventListener("mouseenter",n.pathMouseEnter.bind(this.ctx,t)),t.node.addEventListener("mouseleave",n.pathMouseLeave.bind(this.ctx,t)),t.node.addEventListener("mousedown",n.pathMouseDown.bind(this.ctx,t)),t.node.addEventListener("click",e.config.markers.onClick),t.node.addEventListener("dblclick",e.config.markers.onDblClick),t.node.addEventListener("touchstart",n.pathMouseDown.bind(this.ctx,t),{passive:!0})}},{key:"getMarkerStyle",value:function(t){var e=this.w,n=e.globals.markers.colors,i=e.config.markers.strokeColor||e.config.markers.strokeColors;return{pointStrokeColor:i instanceof Array?i[t]:i,pointFillColor:n instanceof Array?n[t]:n}}}]),t}(),R=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.initialAnim=this.w.config.chart.animations.enabled,this.dynamicAnim=this.initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled}return s(t,[{key:"draw",value:function(t,e,n){var i=this.w,r=new x(this.ctx),a=n.realIndex,o=n.pointsPos,s=n.zRatio,l=n.elParent,c=r.group({class:"apexcharts-series-markers apexcharts-series-".concat(i.config.chart.type)});if(c.attr("clip-path","url(#gridRectMarkerMask".concat(i.globals.cuid,")")),o.x instanceof Array)for(var u=0;u<o.x.length;u++){var h=e+1,f=!0;0===e&&0===u&&(h=0),0===e&&1===u&&(h=1);var d=0,p=i.globals.markers.size[a];if(s!==1/0){p=i.globals.seriesZ[a][h]/s;var g=i.config.plotOptions.bubble;g.minBubbleRadius&&p<g.minBubbleRadius&&(p=g.minBubbleRadius),g.maxBubbleRadius&&p>g.maxBubbleRadius&&(p=g.maxBubbleRadius)}i.config.chart.animations.enabled||(d=p);var m=o.x[u],v=o.y[u];if(d=d||0,null!==v&&void 0!==i.globals.series[a][h]||(f=!1),f){var b=this.drawPoint(m,v,d,p,a,h,e);c.add(b)}l.add(c)}}},{key:"drawPoint",value:function(t,e,n,i,r,a,o){var s=this.w,l=r,c=new v(this.ctx),u=new m(this.ctx),h=new I(this.ctx),f=new N(this.ctx),d=new x(this.ctx),p=f.getMarkerConfig("apexcharts-marker",l),g=h.fillPath({seriesNumber:r,dataPointIndex:a,patternUnits:"objectBoundingBox",value:s.globals.series[r][o]}),b=d.drawCircle(n);if(s.config.series[l].data[a]&&s.config.series[l].data[a].fillColor&&(g=s.config.series[l].data[a].fillColor),b.attr({cx:t,cy:e,fill:g,stroke:p.pointStrokeColor,"stroke-width":p.pWidth,"stroke-dasharray":p.pointStrokeDashArray,"stroke-opacity":p.pointStrokeOpacity}),s.config.chart.dropShadow.enabled){var y=s.config.chart.dropShadow;u.dropShadow(b,y,r)}if(this.initialAnim&&!s.globals.dataChanged){var w=1;s.globals.resized||(w=s.config.chart.animations.speed),c.animateCircleRadius(b,0,i,w,s.globals.easing,(function(){window.setTimeout((function(){c.animationCompleted(b)}),100)}))}if(s.globals.dataChanged)if(this.dynamicAnim){var k,S,C,A,E=s.config.chart.animations.dynamicAnimation.speed;null!=(A=s.globals.previousPaths[r]&&s.globals.previousPaths[r][o])&&(k=A.x,S=A.y,C=void 0!==A.r?A.r:i);for(var P=0;P<s.globals.collapsedSeries.length;P++)s.globals.collapsedSeries[P].index===r&&(E=1,i=0);0===t&&0===e&&(i=0),c.animateCircle(b,{cx:k,cy:S,r:C},{cx:t,cy:e,r:i},E,s.globals.easing)}else b.attr({r:i});return b.attr({rel:a,j:a,index:r,"default-marker-size":i}),u.setSelectionFilter(b,r,a),f.addEvents(b),b.node.classList.add("apexcharts-marker"),b}},{key:"centerTextInBubble",value:function(t){var e=this.w;return{y:t+=parseInt(e.config.dataLabels.style.fontSize,10)/4}}}]),t}(),z=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"dataLabelsCorrection",value:function(t,e,n,i,r,a,o){var s=this.w,l=!1,c=new x(this.ctx).getTextRects(n,o),u=c.width,h=c.height;void 0===s.globals.dataLabelsRects[i]&&(s.globals.dataLabelsRects[i]=[]),s.globals.dataLabelsRects[i].push({x:t,y:e,width:u,height:h});var f=s.globals.dataLabelsRects[i].length-2,d=void 0!==s.globals.lastDrawnDataLabelsIndexes[i]?s.globals.lastDrawnDataLabelsIndexes[i][s.globals.lastDrawnDataLabelsIndexes[i].length-1]:0;if(void 0!==s.globals.dataLabelsRects[i][f]){var p=s.globals.dataLabelsRects[i][d];(t>p.x+p.width+2||e>p.y+p.height+2||t+u<p.x)&&(l=!0)}return(0===r||a)&&(l=!0),{x:t,y:e,textRects:c,drawnextLabel:l}}},{key:"drawDataLabel",value:function(t,e,n){var i=this,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2,a=this.w,o=new x(this.ctx),s=a.config.dataLabels,l=0,c=0,u=n,h=null;if(!s.enabled||t.x instanceof Array!=1)return h;h=o.group({class:"apexcharts-data-labels"});for(var f=0;f<t.x.length;f++)if(l=t.x[f]+s.offsetX,c=t.y[f]+s.offsetY+r,!isNaN(l)){1===n&&0===f&&(u=0),1===n&&1===f&&(u=1);var d=a.globals.series[e][u],p="",g=function(t){return a.config.dataLabels.formatter(t,{ctx:i.ctx,seriesIndex:e,dataPointIndex:u,w:a})};if("bubble"===a.config.chart.type){p=g(d=a.globals.seriesZ[e][u]),c=t.y[f];var m=new R(this.ctx),v=m.centerTextInBubble(c,e,u);c=v.y}else void 0!==d&&(p=g(d));this.plotDataLabelsText({x:l,y:c,text:p,i:e,j:u,parent:h,offsetCorrection:!0,dataLabelsConfig:a.config.dataLabels})}return h}},{key:"plotDataLabelsText",value:function(t){var e=this.w,n=new x(this.ctx),i=t.x,r=t.y,a=t.i,o=t.j,s=t.text,l=t.textAnchor,c=t.parent,u=t.dataLabelsConfig,h=t.color,f=t.alwaysDrawDataLabel,d=t.offsetCorrection;if(!(Array.isArray(e.config.dataLabels.enabledOnSeries)&&e.config.dataLabels.enabledOnSeries.indexOf(a)<0)){var p={x:i,y:r,drawnextLabel:!0};d&&(p=this.dataLabelsCorrection(i,r,s,a,o,f,parseInt(u.style.fontSize,10))),e.globals.zoomed||(i=p.x,r=p.y),p.textRects&&(i+p.textRects.width<-20||i>e.globals.gridWidth+20)&&(s="");var g=e.globals.dataLabels.style.colors[a];if((("bar"===e.config.chart.type||"rangeBar"===e.config.chart.type)&&e.config.plotOptions.bar.distributed||e.config.dataLabels.distributed)&&(g=e.globals.dataLabels.style.colors[o]),h&&(g=h),p.drawnextLabel){var v=n.drawText({width:100,height:parseInt(u.style.fontSize,10),x:i+u.offsetX,y:r+u.offsetY,foreColor:g,textAnchor:l||u.textAnchor,text:s,fontSize:u.style.fontSize,fontFamily:u.style.fontFamily,fontWeight:u.style.fontWeight||"normal"});if(v.attr({class:"apexcharts-datalabel",cx:i,cy:r}),u.dropShadow.enabled){var b=u.dropShadow;new m(this.ctx).dropShadow(v,b)}c.add(v),void 0===e.globals.lastDrawnDataLabelsIndexes[a]&&(e.globals.lastDrawnDataLabelsIndexes[a]=[]),e.globals.lastDrawnDataLabelsIndexes[a].push(o)}}}},{key:"addBackgroundToDataLabel",value:function(t,e){var n=this.w,i=n.config.dataLabels.background,r=i.padding,a=i.padding/2,o=e.width,s=e.height,l=new x(this.ctx).drawRect(e.x-r,e.y-a/2,o+2*r,s+a,i.borderRadius,"transparent"===n.config.chart.background?"#fff":n.config.chart.background,i.opacity,i.borderWidth,i.borderColor);return i.dropShadow.enabled&&new m(this.ctx).dropShadow(l,i.dropShadow),l}},{key:"dataLabelsBackground",value:function(){var t=this.w;if("bubble"!==t.config.chart.type)for(var e=t.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels text"),n=0;n<e.length;n++){var i=e[n],r=i.getBBox(),a=null;if(r.width&&r.height&&(a=this.addBackgroundToDataLabel(i,r)),a){i.parentNode.insertBefore(a.node,i);var o=i.getAttribute("fill");!t.config.chart.animations.enabled||t.globals.resized||t.globals.dataChanged?a.attr({fill:o}):a.animate().attr({fill:o}),i.setAttribute("fill",t.config.dataLabels.background.foreColor)}}}},{key:"bringForward",value:function(){for(var t=this.w,e=t.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels"),n=t.globals.dom.baseEl.querySelector(".apexcharts-plot-series:last-child"),i=0;i<e.length;i++)n&&n.insertBefore(e[i],n.nextSibling)}}]),t}(),F=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.legendInactiveClass="legend-mouseover-inactive"}return s(t,[{key:"getAllSeriesEls",value:function(){return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series")}},{key:"getSeriesByName",value:function(t){return this.w.globals.dom.baseEl.querySelector("[seriesName='".concat(g.escapeString(t),"']"))}},{key:"isSeriesHidden",value:function(t){var e=this.getSeriesByName(t),n=parseInt(e.getAttribute("data:realIndex"),10);return{isHidden:e.classList.contains("apexcharts-series-collapsed"),realIndex:n}}},{key:"addCollapsedClassToSeries",value:function(t,e){var n=this.w;function i(n){for(var i=0;i<n.length;i++)n[i].index===e&&t.node.classList.add("apexcharts-series-collapsed")}i(n.globals.collapsedSeries),i(n.globals.ancillaryCollapsedSeries)}},{key:"toggleSeries",value:function(t){var e=this.isSeriesHidden(t);return this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex,e.isHidden),e.isHidden}},{key:"showSeries",value:function(t){var e=this.isSeriesHidden(t);e.isHidden&&this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex,!0)}},{key:"hideSeries",value:function(t){var e=this.isSeriesHidden(t);e.isHidden||this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex,!1)}},{key:"resetSeries",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=this.w,r=i.globals.initialSeries.slice();i.config.series=r,i.globals.previousPaths=[],n&&(i.globals.collapsedSeries=[],i.globals.ancillaryCollapsedSeries=[],i.globals.collapsedSeriesIndices=[],i.globals.ancillaryCollapsedSeriesIndices=[]),t&&(e&&(i.globals.zoomed=!1,this.ctx.updateHelpers.revertDefaultAxisMinMax()),this.ctx.updateHelpers._updateSeries(r,i.config.chart.animations.dynamicAnimation.enabled))}},{key:"toggleSeriesOnHover",value:function(t,e){var n=this.w,i=n.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels");if("mousemove"===t.type){var r=parseInt(e.getAttribute("rel"),10)-1,a=null,o=null;n.globals.axisCharts||"radialBar"===n.config.chart.type?n.globals.axisCharts?(a=n.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(r,"']")),o=n.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(r,"']"))):a=n.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(r+1,"']")):a=n.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(r+1,"'] path"));for(var s=0;s<i.length;s++)i[s].classList.add(this.legendInactiveClass);null!==a&&(n.globals.axisCharts||a.parentNode.classList.remove(this.legendInactiveClass),a.classList.remove(this.legendInactiveClass),null!==o&&o.classList.remove(this.legendInactiveClass))}else if("mouseout"===t.type)for(var l=0;l<i.length;l++)i[l].classList.remove(this.legendInactiveClass)}},{key:"highlightRangeInSeries",value:function(t,e){var n=this,i=this.w,r=i.globals.dom.baseEl.querySelectorAll(".apexcharts-heatmap-rect"),a=function(t){for(var e=0;e<r.length;e++)r[e].classList[t](n.legendInactiveClass)};if("mousemove"===t.type){var o=parseInt(e.getAttribute("rel"),10)-1;a("add"),function(t){for(var e=0;e<r.length;e++){var i=parseInt(r[e].getAttribute("val"),10);i>=t.from&&i<=t.to&&r[e].classList.remove(n.legendInactiveClass)}}(i.config.plotOptions.heatmap.colorScale.ranges[o])}else"mouseout"===t.type&&a("remove")}},{key:"getActiveConfigSeriesIndex",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=this.w,n=0;if(e.config.series.length>1)for(var i=e.config.series.map((function(n,i){var r=!1;return t&&(r="bar"===e.config.series[i].type||"column"===e.config.series[i].type),n.data&&n.data.length>0&&!r?i:-1})),r=0;r<i.length;r++)if(-1!==i[r]){n=i[r];break}return n}},{key:"getPreviousPaths",value:function(){var t=this.w;function e(e,n,i){for(var r=e[n].childNodes,a={type:i,paths:[],realIndex:e[n].getAttribute("data:realIndex")},o=0;o<r.length;o++)if(r[o].hasAttribute("pathTo")){var s=r[o].getAttribute("pathTo");a.paths.push({d:s})}t.globals.previousPaths.push(a)}t.globals.previousPaths=[],["line","area","bar","candlestick","radar"].forEach((function(n){for(var i,r=(i=n,t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(i,"-series .apexcharts-series"))),a=0;a<r.length;a++)e(r,a,n)})),this.handlePrevBubbleScatterPaths("bubble"),this.handlePrevBubbleScatterPaths("scatter");var n=t.globals.dom.baseEl.querySelectorAll(".apexcharts-heatmap .apexcharts-series");if(n.length>0)for(var i=0;i<n.length;i++){for(var r=t.globals.dom.baseEl.querySelectorAll(".apexcharts-heatmap .apexcharts-series[data\\:realIndex='".concat(i,"'] rect")),a=[],o=0;o<r.length;o++)a.push({color:r[o].getAttribute("color")});t.globals.previousPaths.push(a)}t.globals.axisCharts||(t.globals.previousPaths=t.globals.series)}},{key:"handlePrevBubbleScatterPaths",value:function(t){var e=this.w,n=e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t,"-series .apexcharts-series"));if(n.length>0)for(var i=0;i<n.length;i++){for(var r=e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t,"-series .apexcharts-series[data\\:realIndex='").concat(i,"'] circle")),a=[],o=0;o<r.length;o++)a.push({x:r[o].getAttribute("cx"),y:r[o].getAttribute("cy"),r:r[o].getAttribute("r")});e.globals.previousPaths.push(a)}}},{key:"clearPreviousPaths",value:function(){var t=this.w;t.globals.previousPaths=[],t.globals.allSeriesCollapsed=!1}},{key:"handleNoData",value:function(){var t=this.w,e=t.config.noData,n=new x(this.ctx),i=t.globals.svgWidth/2,r=t.globals.svgHeight/2,a="middle";if(t.globals.noData=!0,t.globals.animationEnded=!0,"left"===e.align?(i=10,a="start"):"right"===e.align&&(i=t.globals.svgWidth-10,a="end"),"top"===e.verticalAlign?r=50:"bottom"===e.verticalAlign&&(r=t.globals.svgHeight-50),i+=e.offsetX,r=r+parseInt(e.style.fontSize,10)+2+e.offsetY,void 0!==e.text&&""!==e.text){var o=n.drawText({x:i,y:r,text:e.text,textAnchor:a,fontSize:e.style.fontSize,fontFamily:e.style.fontFamily,foreColor:e.style.color,opacity:1,class:"apexcharts-text-nodata"});t.globals.dom.Paper.add(o)}}},{key:"setNullSeriesToZeroValues",value:function(t){for(var e=this.w,n=0;n<t.length;n++)if(0===t[n].length)for(var i=0;i<t[e.globals.maxValsInArrayIndex].length;i++)t[n].push(0);return t}},{key:"hasAllSeriesEqualX",value:function(){for(var t=!0,e=this.w,n=this.filteredSeriesX(),i=0;i<n.length-1;i++)if(n[i][0]!==n[i+1][0]){t=!1;break}return e.globals.allSeriesHasEqualX=t,t}},{key:"filteredSeriesX",value:function(){return this.w.globals.seriesX.map((function(t){return t.length>0?t:[]}))}}]),t}(),D=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.twoDSeries=[],this.threeDSeries=[],this.twoDSeriesX=[],this.coreUtils=new _(this.ctx)}return s(t,[{key:"isMultiFormat",value:function(){return this.isFormatXY()||this.isFormat2DArray()}},{key:"isFormatXY",value:function(){var t=this.w.config.series.slice(),e=new F(this.ctx);if(this.activeSeriesIndex=e.getActiveConfigSeriesIndex(),void 0!==t[this.activeSeriesIndex].data&&t[this.activeSeriesIndex].data.length>0&&null!==t[this.activeSeriesIndex].data[0]&&void 0!==t[this.activeSeriesIndex].data[0].x&&null!==t[this.activeSeriesIndex].data[0])return!0}},{key:"isFormat2DArray",value:function(){var t=this.w.config.series.slice(),e=new F(this.ctx);if(this.activeSeriesIndex=e.getActiveConfigSeriesIndex(),void 0!==t[this.activeSeriesIndex].data&&t[this.activeSeriesIndex].data.length>0&&void 0!==t[this.activeSeriesIndex].data[0]&&null!==t[this.activeSeriesIndex].data[0]&&t[this.activeSeriesIndex].data[0].constructor===Array)return!0}},{key:"handleFormat2DArray",value:function(t,e){for(var n=this.w.config,i=this.w.globals,r=0;r<t[e].data.length;r++)if(void 0!==t[e].data[r][1]&&(Array.isArray(t[e].data[r][1])&&4===t[e].data[r][1].length?this.twoDSeries.push(g.parseNumber(t[e].data[r][1][3])):5===t[e].data[r].length?this.twoDSeries.push(g.parseNumber(t[e].data[r][4])):this.twoDSeries.push(g.parseNumber(t[e].data[r][1])),i.dataFormatXNumeric=!0),"datetime"===n.xaxis.type){var a=new Date(t[e].data[r][0]);a=new Date(a).getTime(),this.twoDSeriesX.push(a)}else this.twoDSeriesX.push(t[e].data[r][0]);for(var o=0;o<t[e].data.length;o++)void 0!==t[e].data[o][2]&&(this.threeDSeries.push(t[e].data[o][2]),i.isDataXYZ=!0)}},{key:"handleFormatXY",value:function(t,e){var n=this.w.config,i=this.w.globals,r=new P(this.ctx),a=e;i.collapsedSeriesIndices.indexOf(e)>-1&&(a=this.activeSeriesIndex);for(var o=0;o<t[e].data.length;o++)void 0!==t[e].data[o].y&&(Array.isArray(t[e].data[o].y)?this.twoDSeries.push(g.parseNumber(t[e].data[o].y[t[e].data[o].y.length-1])):this.twoDSeries.push(g.parseNumber(t[e].data[o].y)));for(var s=0;s<t[a].data.length;s++){var l="string"==typeof t[a].data[s].x,c=Array.isArray(t[a].data[s].x),u=!c&&!!r.isValidDate(t[a].data[s].x.toString());l||u?l||n.xaxis.convertedCatToNumeric?"datetime"!==n.xaxis.type||i.isRangeData?(this.fallbackToCategory=!0,this.twoDSeriesX.push(t[a].data[s].x)):this.twoDSeriesX.push(r.parseDate(t[a].data[s].x)):"datetime"===n.xaxis.type?this.twoDSeriesX.push(r.parseDate(t[a].data[s].x.toString())):(i.dataFormatXNumeric=!0,i.isXNumeric=!0,this.twoDSeriesX.push(parseFloat(t[a].data[s].x))):c?(this.fallbackToCategory=!0,this.twoDSeriesX.push(t[a].data[s].x)):(i.isXNumeric=!0,i.dataFormatXNumeric=!0,this.twoDSeriesX.push(t[a].data[s].x))}if(t[e].data[0]&&void 0!==t[e].data[0].z){for(var h=0;h<t[e].data.length;h++)this.threeDSeries.push(t[e].data[h].z);i.isDataXYZ=!0}}},{key:"handleRangeData",value:function(t,e){var n=this.w.config,i=this.w.globals,r={};return this.isFormat2DArray()?r=this.handleRangeDataFormat("array",t,e):this.isFormatXY()&&(r=this.handleRangeDataFormat("xy",t,e)),i.seriesRangeStart.push(r.start),i.seriesRangeEnd.push(r.end),"datetime"===n.xaxis.type&&i.seriesRangeBarTimeline.push(r.rangeUniques),i.seriesRangeBarTimeline.forEach((function(t,e){t&&t.forEach((function(t,e){t.y.forEach((function(e,n){for(var i=0;i<t.y.length;i++)if(n!==i){var r=e.y1,a=e.y2,o=t.y[i].y1;r<=t.y[i].y2&&o<=a&&(t.overlaps.indexOf(e.rangeName)<0&&t.overlaps.push(e.rangeName),t.overlaps.indexOf(t.y[i].rangeName)<0&&t.overlaps.push(t.y[i].rangeName))}}))}))})),r}},{key:"handleCandleStickData",value:function(t,e){var n=this.w.globals,i={};return this.isFormat2DArray()?i=this.handleCandleStickDataFormat("array",t,e):this.isFormatXY()&&(i=this.handleCandleStickDataFormat("xy",t,e)),n.seriesCandleO[e]=i.o,n.seriesCandleH[e]=i.h,n.seriesCandleL[e]=i.l,n.seriesCandleC[e]=i.c,i}},{key:"handleRangeDataFormat",value:function(t,e,n){var i=[],r=[],a=e[n].data.filter((function(t,e,n){return e===n.findIndex((function(e){return e.x===t.x}))})).map((function(t,e){return{x:t.x,overlaps:[],y:[]}})),o="Please provide [Start, End] values in valid format. Read more https://apexcharts.com/docs/series/#rangecharts",s=new F(this.ctx).getActiveConfigSeriesIndex();if("array"===t){if(2!==e[s].data[0][1].length)throw new Error(o);for(var l=0;l<e[n].data.length;l++)i.push(e[n].data[l][1][0]),r.push(e[n].data[l][1][1])}else if("xy"===t){if(2!==e[s].data[0].y.length)throw new Error(o);for(var c=function(t){var o=g.randomId(),s=e[n].data[t].x,l={y1:e[n].data[t].y[0],y2:e[n].data[t].y[1],rangeName:o};e[n].data[t].rangeName=o;var c=a.findIndex((function(t){return t.x===s}));a[c].y.push(l),i.push(l.y1),r.push(l.y2)},u=0;u<e[n].data.length;u++)c(u)}return{start:i,end:r,rangeUniques:a}}},{key:"handleCandleStickDataFormat",value:function(t,e,n){var i=[],r=[],a=[],o=[],s="Please provide [Open, High, Low and Close] values in valid format. Read more https://apexcharts.com/docs/series/#candlestick";if("array"===t){if(!Array.isArray(e[n].data[0][1])&&5!==e[n].data[0].length||Array.isArray(e[n].data[0][1])&&4!==e[n].data[0][1].length)throw new Error(s);if(5===e[n].data[0].length)for(var l=0;l<e[n].data.length;l++)i.push(e[n].data[l][1]),r.push(e[n].data[l][2]),a.push(e[n].data[l][3]),o.push(e[n].data[l][4]);else for(var c=0;c<e[n].data.length;c++)i.push(e[n].data[c][1][0]),r.push(e[n].data[c][1][1]),a.push(e[n].data[c][1][2]),o.push(e[n].data[c][1][3])}else if("xy"===t){if(4!==e[n].data[0].y.length)throw new Error(s);for(var u=0;u<e[n].data.length;u++)i.push(e[n].data[u].y[0]),r.push(e[n].data[u].y[1]),a.push(e[n].data[u].y[2]),o.push(e[n].data[u].y[3])}return{o:i,h:r,l:a,c:o}}},{key:"parseDataAxisCharts",value:function(t){for(var e=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.ctx,i=this.w.config,r=this.w.globals,a=new P(n),o=i.labels.length>0?i.labels.slice():i.xaxis.categories.slice(),s=function(){for(var t=0;t<o.length;t++)if("string"==typeof o[t]){if(!a.isValidDate(o[t]))throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");e.twoDSeriesX.push(a.parseDate(o[t]))}else{if(13!==String(o[t]).length)throw new Error("Please provide a valid JavaScript timestamp");e.twoDSeriesX.push(o[t])}},l=0;l<t.length;l++){if(this.twoDSeries=[],this.twoDSeriesX=[],this.threeDSeries=[],void 0===t[l].data)return void console.error("It is a possibility that you may have not included 'data' property in series.");if("rangeBar"!==i.chart.type&&"rangeArea"!==i.chart.type&&"rangeBar"!==t[l].type&&"rangeArea"!==t[l].type||(r.isRangeData=!0,this.handleRangeData(t,l)),this.isMultiFormat())this.isFormat2DArray()?this.handleFormat2DArray(t,l):this.isFormatXY()&&this.handleFormatXY(t,l),"candlestick"!==i.chart.type&&"candlestick"!==t[l].type||this.handleCandleStickData(t,l),r.series.push(this.twoDSeries),r.labels.push(this.twoDSeriesX),r.seriesX.push(this.twoDSeriesX),l!==this.activeSeriesIndex||this.fallbackToCategory||(r.isXNumeric=!0);else{"datetime"===i.xaxis.type?(r.isXNumeric=!0,s(),r.seriesX.push(this.twoDSeriesX)):"numeric"===i.xaxis.type&&(r.isXNumeric=!0,o.length>0&&(this.twoDSeriesX=o,r.seriesX.push(this.twoDSeriesX))),r.labels.push(this.twoDSeriesX);var c=t[l].data.map((function(t){return g.parseNumber(t)}));r.series.push(c)}r.seriesZ.push(this.threeDSeries),void 0!==t[l].name?r.seriesNames.push(t[l].name):r.seriesNames.push("series-"+parseInt(l+1,10))}return this.w}},{key:"parseDataNonAxisCharts",value:function(t){var e=this.w.globals,n=this.w.config;e.series=t.slice(),e.seriesNames=n.labels.slice();for(var i=0;i<e.series.length;i++)void 0===e.seriesNames[i]&&e.seriesNames.push("series-"+(i+1));return this.w}},{key:"handleExternalLabelsData",value:function(t){var e=this.w.config,n=this.w.globals;e.xaxis.categories.length>0?n.labels=e.xaxis.categories:e.labels.length>0?n.labels=e.labels.slice():this.fallbackToCategory?(n.labels=n.labels[0],n.seriesRangeBarTimeline.length&&(n.seriesRangeBarTimeline.map((function(t){t.forEach((function(t){n.labels.indexOf(t.x)<0&&t.x&&n.labels.push(t.x)}))})),n.labels=n.labels.filter((function(t,e,n){return n.indexOf(t)===e}))),e.xaxis.convertedCatToNumeric&&(new T(e).convertCatToNumericXaxis(e,this.ctx,n.seriesX[0]),this._generateExternalLabels(t))):this._generateExternalLabels(t)}},{key:"_generateExternalLabels",value:function(t){var e=this.w.globals,n=this.w.config,i=[];if(e.axisCharts){if(e.series.length>0)for(var r=0;r<e.series[e.maxValsInArrayIndex].length;r++)i.push(r+1);e.seriesX=[];for(var a=0;a<t.length;a++)e.seriesX.push(i);e.isXNumeric=!0}if(0===i.length){i=e.axisCharts?[0,10]:e.series.map((function(t,e){return e+1}));for(var o=0;o<t.length;o++)e.seriesX.push(i)}e.labels=i,n.xaxis.convertedCatToNumeric&&(e.categoryLabels=i.map((function(t){return n.xaxis.labels.formatter(t)}))),e.noLabelsProvided=!0}},{key:"parseData",value:function(t){var e=this.w,n=e.config,i=e.globals;if(this.excludeCollapsedSeriesInYAxis(),this.fallbackToCategory=!1,this.ctx.core.resetGlobals(),this.ctx.core.isMultipleY(),i.axisCharts?this.parseDataAxisCharts(t):this.parseDataNonAxisCharts(t),this.coreUtils.getLargestSeries(),"bar"===n.chart.type&&n.chart.stacked){var r=new F(this.ctx);i.series=r.setNullSeriesToZeroValues(i.series)}this.coreUtils.getSeriesTotals(),i.axisCharts&&this.coreUtils.getStackedSeriesTotals(),this.coreUtils.getPercentSeries(),i.dataFormatXNumeric||i.isXNumeric&&("numeric"!==n.xaxis.type||0!==n.labels.length||0!==n.xaxis.categories.length)||this.handleExternalLabelsData(t);for(var a=this.coreUtils.getCategoryLabels(i.labels),o=0;o<a.length;o++)if(Array.isArray(a[o])){i.isMultiLineX=!0;break}}},{key:"excludeCollapsedSeriesInYAxis",value:function(){var t=this,e=this.w;e.globals.ignoreYAxisIndexes=e.globals.collapsedSeries.map((function(n,i){if(t.w.globals.isMultipleYAxis&&!e.config.chart.stacked)return n.index}))}}]),t}(),X=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.tooltipKeyFormat="dd MMM"}return s(t,[{key:"xLabelFormat",value:function(t,e,n){var i=this.w;if("datetime"===i.config.xaxis.type&&void 0===i.config.xaxis.labels.formatter&&void 0===i.config.tooltip.x.formatter){var r=new P(this.ctx);return r.formatDate(r.getDate(e),i.config.tooltip.x.format)}return t(e,n)}},{key:"defaultGeneralFormatter",value:function(t){return Array.isArray(t)?t.map((function(t){return t})):t}},{key:"defaultYFormatter",value:function(t,e,n){var i=this.w;return g.isNumber(t)&&(t=0!==i.globals.yValueDecimal?t.toFixed(void 0!==e.decimalsInFloat?e.decimalsInFloat:i.globals.yValueDecimal):i.globals.maxYArr[n]-i.globals.minYArr[n]<10?t.toFixed(1):t.toFixed(0)),t}},{key:"setLabelFormatters",value:function(){var t=this,e=this.w;return e.globals.xLabelFormatter=function(e){return t.defaultGeneralFormatter(e)},e.globals.xaxisTooltipFormatter=function(e){return t.defaultGeneralFormatter(e)},e.globals.ttKeyFormatter=function(e){return t.defaultGeneralFormatter(e)},e.globals.ttZFormatter=function(t){return t},e.globals.legendFormatter=function(e){return t.defaultGeneralFormatter(e)},void 0!==e.config.xaxis.labels.formatter?e.globals.xLabelFormatter=e.config.xaxis.labels.formatter:e.globals.xLabelFormatter=function(t){return g.isNumber(t)?!e.config.xaxis.convertedCatToNumeric&&"numeric"===e.config.xaxis.type&&e.globals.dataPoints<50||e.globals.isBarHorizontal&&e.globals.maxY-e.globals.minYArr<4?t.toFixed(1):t.toFixed(0):t},"function"==typeof e.config.tooltip.x.formatter?e.globals.ttKeyFormatter=e.config.tooltip.x.formatter:e.globals.ttKeyFormatter=e.globals.xLabelFormatter,"function"==typeof e.config.xaxis.tooltip.formatter&&(e.globals.xaxisTooltipFormatter=e.config.xaxis.tooltip.formatter),(Array.isArray(e.config.tooltip.y)||void 0!==e.config.tooltip.y.formatter)&&(e.globals.ttVal=e.config.tooltip.y),void 0!==e.config.tooltip.z.formatter&&(e.globals.ttZFormatter=e.config.tooltip.z.formatter),void 0!==e.config.legend.formatter&&(e.globals.legendFormatter=e.config.legend.formatter),e.config.yaxis.forEach((function(n,i){void 0!==n.labels.formatter?e.globals.yLabelFormatters[i]=n.labels.formatter:e.globals.yLabelFormatters[i]=function(r){return e.globals.xyCharts?Array.isArray(r)?r.map((function(e){return t.defaultYFormatter(e,n,i)})):t.defaultYFormatter(r,n,i):r}})),e.globals}},{key:"heatmapLabelFormatters",value:function(){var t=this.w;if("heatmap"===t.config.chart.type){t.globals.yAxisScale[0].result=t.globals.seriesNames.slice();var e=t.globals.seriesNames.reduce((function(t,e){return t.length>e.length?t:e}),0);t.globals.yAxisScale[0].niceMax=e,t.globals.yAxisScale[0].niceMin=e}}}]),t}(),Y=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"getLabel",value:function(t,e,n,i){var r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[],a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"12px",o=this.w,s=void 0===t[i]?"":t[i],l=s,c=o.globals.xLabelFormatter,u=o.config.xaxis.labels.formatter,h=!1,f=new X(this.ctx),d=s;l=f.xLabelFormat(c,s,d),void 0!==u&&(l=u(s,t[i],i));var p=function(t){var n=null;return e.forEach((function(t){"month"===t.unit?n="year":"day"===t.unit?n="month":"hour"===t.unit?n="day":"minute"===t.unit&&(n="hour")})),n===t};e.length>0?(h=p(e[i].unit),n=e[i].position,l=e[i].value):"datetime"===o.config.xaxis.type&&void 0===u&&(l=""),void 0===l&&(l=""),l=Array.isArray(l)?l:l.toString();var g=new x(this.ctx),m={};return m=o.globals.rotateXLabels?g.getTextRects(l,parseInt(a,10),null,"rotate(".concat(o.config.xaxis.labels.rotate," 0 0)"),!1):g.getTextRects(l,parseInt(a,10)),!Array.isArray(l)&&(0===l.indexOf("NaN")||0===l.toLowerCase().indexOf("invalid")||l.toLowerCase().indexOf("infinity")>=0||r.indexOf(l)>=0&&!o.config.xaxis.labels.showDuplicates)&&(l=""),{x:n,text:l,textRect:m,isBold:h}}},{key:"checkForOverflowingLabels",value:function(t,e,n,i,r){var a=this.w;if(0===t&&a.globals.skipFirstTimelinelabel&&(e.text=""),t===n-1&&a.globals.skipLastTimelinelabel&&(e.text=""),a.config.xaxis.labels.hideOverlappingLabels&&i.length>0){var o=r[r.length-1];e.x<o.textRect.width/(a.globals.rotateXLabels?Math.abs(a.config.xaxis.labels.rotate)/12:1.01)+o.x&&(e.text="")}return e}},{key:"checkForReversedLabels",value:function(t,e){var n=this.w;return n.config.yaxis[t]&&n.config.yaxis[t].reversed&&e.reverse(),e}},{key:"drawYAxisTicks",value:function(t,e,n,i,r,a,o){var s=this.w,l=new x(this.ctx),c=s.globals.translateY;if(i.show&&e>0){!0===s.config.yaxis[r].opposite&&(t+=i.width);for(var u=e;u>=0;u--){var h=c+e/10+s.config.yaxis[r].labels.offsetY-1;s.globals.isBarHorizontal&&(h=a*u),"heatmap"===s.config.chart.type&&(h+=a/2);var f=l.drawLine(t+n.offsetX-i.width+i.offsetX,h+i.offsetY,t+n.offsetX+i.offsetX,h+i.offsetY,i.color);o.add(f),c+=a}}}}]),t}(),j=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"fixSvgStringForIe11",value:function(t){if(!g.isIE11())return t;var e=0,n=t.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g,(function(t){return 2==++e?'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs"':t}));return(n=n.replace(/xmlns:NS\d+=""/g,"")).replace(/NS\d+:(\w+:\w+=")/g,"$1")}},{key:"getSvgString",value:function(){var t=this.w.globals.dom.Paper.svg();return this.fixSvgStringForIe11(t)}},{key:"cleanup",value:function(){var t=this.w,e=t.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs"),n=t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"),i=t.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");Array.prototype.forEach.call(i,(function(t){t.setAttribute("width",0)})),e&&(e.setAttribute("x",-500),e.setAttribute("x1",-500),e.setAttribute("x2",-500)),n&&(n.setAttribute("y",-100),n.setAttribute("y1",-100),n.setAttribute("y2",-100))}},{key:"svgUrl",value:function(){this.cleanup();var t=this.getSvgString(),e=new Blob([t],{type:"image/svg+xml;charset=utf-8"});return URL.createObjectURL(e)}},{key:"dataURI",value:function(){var t=this;return new Promise((function(e){var n=t.w;t.cleanup();var i=document.createElement("canvas");i.width=n.globals.svgWidth,i.height=parseInt(n.globals.dom.elWrap.style.height,10);var r="transparent"===n.config.chart.background?"#fff":n.config.chart.background,a=i.getContext("2d");a.fillStyle=r,a.fillRect(0,0,i.width,i.height);var o=t.getSvgString();if(window.canvg&&g.isIE11()){var s=window.canvg.Canvg.fromString(a,o,{ignoreClear:!0,ignoreDimensions:!0});s.start();var l=i.msToBlob();s.stop(),e({blob:l})}else{var c="data:image/svg+xml,"+encodeURIComponent(o),u=new Image;u.crossOrigin="anonymous",u.onload=function(){if(a.drawImage(u,0,0),i.msToBlob){var t=i.msToBlob();e({blob:t})}else{var n=i.toDataURL("image/png");e({imgURI:n})}},u.src=c}}))}},{key:"exportToSVG",value:function(){this.triggerDownload(this.svgUrl(),".svg")}},{key:"exportToPng",value:function(){var t=this;this.dataURI().then((function(e){var n=e.imgURI,i=e.blob;i?navigator.msSaveOrOpenBlob(i,t.w.globals.chartID+".png"):t.triggerDownload(n,".png")}))}},{key:"exportToCSV",value:function(t){var e=this,n=t.series,i=t.columnDelimiter,r=void 0===i?",":i,a=t.lineDelimiter,o=void 0===a?"\n":a,s=this.w,l=[],c=[],u="data:text/csv;charset=utf-8,",h=new D(this.ctx),f=new Y(this.ctx),d=function(t){var n="";if(s.globals.axisCharts){if("category"===s.config.xaxis.type||s.config.xaxis.convertedCatToNumeric)if(s.globals.isBarHorizontal){var i=s.globals.yLabelFormatters[0],r=new F(e.ctx).getActiveConfigSeriesIndex();n=i(s.globals.labels[t],{seriesIndex:r,dataPointIndex:t,w:s})}else n=f.getLabel(s.globals.labels,s.globals.timescaleLabels,0,t).text;"datetime"===s.config.xaxis.type&&(s.config.xaxis.categories.length?n=s.config.xaxis.categories[t]:s.config.labels.length&&(n=s.config.labels[t]))}else n=s.config.labels[t];return n};l.push("category"),n.map((function(t,e){s.globals.axisCharts&&l.push(t.name?t.name:"series-".concat(e))})),s.globals.axisCharts||(l.push("value"),c.push(l.join(r))),n.map((function(t,e){s.globals.axisCharts?function(t,e){if(l.length&&c.push(l.join(r)),t.data&&t.data.length)for(var i=0;i<t.data.length;i++){l=[];var a=d(i);if(a||(h.isFormatXY()?a=n[e].data[i].x:h.isFormat2DArray()&&(a=n[e].data[i]?n[e].data[i][0]:"")),0===e){l.push(a);for(var o=0;o<s.globals.series.length;o++)l.push(s.globals.series[o][i])}("candlestick"===s.config.chart.type||t.type&&"candlestick"===t.type)&&(l.pop(),l.push(s.globals.seriesCandleO[e][i]),l.push(s.globals.seriesCandleH[e][i]),l.push(s.globals.seriesCandleL[e][i]),l.push(s.globals.seriesCandleC[e][i])),"rangeBar"===s.config.chart.type&&(l.pop(),l.push(s.globals.seriesRangeStart[e][i]),l.push(s.globals.seriesRangeEnd[e][i])),l.length&&c.push(l.join(r))}}(t,e):((l=[]).push(s.globals.labels[e]),l.push(s.globals.series[e]),c.push(l.join(r)))})),u+=c.join(o),this.triggerDownload(encodeURI(u),".csv")}},{key:"triggerDownload",value:function(t,e){var n=document.createElement("a");n.href=t,n.download=this.w.globals.chartID+e,document.body.appendChild(n),n.click(),document.body.removeChild(n)}}]),t}(),W=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w;var n=this.w;this.axesUtils=new Y(e),this.xaxisLabels=n.globals.labels.slice(),n.globals.timescaleLabels.length>0&&!n.globals.isBarHorizontal&&(this.xaxisLabels=n.globals.timescaleLabels.slice()),this.drawnLabels=[],this.drawnLabelsRects=[],"top"===n.config.xaxis.position?this.offY=0:this.offY=n.globals.gridHeight+1,this.offY=this.offY+n.config.xaxis.axisBorder.offsetY,this.isCategoryBarHorizontal="bar"===n.config.chart.type&&n.config.plotOptions.bar.horizontal,this.xaxisFontSize=n.config.xaxis.labels.style.fontSize,this.xaxisFontFamily=n.config.xaxis.labels.style.fontFamily,this.xaxisForeColors=n.config.xaxis.labels.style.colors,this.xaxisBorderWidth=n.config.xaxis.axisBorder.width,this.isCategoryBarHorizontal&&(this.xaxisBorderWidth=n.config.yaxis[0].axisBorder.width.toString()),this.xaxisBorderWidth.indexOf("%")>-1?this.xaxisBorderWidth=n.globals.gridWidth*parseInt(this.xaxisBorderWidth,10)/100:this.xaxisBorderWidth=parseInt(this.xaxisBorderWidth,10),this.xaxisBorderHeight=n.config.xaxis.axisBorder.height,this.yaxis=n.config.yaxis[0]}return s(t,[{key:"drawXaxis",value:function(){var t,e=this,n=this.w,i=new x(this.ctx),r=i.group({class:"apexcharts-xaxis",transform:"translate(".concat(n.config.xaxis.offsetX,", ").concat(n.config.xaxis.offsetY,")")}),a=i.group({class:"apexcharts-xaxis-texts-g",transform:"translate(".concat(n.globals.translateXAxisX,", ").concat(n.globals.translateXAxisY,")")});r.add(a);for(var o=n.globals.padHorizontal,s=[],l=0;l<this.xaxisLabels.length;l++)s.push(this.xaxisLabels[l]);if(n.globals.isXNumeric){var c=s.length>1?s.length-1:s.length;t=n.globals.gridWidth/c,o=o+t/2+n.config.xaxis.labels.offsetX}else t=n.globals.gridWidth/s.length,o=o+t+n.config.xaxis.labels.offsetX;var u=s.length;if(n.config.xaxis.labels.show)for(var h=function(r){var l=o-t/2+n.config.xaxis.labels.offsetX;0===r&&1===u&&t/2===o&&1===n.globals.dataPoints&&(l=n.globals.gridWidth/2);var c=e.axesUtils.getLabel(s,n.globals.timescaleLabels,l,r,e.drawnLabels,e.xaxisFontSize),h=28;n.globals.rotateXLabels&&(h=22),(c=e.axesUtils.checkForOverflowingLabels(r,c,u,e.drawnLabels,e.drawnLabelsRects)).text&&n.globals.xaxisLabelsCount++;var f=i.drawText({x:c.x,y:e.offY+n.config.xaxis.labels.offsetY+h-("top"===n.config.xaxis.position?n.globals.xAxisHeight+n.config.xaxis.axisTicks.height-2:0),text:c.text,textAnchor:"middle",fontWeight:c.isBold?600:n.config.xaxis.labels.style.fontWeight,fontSize:e.xaxisFontSize,fontFamily:e.xaxisFontFamily,foreColor:Array.isArray(e.xaxisForeColors)?n.config.xaxis.convertedCatToNumeric?e.xaxisForeColors[n.globals.minX+r-1]:e.xaxisForeColors[r]:e.xaxisForeColors,isPlainText:!1,cssClass:"apexcharts-xaxis-label "+n.config.xaxis.labels.style.cssClass});a.add(f);var d=document.createElementNS(n.globals.SVGNS,"title");d.textContent=c.text,f.node.appendChild(d),""!==c.text&&(e.drawnLabels.push(c.text),e.drawnLabelsRects.push(c)),o+=t},f=0;f<=u-1;f++)h(f);if(void 0!==n.config.xaxis.title.text){var d=i.group({class:"apexcharts-xaxis-title"}),p=i.drawText({x:n.globals.gridWidth/2+n.config.xaxis.title.offsetX,y:this.offY-parseFloat(this.xaxisFontSize)+n.globals.xAxisLabelsHeight+n.config.xaxis.title.offsetY,text:n.config.xaxis.title.text,textAnchor:"middle",fontSize:n.config.xaxis.title.style.fontSize,fontFamily:n.config.xaxis.title.style.fontFamily,fontWeight:n.config.xaxis.title.style.fontWeight,foreColor:n.config.xaxis.title.style.color,cssClass:"apexcharts-xaxis-title-text "+n.config.xaxis.title.style.cssClass});d.add(p),r.add(d)}if(n.config.xaxis.axisBorder.show){var g=0;"bar"===n.config.chart.type&&n.globals.isXNumeric&&(g-=15);var m=i.drawLine(n.globals.padHorizontal+g+n.config.xaxis.axisBorder.offsetX,this.offY,this.xaxisBorderWidth,this.offY,n.config.xaxis.axisBorder.color,0,this.xaxisBorderHeight);r.add(m)}return r}},{key:"drawXaxisInversed",value:function(t){var e,n,i=this.w,r=new x(this.ctx),a=i.config.yaxis[0].opposite?i.globals.translateYAxisX[t]:0,o=r.group({class:"apexcharts-yaxis apexcharts-xaxis-inversed",rel:t}),s=r.group({class:"apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",transform:"translate("+a+", 0)"});o.add(s);var l=[];if(i.config.yaxis[t].show)for(var c=0;c<this.xaxisLabels.length;c++)l.push(this.xaxisLabels[c]);n=-(e=i.globals.gridHeight/l.length)/2.2;var u=i.globals.yLabelFormatters[0],h=i.config.yaxis[0].labels;if(h.show)for(var f=0;f<=l.length-1;f++){var d=void 0===l[f]?"":l[f];d=u(d,{seriesIndex:t,dataPointIndex:f,w:i});var p=0;Array.isArray(d)&&(p=d.length/2*parseInt(h.style.fontSize,10));var g=r.drawText({x:h.offsetX-15,y:n+e+h.offsetY-p,text:d,textAnchor:this.yaxis.opposite?"start":"end",foreColor:Array.isArray(h.style.colors)?h.style.colors[f]:h.style.colors,fontSize:h.style.fontSize,fontFamily:h.style.fontFamily,fontWeight:h.style.fontWeight,isPlainText:!1,cssClass:"apexcharts-yaxis-label "+h.style.cssClass});s.add(g);var m=document.createElementNS(i.globals.SVGNS,"title");if(m.textContent=d.text,g.node.appendChild(m),0!==i.config.yaxis[t].labels.rotate){var v=r.rotateAroundCenter(g.node);g.node.setAttribute("transform","rotate(".concat(i.config.yaxis[t].labels.rotate," 0 ").concat(v.y,")"))}n+=e}if(void 0!==i.config.yaxis[0].title.text){var b=r.group({class:"apexcharts-yaxis-title apexcharts-xaxis-title-inversed",transform:"translate("+a+", 0)"}),y=r.drawText({x:0,y:i.globals.gridHeight/2,text:i.config.yaxis[0].title.text,textAnchor:"middle",foreColor:i.config.yaxis[0].title.style.color,fontSize:i.config.yaxis[0].title.style.fontSize,fontWeight:i.config.yaxis[0].title.style.fontWeight,fontFamily:i.config.yaxis[0].title.style.fontFamily,cssClass:"apexcharts-yaxis-title-text "+i.config.yaxis[0].title.style.cssClass});b.add(y),o.add(b)}var w=0;this.isCategoryBarHorizontal&&i.config.yaxis[0].opposite&&(w=i.globals.gridWidth);var k=i.config.xaxis.axisBorder;if(k.show){var S=r.drawLine(i.globals.padHorizontal+k.offsetX+w,1+k.offsetY,i.globals.padHorizontal+k.offsetX+w,i.globals.gridHeight+k.offsetY,k.color,0);o.add(S)}return i.config.yaxis[0].axisTicks.show&&this.axesUtils.drawYAxisTicks(w,l.length,i.config.yaxis[0].axisBorder,i.config.yaxis[0].axisTicks,0,e,o),o}},{key:"drawXaxisTicks",value:function(t,e){var n=this.w,i=t;if(!(t<0||t-2>n.globals.gridWidth)){var r=this.offY+n.config.xaxis.axisTicks.offsetY,a=r+n.config.xaxis.axisTicks.height;if("top"===n.config.xaxis.position&&(a=r-n.config.xaxis.axisTicks.height),n.config.xaxis.axisTicks.show){var o=new x(this.ctx).drawLine(t+n.config.xaxis.axisTicks.offsetX,r+n.config.xaxis.offsetY,i+n.config.xaxis.axisTicks.offsetX,a+n.config.xaxis.offsetY,n.config.xaxis.axisTicks.color);e.add(o),o.node.classList.add("apexcharts-xaxis-tick")}}}},{key:"getXAxisTicksPositions",value:function(){var t=this.w,e=[],n=this.xaxisLabels.length,i=t.globals.padHorizontal;if(t.globals.timescaleLabels.length>0)for(var r=0;r<n;r++)i=this.xaxisLabels[r].position,e.push(i);else for(var a=n,o=0;o<a;o++){var s=a;t.globals.isXNumeric&&"bar"!==t.config.chart.type&&(s-=1),i+=t.globals.gridWidth/s,e.push(i)}return e}},{key:"xAxisLabelCorrections",value:function(){var t=this.w,e=new x(this.ctx),n=t.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g"),i=t.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text"),r=t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text"),a=t.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text tspan");if(t.globals.rotateXLabels||t.config.xaxis.labels.rotateAlways)for(var o=0;o<i.length;o++){var s=e.rotateAroundCenter(i[o]);s.y=s.y-1,s.x=s.x+1,i[o].setAttribute("transform","rotate(".concat(t.config.xaxis.labels.rotate," ").concat(s.x," ").concat(s.y,")")),i[o].setAttribute("text-anchor","end"),n.setAttribute("transform","translate(0, ".concat(-10,")"));var l=i[o].childNodes;t.config.xaxis.labels.trim&&Array.prototype.forEach.call(l,(function(n){e.placeTextWithEllipsis(n,n.textContent,t.config.xaxis.labels.maxHeight-("bottom"===t.config.legend.position?20:10))}))}else!function(){for(var n=t.globals.gridWidth/(t.globals.labels.length+1),r=0;r<i.length;r++){var a=i[r].childNodes;t.config.xaxis.labels.trim&&"datetime"!==t.config.xaxis.type&&Array.prototype.forEach.call(a,(function(t){e.placeTextWithEllipsis(t,t.textContent,n)}))}}();if(r.length>0){var c=r[r.length-1].getBBox(),u=r[0].getBBox();c.x<-20&&r[r.length-1].parentNode.removeChild(r[r.length-1]),u.x+u.width>t.globals.gridWidth&&!t.globals.isBarHorizontal&&r[0].parentNode.removeChild(r[0]);for(var h=0;h<a.length;h++)e.placeTextWithEllipsis(a[h],a[h].textContent,t.config.yaxis[0].labels.maxWidth-2*parseFloat(t.config.yaxis[0].title.style.fontSize)-20)}}}]),t}(),H=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w;var n=this.w;this.xaxisLabels=n.globals.labels.slice(),this.axesUtils=new Y(e),this.isTimelineBar="datetime"===n.config.xaxis.type&&n.globals.seriesRangeBarTimeline.length,n.globals.timescaleLabels.length>0&&(this.xaxisLabels=n.globals.timescaleLabels.slice())}return s(t,[{key:"drawGridArea",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=this.w,n=new x(this.ctx);null===t&&(t=n.group({class:"apexcharts-grid"}));var i=n.drawLine(e.globals.padHorizontal,1,e.globals.padHorizontal,e.globals.gridHeight,"transparent"),r=n.drawLine(e.globals.padHorizontal,e.globals.gridHeight,e.globals.gridWidth,e.globals.gridHeight,"transparent");return t.add(r),t.add(i),t}},{key:"drawGrid",value:function(){var t=this.w,e=null;return this.w.globals.axisCharts&&"radar"!==t.config.chart.type&&(e=this.renderGrid(),this.drawGridArea(e.el)),e}},{key:"createGridMask",value:function(){var t=this.w,e=t.globals,n=new x(this.ctx),i=Array.isArray(t.config.stroke.width)?0:t.config.stroke.width;if(Array.isArray(t.config.stroke.width)){var r=0;t.config.stroke.width.forEach((function(t){r=Math.max(r,t)})),i=r}e.dom.elGridRectMask=document.createElementNS(e.SVGNS,"clipPath"),e.dom.elGridRectMask.setAttribute("id","gridRectMask".concat(e.cuid)),e.dom.elGridRectMarkerMask=document.createElementNS(e.SVGNS,"clipPath"),e.dom.elGridRectMarkerMask.setAttribute("id","gridRectMarkerMask".concat(e.cuid));var a=t.config.chart.type,o=0,s=0;("bar"===a||"rangeBar"===a||t.globals.comboBarCount>0)&&t.globals.isXNumeric&&!t.globals.isBarHorizontal&&(o=t.config.grid.padding.left,s=t.config.grid.padding.right,e.barPadForNumericAxis>o&&(o=e.barPadForNumericAxis,s=e.barPadForNumericAxis)),e.dom.elGridRect=n.drawRect(-i/2-o-2,-i/2,e.gridWidth+i+s+o+4,e.gridHeight+i,0,"#fff"),new _(this).getLargestMarkerSize();var l=t.globals.markers.largestSize+1;e.dom.elGridRectMarker=n.drawRect(2*-l,2*-l,e.gridWidth+4*l,e.gridHeight+4*l,0,"#fff"),e.dom.elGridRectMask.appendChild(e.dom.elGridRect.node),e.dom.elGridRectMarkerMask.appendChild(e.dom.elGridRectMarker.node);var c=e.dom.baseEl.querySelector("defs");c.appendChild(e.dom.elGridRectMask),c.appendChild(e.dom.elGridRectMarkerMask)}},{key:"_drawGridLines",value:function(t){var e=t.i,n=t.x1,i=t.y1,r=t.x2,a=t.y2,o=t.xCount,s=t.parent,l=this.w;0===e&&l.globals.skipFirstTimelinelabel||e===o-1&&l.globals.skipLastTimelinelabel||"radar"===l.config.chart.type||(l.config.grid.xaxis.lines.show&&this._drawGridLine({x1:n,y1:i,x2:r,y2:a,parent:s}),new W(this.ctx).drawXaxisTicks(n,this.elg))}},{key:"_drawGridLine",value:function(t){var e=t.x1,n=t.y1,i=t.x2,r=t.y2,a=t.parent,o=this.w,s=o.config.grid.strokeDashArray,l=new x(this).drawLine(e,n,i,r,o.config.grid.borderColor,s);l.node.classList.add("apexcharts-gridline"),a.add(l)}},{key:"_drawGridBandRect",value:function(t){var e=t.c,n=t.x1,i=t.y1,r=t.x2,a=t.y2,o=t.type,s=this.w,l=new x(this.ctx);if("column"!==o||"datetime"!==s.config.xaxis.type){var c=s.config.grid[o].colors[e],u=l.drawRect(n,i,r,a,0,c,s.config.grid[o].opacity);this.elg.add(u),u.attr("clip-path","url(#gridRectMask".concat(s.globals.cuid,")")),u.node.classList.add("apexcharts-grid-".concat(o))}}},{key:"_drawXYLines",value:function(t){var e=this,n=t.xCount,i=t.tickAmount,r=this.w;if(r.config.grid.xaxis.lines.show||r.config.xaxis.axisTicks.show){var a=r.globals.padHorizontal,o=r.globals.gridHeight;r.globals.timescaleLabels.length?function(t){for(var i=t.xC,r=t.x1,a=t.y1,o=t.x2,s=t.y2,l=0;l<i;l++)r=e.xaxisLabels[l].position,o=e.xaxisLabels[l].position,e._drawGridLines({i:l,x1:r,y1:a,x2:o,y2:s,xCount:n,parent:e.elgridLinesV})}({xC:n,x1:a,y1:0,x2:void 0,y2:o}):(r.globals.isXNumeric&&(n=r.globals.xAxisScale.result.length),r.config.xaxis.convertedCatToNumeric&&(n=r.globals.xaxisLabelsCount),function(t){for(var i=t.xC,a=t.x1,o=t.y1,s=t.x2,l=t.y2,c=0;c<i+(r.globals.isXNumeric?0:1);c++)0===c&&1===i&&1===r.globals.dataPoints&&(s=a=r.globals.gridWidth/2),e._drawGridLines({i:c,x1:a,y1:o,x2:s,y2:l,xCount:n,parent:e.elgridLinesV}),s=a+=r.globals.gridWidth/(r.globals.isXNumeric?i-1:i)}({xC:n,x1:a,y1:0,x2:void 0,y2:o}))}if(r.config.grid.yaxis.lines.show){var s=0,l=0,c=r.globals.gridWidth,u=i+1;this.isTimelineBar&&(u=r.globals.labels.length);for(var h=0;h<u+(this.isTimelineBar?1:0);h++)this._drawGridLine({x1:0,y1:s,x2:c,y2:l,parent:this.elgridLinesH}),l=s+=r.globals.gridHeight/(this.isTimelineBar?u:i)}}},{key:"_drawInvertedXYLines",value:function(t){var e=t.xCount,n=this.w;if(n.config.grid.xaxis.lines.show||n.config.xaxis.axisTicks.show)for(var i,r=n.globals.padHorizontal,a=n.globals.gridHeight,o=0;o<e+1;o++)n.config.grid.xaxis.lines.show&&this._drawGridLine({x1:r,y1:0,x2:i,y2:a,parent:this.elgridLinesV}),new W(this.ctx).drawXaxisTicks(r,this.elg),i=r=r+n.globals.gridWidth/e+.3;if(n.config.grid.yaxis.lines.show)for(var s=0,l=0,c=n.globals.gridWidth,u=0;u<n.globals.dataPoints+1;u++)this._drawGridLine({x1:0,y1:s,x2:c,y2:l,parent:this.elgridLinesH}),l=s+=n.globals.gridHeight/n.globals.dataPoints}},{key:"renderGrid",value:function(){var t=this.w,e=new x(this.ctx);this.elg=e.group({class:"apexcharts-grid"}),this.elgridLinesH=e.group({class:"apexcharts-gridlines-horizontal"}),this.elgridLinesV=e.group({class:"apexcharts-gridlines-vertical"}),this.elg.add(this.elgridLinesH),this.elg.add(this.elgridLinesV),t.config.grid.show||(this.elgridLinesV.hide(),this.elgridLinesH.hide());for(var n,i=t.globals.yAxisScale.length?t.globals.yAxisScale[0].result.length-1:5,r=0;r<t.globals.series.length&&(void 0!==t.globals.yAxisScale[r]&&(i=t.globals.yAxisScale[r].result.length-1),!(i>2));r++);return!t.globals.isBarHorizontal||this.isTimelineBar?(n=this.xaxisLabels.length,this.isTimelineBar&&(i=t.globals.labels.length),this._drawXYLines({xCount:n,tickAmount:i})):(n=i,this._drawInvertedXYLines({xCount:n,tickAmount:i})),this.drawGridBands(n,i),{el:this.elg,xAxisTickWidth:t.globals.gridWidth/n}}},{key:"drawGridBands",value:function(t,e){var n=this.w;if(void 0!==n.config.grid.row.colors&&n.config.grid.row.colors.length>0)for(var i=0,r=n.globals.gridHeight/e,a=n.globals.gridWidth,o=0,s=0;o<e;o++,s++)s>=n.config.grid.row.colors.length&&(s=0),this._drawGridBandRect({c:s,x1:0,y1:i,x2:a,y2:r,type:"row"}),i+=n.globals.gridHeight/e;if(void 0!==n.config.grid.column.colors&&n.config.grid.column.colors.length>0)for(var l="category"===n.config.xaxis.type||n.config.xaxis.convertedCatToNumeric?t-1:t,c=n.globals.padHorizontal,u=n.globals.padHorizontal+n.globals.gridWidth/l,h=n.globals.gridHeight,f=0,d=0;f<t;f++,d++)d>=n.config.grid.column.colors.length&&(d=0),this._drawGridBandRect({c:d,x1:c,y1:0,x2:u,y2:h,type:"column"}),c+=n.globals.gridWidth/l}}]),t}(),B=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"niceScale",value:function(t,e,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:10,a=arguments.length>5?arguments[5]:void 0,o=this.w;if("dataPoints"===r&&(r=o.globals.dataPoints-1),t===Number.MIN_VALUE&&0===e||!g.isNumber(t)&&!g.isNumber(e)||t===Number.MIN_VALUE&&e===-Number.MAX_VALUE){t=0,e=r;var s=this.linearScale(t,e,r);return s}t>e?(console.warn("axis.min cannot be greater than axis.max"),e=t+.1):t===e&&(t=0===t?0:t-.5,e=0===e?2:e+.5);var l=[],c=Math.abs(e-t);c<1&&a&&("candlestick"===o.config.chart.type||"candlestick"===o.config.series[i].type||o.globals.isRangeData)&&(e*=1.01);var u=r+1;u<2?u=2:u>2&&(u-=2);var h=c/u,f=Math.floor(g.log10(h)),d=Math.pow(10,f),p=Math.round(h/d);p<1&&(p=1);var m=p*d,v=m*Math.floor(t/m),x=m*Math.ceil(e/m),b=v;if(a&&c>2){for(;l.push(b),!((b+=m)>x););return{result:l,niceMin:l[0],niceMax:l[l.length-1]}}var y=t;(l=[]).push(y);for(var w=Math.abs(e-t)/r,k=0;k<=r;k++)y+=w,l.push(y);return l[l.length-2]>=e&&l.pop(),{result:l,niceMin:l[0],niceMax:l[l.length-1]}}},{key:"linearScale",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,i=Math.abs(e-t),r=i/n;n===Number.MAX_VALUE&&(n=10,r=1);for(var a=[],o=t;n>=0;)a.push(o),o+=r,n-=1;return{result:a,niceMin:a[0],niceMax:a[a.length-1]}}},{key:"logarithmicScale",value:function(t,e,n,i){(e<0||e===Number.MIN_VALUE)&&(e=.01);for(var r=Math.log(e)/Math.log(10),a=Math.log(n)/Math.log(10),o=Math.abs(n-e)/i,s=[],l=e;i>=0;)s.push(l),l+=o,i-=1;var c=s.map((function(t,i){t<=0&&(t=.01);var o=(a-r)/(n-e),s=Math.pow(10,r+o*(t-r));return Math.round(s/g.roundToBase(s,10))*g.roundToBase(s,10)}));return 0===c[0]&&(c[0]=1),{result:c,niceMin:c[0],niceMax:c[c.length-1]}}},{key:"setYScaleForIndex",value:function(t,e,n){var i=this.w.globals,r=this.w.config,a=i.isBarHorizontal?r.xaxis:r.yaxis[t];void 0===i.yAxisScale[t]&&(i.yAxisScale[t]=[]);var o=Math.abs(n-e);if(a.logarithmic&&o<=5&&(i.invalidLogScale=!0),a.logarithmic&&o>5)i.allSeriesCollapsed=!1,i.yAxisScale[t]=this.logarithmicScale(t,e,n,a.tickAmount?a.tickAmount:Math.floor(Math.log10(n)));else if(n!==-Number.MAX_VALUE&&g.isNumber(n))if(i.allSeriesCollapsed=!1,void 0===a.min&&void 0===a.max||a.forceNiceScale){var s=void 0===r.yaxis[t].max&&void 0===r.yaxis[t].min||r.yaxis[t].forceNiceScale;i.yAxisScale[t]=this.niceScale(e,n,o,t,a.tickAmount?a.tickAmount:o<5&&o>1?o+1:5,s)}else i.yAxisScale[t]=this.linearScale(e,n,a.tickAmount);else i.yAxisScale[t]=this.linearScale(0,5,5)}},{key:"setXScale",value:function(t,e){var n=this.w,i=n.globals,r=n.config.xaxis,a=Math.abs(e-t);return e!==-Number.MAX_VALUE&&g.isNumber(e)?i.xAxisScale=this.niceScale(t,e,a,0,r.tickAmount?r.tickAmount:a<5&&a>1?a+1:5):i.xAxisScale=this.linearScale(0,5,5),i.xAxisScale}},{key:"setMultipleYScales",value:function(){var t=this,e=this.w.globals,n=this.w.config,i=e.minYArr.concat([]),r=e.maxYArr.concat([]),a=[];n.yaxis.forEach((function(e,o){var s=o;n.series.forEach((function(t,n){t.name===e.seriesName&&(s=n,o!==n?a.push({index:n,similarIndex:o,alreadyExists:!0}):a.push({index:n}))}));var l=i[s],c=r[s];t.setYScaleForIndex(o,l,c)})),this.sameScaleInMultipleAxes(i,r,a)}},{key:"sameScaleInMultipleAxes",value:function(t,e,n){var i=this,r=this.w.config,a=this.w.globals,o=[];n.forEach((function(t){t.alreadyExists&&(void 0===o[t.index]&&(o[t.index]=[]),o[t.index].push(t.index),o[t.index].push(t.similarIndex))})),a.yAxisSameScaleIndices=o,o.forEach((function(t,e){o.forEach((function(n,i){var r,a;e!==i&&(r=t,a=n,r.filter((function(t){return-1!==a.indexOf(t)}))).length>0&&(o[e]=o[e].concat(o[i]))}))}));var s=o.map((function(t){return t.filter((function(e,n){return t.indexOf(e)===n}))})).map((function(t){return t.sort()}));o=o.filter((function(t){return!!t}));var l=s.slice(),c=l.map((function(t){return JSON.stringify(t)}));l=l.filter((function(t,e){return c.indexOf(JSON.stringify(t))===e}));var u=[],h=[];t.forEach((function(t,n){l.forEach((function(i,r){i.indexOf(n)>-1&&(void 0===u[r]&&(u[r]=[],h[r]=[]),u[r].push({key:n,value:t}),h[r].push({key:n,value:e[n]}))}))}));var f=Array.apply(null,Array(l.length)).map(Number.prototype.valueOf,Number.MIN_VALUE),d=Array.apply(null,Array(l.length)).map(Number.prototype.valueOf,-Number.MAX_VALUE);u.forEach((function(t,e){t.forEach((function(t,n){f[e]=Math.min(t.value,f[e])}))})),h.forEach((function(t,e){t.forEach((function(t,n){d[e]=Math.max(t.value,d[e])}))})),t.forEach((function(t,e){h.forEach((function(t,n){var o=f[n],s=d[n];r.chart.stacked&&(s=0,t.forEach((function(t,e){t.value!==-Number.MAX_VALUE&&(s+=t.value),o!==Number.MIN_VALUE&&(o+=u[n][e].value)}))),t.forEach((function(n,l){t[l].key===e&&(void 0!==r.yaxis[e].min&&(o="function"==typeof r.yaxis[e].min?r.yaxis[e].min(a.minY):r.yaxis[e].min),void 0!==r.yaxis[e].max&&(s="function"==typeof r.yaxis[e].max?r.yaxis[e].max(a.maxY):r.yaxis[e].max),i.setYScaleForIndex(e,o,s))}))}))}))}},{key:"autoScaleY",value:function(t,e,n){t||(t=this);var i=t.w;if(i.globals.isMultipleYAxis||i.globals.collapsedSeries.length)return console.warn("autoScaleYaxis is not supported in a multi-yaxis chart."),e;var r=i.globals.seriesX[0],a=i.config.chart.stacked;return e.forEach((function(t,o){for(var s=0,l=0;l<r.length;l++)if(r[l]>=n.xaxis.min){s=l;break}var c,u,h=i.globals.minYArr[o],f=i.globals.maxYArr[o],d=i.globals.stackedSeriesTotals;i.globals.series.forEach((function(o,l){var p=o[s];a?(p=d[s],c=u=p,d.forEach((function(t,e){r[e]<=n.xaxis.max&&r[e]>=n.xaxis.min&&(t>u&&null!==t&&(u=t),o[e]<c&&null!==o[e]&&(c=o[e]))}))):(c=u=p,o.forEach((function(t,e){if(r[e]<=n.xaxis.max&&r[e]>=n.xaxis.min){var a=t,o=t;i.globals.series.forEach((function(n,i){null!==t&&(a=Math.min(n[e],a),o=Math.max(n[e],o))})),o>u&&null!==o&&(u=o),a<c&&null!==a&&(c=a)}}))),void 0===c&&void 0===u&&(c=h,u=f),(u*=u<0?.9:1.1)<0&&u<f&&(u=f),(c*=c<0?1.1:.9)<0&&c>h&&(c=h),e.length>1?(e[l].min=void 0===t.min?c:t.min,e[l].max=void 0===t.max?u:t.max):(e[0].min=void 0===t.min?c:t.min,e[0].max=void 0===t.max?u:t.max)}))})),e}}]),t}(),V=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.scales=new B(e)}return s(t,[{key:"init",value:function(){this.setYRange(),this.setXRange(),this.setZRange()}},{key:"getMinYMaxY",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Number.MAX_VALUE,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-Number.MAX_VALUE,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=this.w.config,a=this.w.globals,o=-Number.MAX_VALUE,s=Number.MIN_VALUE;null===i&&(i=t+1);var l=a.series,c=l,u=l;"candlestick"===r.chart.type?(c=a.seriesCandleL,u=a.seriesCandleH):a.isRangeData&&(c=a.seriesRangeStart,u=a.seriesRangeEnd);for(var h=t;h<i;h++){a.dataPoints=Math.max(a.dataPoints,l[h].length);for(var f=0;f<a.series[h].length;f++){var d=l[h][f];null!==d&&g.isNumber(d)?(o=Math.max(o,u[h][f]),e=Math.min(e,c[h][f]),n=Math.max(n,c[h][f]),"candlestick"===this.w.config.chart.type&&(o=Math.max(o,a.seriesCandleO[h][f]),o=Math.max(o,a.seriesCandleH[h][f]),o=Math.max(o,a.seriesCandleL[h][f]),n=o=Math.max(o,a.seriesCandleC[h][f])),g.isFloat(d)&&(d=g.noExponents(d),a.yValueDecimal=Math.max(a.yValueDecimal,d.toString().split(".")[1].length)),s>c[h][f]&&c[h][f]<0&&(s=c[h][f])):a.hasNullValues=!0}}return"rangeBar"===r.chart.type&&a.seriesRangeStart.length&&"datetime"===r.xaxis.type&&(s=e),"bar"===r.chart.type&&(s<0&&o<0&&(o=0),s===Number.MIN_VALUE&&(s=0)),{minY:s,maxY:o,lowestY:e,highestY:n}}},{key:"setYRange",value:function(){var t=this.w.globals,e=this.w.config;t.maxY=-Number.MAX_VALUE,t.minY=Number.MIN_VALUE;var n=Number.MAX_VALUE;if(t.isMultipleYAxis)for(var i=0;i<t.series.length;i++){var r=this.getMinYMaxY(i,n,null,i+1);t.minYArr.push(r.minY),t.maxYArr.push(r.maxY),n=r.lowestY}var a=this.getMinYMaxY(0,n,null,t.series.length);if(t.minY=a.minY,t.maxY=a.maxY,n=a.lowestY,e.chart.stacked&&this._setStackedMinMax(),("line"===e.chart.type||"area"===e.chart.type||"candlestick"===e.chart.type)&&t.minY===Number.MIN_VALUE&&n!==-Number.MAX_VALUE&&n!==t.maxY){var o=t.maxY-n;n>=0&&n<=10&&(o=0),t.minY=n-5*o/100,n>0&&t.minY<0&&(t.minY=0),t.maxY=t.maxY+5*o/100}return e.yaxis.forEach((function(e,n){void 0!==e.max&&("number"==typeof e.max?t.maxYArr[n]=e.max:"function"==typeof e.max&&(t.maxYArr[n]=e.max(t.maxY)),t.maxY=t.maxYArr[n]),void 0!==e.min&&("number"==typeof e.min?t.minYArr[n]=e.min:"function"==typeof e.min&&(t.minYArr[n]=e.min(t.minY)),t.minY=t.minYArr[n])})),t.isBarHorizontal&&["min","max"].forEach((function(n){void 0!==e.xaxis[n]&&"number"==typeof e.xaxis[n]&&("min"===n?t.minY=e.xaxis[n]:t.maxY=e.xaxis[n])})),t.isMultipleYAxis?(this.scales.setMultipleYScales(),t.minY=n,t.yAxisScale.forEach((function(e,n){t.minYArr[n]=e.niceMin,t.maxYArr[n]=e.niceMax}))):(this.scales.setYScaleForIndex(0,t.minY,t.maxY),t.minY=t.yAxisScale[0].niceMin,t.maxY=t.yAxisScale[0].niceMax,t.minYArr[0]=t.yAxisScale[0].niceMin,t.maxYArr[0]=t.yAxisScale[0].niceMax),{minY:t.minY,maxY:t.maxY,minYArr:t.minYArr,maxYArr:t.maxYArr}}},{key:"setXRange",value:function(){var t=this.w.globals,e=this.w.config,n="numeric"===e.xaxis.type||"datetime"===e.xaxis.type||"category"===e.xaxis.type&&!t.noLabelsProvided||t.noLabelsProvided||t.isXNumeric;if(t.isXNumeric&&function(){for(var e=0;e<t.series.length;e++)if(t.labels[e])for(var n=0;n<t.labels[e].length;n++)null!==t.labels[e][n]&&g.isNumber(t.labels[e][n])&&(t.maxX=Math.max(t.maxX,t.labels[e][n]),t.initialMaxX=Math.max(t.maxX,t.labels[e][n]),t.minX=Math.min(t.minX,t.labels[e][n]),t.initialMinX=Math.min(t.minX,t.labels[e][n]))}(),t.noLabelsProvided&&0===e.xaxis.categories.length&&(t.maxX=t.labels[t.labels.length-1],t.initialMaxX=t.labels[t.labels.length-1],t.minX=1,t.initialMinX=1),t.isXNumeric||t.noLabelsProvided||t.dataFormatXNumeric){var i;if(void 0===e.xaxis.tickAmount?(i=Math.round(t.svgWidth/150),"numeric"===e.xaxis.type&&t.dataPoints<30&&(i=t.dataPoints-1),i>t.dataPoints&&0!==t.dataPoints&&(i=t.dataPoints-1)):"dataPoints"===e.xaxis.tickAmount?(t.series.length>1&&(i=t.series[t.maxValsInArrayIndex].length-1),t.isXNumeric&&(i=t.maxX-t.minX-1)):i=e.xaxis.tickAmount,t.xTickAmount=i,void 0!==e.xaxis.max&&"number"==typeof e.xaxis.max&&(t.maxX=e.xaxis.max),void 0!==e.xaxis.min&&"number"==typeof e.xaxis.min&&(t.minX=e.xaxis.min),void 0!==e.xaxis.range&&(t.minX=t.maxX-e.xaxis.range),t.minX!==Number.MAX_VALUE&&t.maxX!==-Number.MAX_VALUE)if(e.xaxis.convertedCatToNumeric&&!t.dataFormatXNumeric){for(var r=[],a=t.minX-1;a<t.maxX;a++)r.push(a+1);t.xAxisScale={result:r,niceMin:r[0],niceMax:r[r.length-1]}}else t.xAxisScale=this.scales.setXScale(t.minX,t.maxX);else t.xAxisScale=this.scales.linearScale(1,i,i),t.noLabelsProvided&&t.labels.length>0&&(t.xAxisScale=this.scales.linearScale(1,t.labels.length,i-1),t.seriesX=t.labels.slice());n&&(t.labels=t.xAxisScale.result.slice())}return this._handleSingleDataPoint(),this._getMinXDiff(),{minX:t.minX,maxX:t.maxX}}},{key:"setZRange",value:function(){var t=this.w.globals;if(t.isDataXYZ)for(var e=0;e<t.series.length;e++)if(void 0!==t.seriesZ[e])for(var n=0;n<t.seriesZ[e].length;n++)null!==t.seriesZ[e][n]&&g.isNumber(t.seriesZ[e][n])&&(t.maxZ=Math.max(t.maxZ,t.seriesZ[e][n]),t.minZ=Math.min(t.minZ,t.seriesZ[e][n]))}},{key:"_handleSingleDataPoint",value:function(){var t=this.w.globals,e=this.w.config;if(t.minX===t.maxX){var n=new P(this.ctx);if("datetime"===e.xaxis.type){var i=n.getDate(t.minX);i.setUTCDate(i.getDate()-2),t.minX=new Date(i).getTime();var r=n.getDate(t.maxX);r.setUTCDate(r.getDate()+2),t.maxX=new Date(r).getTime()}else("numeric"===e.xaxis.type||"category"===e.xaxis.type&&!t.noLabelsProvided)&&(t.minX=t.minX-2,t.initialMinX=t.minX,t.maxX=t.maxX+2,t.initialMaxX=t.maxX)}}},{key:"_getMinXDiff",value:function(){var t=this.w.globals;t.isXNumeric&&t.seriesX.forEach((function(e,n){1===e.length&&e.push(t.seriesX[t.maxValsInArrayIndex][t.seriesX[t.maxValsInArrayIndex].length-1]);var i=e.slice();i.sort((function(t,e){return t-e})),i.forEach((function(e,i){if(i>0){var r=e-t.seriesX[n][i-1];r>0&&(t.minXDiff=Math.min(r,t.minXDiff))}})),1===t.dataPoints&&t.minXDiff===Number.MAX_VALUE&&(t.minXDiff=.5)}))}},{key:"_setStackedMinMax",value:function(){var t=this.w.globals,e=[],n=[];if(t.series.length)for(var i=0;i<t.series[t.maxValsInArrayIndex].length;i++)for(var r=0,a=0,o=0;o<t.series.length;o++)null!==t.series[o][i]&&g.isNumber(t.series[o][i])&&(t.series[o][i]>0?r=r+parseFloat(t.series[o][i])+1e-4:a+=parseFloat(t.series[o][i])),o===t.series.length-1&&(e.push(r),n.push(a));for(var s=0;s<e.length;s++)t.maxY=Math.max(t.maxY,e[s]),t.minY=Math.min(t.minY,n[s])}}]),t}(),U=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w;var n=this.w;this.xaxisFontSize=n.config.xaxis.labels.style.fontSize,this.axisFontFamily=n.config.xaxis.labels.style.fontFamily,this.xaxisForeColors=n.config.xaxis.labels.style.colors,this.isCategoryBarHorizontal="bar"===n.config.chart.type&&n.config.plotOptions.bar.horizontal,this.xAxisoffX=0,"bottom"===n.config.xaxis.position&&(this.xAxisoffX=n.globals.gridHeight),this.drawnLabels=[],this.axesUtils=new Y(e)}return s(t,[{key:"drawYaxis",value:function(t){var e=this.w,n=new x(this.ctx),i=e.config.yaxis[t].labels.style,r=i.fontSize,a=i.fontFamily,o=i.fontWeight,s=n.group({class:"apexcharts-yaxis",rel:t,transform:"translate("+e.globals.translateYAxisX[t]+", 0)"});if(!e.config.yaxis[t].show)return s;var l=n.group({class:"apexcharts-yaxis-texts-g"});s.add(l);var c=e.globals.yAxisScale[t].result.length-1,u=e.globals.gridHeight/c,h=e.globals.translateY,f=e.globals.yLabelFormatters[t],d=e.globals.yAxisScale[t].result.slice();d=this.axesUtils.checkForReversedLabels(t,d);var p="";if(e.config.yaxis[t].labels.show)for(var g=function(s){var g=d[s];g=f(g,s);var m=e.config.yaxis[t].labels.padding;e.config.yaxis[t].opposite&&0!==e.config.yaxis.length&&(m*=-1);var v=n.drawText({x:m,y:h+c/10+e.config.yaxis[t].labels.offsetY+1,text:g,textAnchor:e.config.yaxis[t].opposite?"start":"end",fontSize:r,fontFamily:a,fontWeight:o,foreColor:Array.isArray(i.colors)?i.colors[s]:i.colors,isPlainText:!1,cssClass:"apexcharts-yaxis-label "+i.cssClass});if(s===c&&(p=v),l.add(v),0!==e.config.yaxis[t].labels.rotate){var x=n.rotateAroundCenter(p.node),b=n.rotateAroundCenter(v.node);v.node.setAttribute("transform","rotate(".concat(e.config.yaxis[t].labels.rotate," ").concat(x.x," ").concat(b.y,")"))}h+=u},m=c;m>=0;m--)g(m);if(void 0!==e.config.yaxis[t].title.text){var v=n.group({class:"apexcharts-yaxis-title"}),b=0;e.config.yaxis[t].opposite&&(b=e.globals.translateYAxisX[t]);var y=n.drawText({x:b,y:e.globals.gridHeight/2+e.globals.translateY+e.config.yaxis[t].title.offsetY,text:e.config.yaxis[t].title.text,textAnchor:"end",foreColor:e.config.yaxis[t].title.style.color,fontSize:e.config.yaxis[t].title.style.fontSize,fontWeight:e.config.yaxis[t].title.style.fontWeight,fontFamily:e.config.yaxis[t].title.style.fontFamily,cssClass:"apexcharts-yaxis-title-text "+e.config.yaxis[t].title.style.cssClass});v.add(y),s.add(v)}var w=e.config.yaxis[t].axisBorder,k=31+w.offsetX;if(e.config.yaxis[t].opposite&&(k=-31-w.offsetX),w.show){var S=n.drawLine(k,e.globals.translateY+w.offsetY-2,k,e.globals.gridHeight+e.globals.translateY+w.offsetY+2,w.color,0,w.width);s.add(S)}return e.config.yaxis[t].axisTicks.show&&this.axesUtils.drawYAxisTicks(k,c,w,e.config.yaxis[t].axisTicks,t,u,s),s}},{key:"drawYaxisInversed",value:function(t){var e=this.w,n=new x(this.ctx),i=n.group({class:"apexcharts-xaxis apexcharts-yaxis-inversed"}),r=n.group({class:"apexcharts-xaxis-texts-g",transform:"translate(".concat(e.globals.translateXAxisX,", ").concat(e.globals.translateXAxisY,")")});i.add(r);var a=e.globals.yAxisScale[t].result.length-1,o=e.globals.gridWidth/a+.1,s=o+e.config.xaxis.labels.offsetX,l=e.globals.xLabelFormatter,c=e.globals.yAxisScale[t].result.slice(),u=e.globals.timescaleLabels;u.length>0&&(this.xaxisLabels=u.slice(),a=(c=u.slice()).length),c=this.axesUtils.checkForReversedLabels(t,c);var h=u.length;if(e.config.xaxis.labels.show)for(var f=h?0:a;h?f<h:f>=0;h?f++:f--){var d=c[f];d=l(d,f);var p=e.globals.gridWidth+e.globals.padHorizontal-(s-o+e.config.xaxis.labels.offsetX);if(u.length){var g=this.axesUtils.getLabel(c,u,p,f,this.drawnLabels,this.xaxisFontSize);p=g.x,d=g.text,this.drawnLabels.push(g.text),0===f&&e.globals.skipFirstTimelinelabel&&(d=""),f===c.length-1&&e.globals.skipLastTimelinelabel&&(d="")}var m=n.drawText({x:p,y:this.xAxisoffX+e.config.xaxis.labels.offsetY+30-("top"===e.config.xaxis.position?e.globals.xAxisHeight+e.config.xaxis.axisTicks.height-2:0),text:d,textAnchor:"middle",foreColor:Array.isArray(this.xaxisForeColors)?this.xaxisForeColors[t]:this.xaxisForeColors,fontSize:this.xaxisFontSize,fontFamily:this.xaxisFontFamily,fontWeight:e.config.xaxis.labels.style.fontWeight,isPlainText:!1,cssClass:"apexcharts-xaxis-label "+e.config.xaxis.labels.style.cssClass});r.add(m),m.tspan(d);var v=document.createElementNS(e.globals.SVGNS,"title");v.textContent=d,m.node.appendChild(v),s+=o}return this.inversedYAxisTitleText(i),this.inversedYAxisBorder(i),i}},{key:"inversedYAxisBorder",value:function(t){var e=this.w,n=new x(this.ctx),i=e.config.xaxis.axisBorder;if(i.show){var r=0;"bar"===e.config.chart.type&&e.globals.isXNumeric&&(r-=15);var a=n.drawLine(e.globals.padHorizontal+r+i.offsetX,this.xAxisoffX,e.globals.gridWidth,this.xAxisoffX,i.color,0,i.height);t.add(a)}}},{key:"inversedYAxisTitleText",value:function(t){var e=this.w,n=new x(this.ctx);if(void 0!==e.config.xaxis.title.text){var i=n.group({class:"apexcharts-xaxis-title apexcharts-yaxis-title-inversed"}),r=n.drawText({x:e.globals.gridWidth/2,y:this.xAxisoffX+parseFloat(this.xaxisFontSize)+parseFloat(e.config.xaxis.title.style.fontSize)+20,text:e.config.xaxis.title.text,textAnchor:"middle",fontSize:e.config.xaxis.title.style.fontSize,fontFamily:e.config.xaxis.title.style.fontFamily,fontWeight:e.config.xaxis.title.style.fontWeight,cssClass:"apexcharts-xaxis-title-text "+e.config.xaxis.title.style.cssClass});i.add(r),t.add(i)}}},{key:"yAxisTitleRotate",value:function(t,e){var n=this.w,i=new x(this.ctx),r={width:0,height:0},a={width:0,height:0},o=n.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(t,"'] .apexcharts-yaxis-texts-g"));null!==o&&(r=o.getBoundingClientRect());var s=n.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(t,"'] .apexcharts-yaxis-title text"));if(null!==s&&(a=s.getBoundingClientRect()),null!==s){var l=this.xPaddingForYAxisTitle(t,r,a,e);s.setAttribute("x",l.xPos-(e?10:0))}if(null!==s){var c=i.rotateAroundCenter(s);s.setAttribute("transform","rotate(".concat(e?"":"-").concat(n.config.yaxis[t].title.rotate," ").concat(c.x," ").concat(c.y,")"))}}},{key:"xPaddingForYAxisTitle",value:function(t,e,n,i){var r=this.w,a=0,o=0,s=10;return void 0===r.config.yaxis[t].title.text||t<0?{xPos:o,padd:0}:(i?(o=e.width+r.config.yaxis[t].title.offsetX+n.width/2+s/2,0===(a+=1)&&(o-=s/2)):(o=-1*e.width+r.config.yaxis[t].title.offsetX+s/2+n.width/2,r.globals.isBarHorizontal&&(s=25,o=-1*e.width-r.config.yaxis[t].title.offsetX-s)),{xPos:o,padd:s})}},{key:"setYAxisXPosition",value:function(t,e){var n=this.w,i=0,r=0,a=18,o=1;n.config.yaxis.length>1&&(this.multipleYs=!0),n.config.yaxis.map((function(s,l){var c=n.globals.ignoreYAxisIndexes.indexOf(l)>-1||!s.show||s.floating||0===t[l].width,u=t[l].width+e[l].width;s.opposite?n.globals.isBarHorizontal?(r=n.globals.gridWidth+n.globals.translateX-1,n.globals.translateYAxisX[l]=r-s.labels.offsetX):(r=n.globals.gridWidth+n.globals.translateX+o,c||(o=o+u+20),n.globals.translateYAxisX[l]=r-s.labels.offsetX+20):(i=n.globals.translateX-a,c||(a=a+u+20),n.globals.translateYAxisX[l]=i+s.labels.offsetX)}))}},{key:"setYAxisTextAlignments",value:function(){var t=this.w,e=t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis");(e=g.listToArray(e)).forEach((function(e,n){var i=t.config.yaxis[n];if(void 0!==i.labels.align){var r=t.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(n,"'] .apexcharts-yaxis-texts-g")),a=t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(n,"'] .apexcharts-yaxis-label"));a=g.listToArray(a);var o=r.getBoundingClientRect();"left"===i.labels.align?(a.forEach((function(t,e){t.setAttribute("text-anchor","start")})),i.opposite||r.setAttribute("transform","translate(-".concat(o.width,", 0)"))):"center"===i.labels.align?(a.forEach((function(t,e){t.setAttribute("text-anchor","middle")})),r.setAttribute("transform","translate(".concat(o.width/2*(i.opposite?1:-1),", 0)"))):"right"===i.labels.align&&(a.forEach((function(t,e){t.setAttribute("text-anchor","end")})),i.opposite&&r.setAttribute("transform","translate(".concat(o.width,", 0)")))}}))}}]),t}(),G=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.documentEvent=g.bind(this.documentEvent,this)}return s(t,[{key:"addEventListener",value:function(t,e){var n=this.w;n.globals.events.hasOwnProperty(t)?n.globals.events[t].push(e):n.globals.events[t]=[e]}},{key:"removeEventListener",value:function(t,e){var n=this.w;if(n.globals.events.hasOwnProperty(t)){var i=n.globals.events[t].indexOf(e);-1!==i&&n.globals.events[t].splice(i,1)}}},{key:"fireEvent",value:function(t,e){var n=this.w;if(n.globals.events.hasOwnProperty(t)){e&&e.length||(e=[]);for(var i=n.globals.events[t],r=i.length,a=0;a<r;a++)i[a].apply(null,e)}}},{key:"setupEventHandlers",value:function(){var t=this,e=this.w,n=this.ctx,i=e.globals.dom.baseEl.querySelector(e.globals.chartClass);this.ctx.eventList.forEach((function(t){i.addEventListener(t,(function(t){var i=Object.assign({},e,{seriesIndex:e.globals.capturedSeriesIndex,dataPointIndex:e.globals.capturedDataPointIndex});"mousemove"===t.type||"touchmove"===t.type?"function"==typeof e.config.chart.events.mouseMove&&e.config.chart.events.mouseMove(t,n,i):("mouseup"===t.type&&1===t.which||"touchend"===t.type)&&("function"==typeof e.config.chart.events.click&&e.config.chart.events.click(t,n,i),n.ctx.events.fireEvent("click",[t,n,i]))}),{capture:!1,passive:!0})})),this.ctx.eventList.forEach((function(e){document.addEventListener(e,t.documentEvent)})),this.ctx.core.setupBrushHandler()}},{key:"documentEvent",value:function(t){var e=this.w,n=t.target.className;if("click"===t.type){var i=e.globals.dom.baseEl.querySelector(".apexcharts-menu");i&&i.classList.contains("apexcharts-menu-open")&&"apexcharts-menu-icon"!==n&&i.classList.remove("apexcharts-menu-open")}if("mousedown"===t.type){var r=e.globals.dom.Paper.select(".apexcharts-resizable-element").members;Array.prototype.forEach.call(r,(function(e){t.target.classList.contains("apexcharts-resizable-element")||t.target.classList.contains("svg_select_points")||e.selectize(!1)}))}e.globals.clientX="touchmove"===t.type?t.touches[0].clientX:t.clientX,e.globals.clientY="touchmove"===t.type?t.touches[0].clientY:t.clientY}}]),t}(),q=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"setCurrentLocaleValues",value:function(t){var e=this.w.config.chart.locales;window.Apex.chart&&window.Apex.chart.locales&&window.Apex.chart.locales.length>0&&(e=this.w.config.chart.locales.concat(window.Apex.chart.locales));var n=e.filter((function(e){return e.name===t}))[0];if(!n)throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");var i=g.extend(C,n);this.w.globals.locale=i.options}}]),t}(),$=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"drawAxis",value:function(t,e){var n,i,r=this.w.globals,a=this.w.config,o=new W(this.ctx),s=new U(this.ctx);r.axisCharts&&"radar"!==t&&(r.isBarHorizontal?(i=s.drawYaxisInversed(0),n=o.drawXaxisInversed(0),r.dom.elGraphical.add(n),r.dom.elGraphical.add(i)):(n=o.drawXaxis(),r.dom.elGraphical.add(n),a.yaxis.map((function(t,e){-1===r.ignoreYAxisIndexes.indexOf(e)&&(i=s.drawYaxis(e),r.dom.Paper.add(i))})))),a.yaxis.map((function(t,e){-1===r.ignoreYAxisIndexes.indexOf(e)&&s.yAxisTitleRotate(e,t.opposite)}))}}]),t}(),Z=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"drawXCrosshairs",value:function(){var t=this.w,e=new x(this.ctx),n=new m(this.ctx),i=t.config.xaxis.crosshairs.fill.gradient,r=t.config.xaxis.crosshairs.dropShadow,a=t.config.xaxis.crosshairs.fill.type,o=i.colorFrom,s=i.colorTo,l=i.opacityFrom,c=i.opacityTo,u=i.stops,h=r.enabled,f=r.left,d=r.top,p=r.blur,v=r.color,b=r.opacity,y=t.config.xaxis.crosshairs.fill.color;if(t.config.xaxis.crosshairs.show){"gradient"===a&&(y=e.drawGradient("vertical",o,s,l,c,null,u,null));var w=e.drawRect();1===t.config.xaxis.crosshairs.width&&(w=e.drawLine()),w.attr({class:"apexcharts-xcrosshairs",x:0,y:0,y2:t.globals.gridHeight,width:g.isNumber(t.config.xaxis.crosshairs.width)?t.config.xaxis.crosshairs.width:0,height:t.globals.gridHeight,fill:y,filter:"none","fill-opacity":t.config.xaxis.crosshairs.opacity,stroke:t.config.xaxis.crosshairs.stroke.color,"stroke-width":t.config.xaxis.crosshairs.stroke.width,"stroke-dasharray":t.config.xaxis.crosshairs.stroke.dashArray}),h&&(w=n.dropShadow(w,{left:f,top:d,blur:p,color:v,opacity:b})),t.globals.dom.elGraphical.add(w)}}},{key:"drawYCrosshairs",value:function(){var t=this.w,e=new x(this.ctx),n=t.config.yaxis[0].crosshairs;if(t.config.yaxis[0].crosshairs.show){var i=e.drawLine(0,0,t.globals.gridWidth,0,n.stroke.color,n.stroke.dashArray,n.stroke.width);i.attr({class:"apexcharts-ycrosshairs"}),t.globals.dom.elGraphical.add(i)}var r=e.drawLine(0,0,t.globals.gridWidth,0,n.stroke.color,0,0);r.attr({class:"apexcharts-ycrosshairs-hidden"}),t.globals.dom.elGraphical.add(r)}}]),t}(),K=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"checkResponsiveConfig",value:function(t){var e=this,n=this.w,i=n.config;if(0!==i.responsive.length){var r=i.responsive.slice();r.sort((function(t,e){return t.breakpoint>e.breakpoint?1:e.breakpoint>t.breakpoint?-1:0})).reverse();var a=new O({}),o=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=r[0].breakpoint,o=window.innerWidth>0?window.innerWidth:screen.width;if(o>i){var s=_.extendArrayProps(a,n.globals.initialConfig);t=g.extend(s,t),t=g.extend(n.config,t),e.overrideResponsiveOptions(t)}else for(var l=0;l<r.length;l++)o<r[l].breakpoint&&(t=_.extendArrayProps(a,r[l].options),t=g.extend(n.config,t),e.overrideResponsiveOptions(t))};if(t){var s=_.extendArrayProps(a,t);s=g.extend(n.config,s),o(s=g.extend(s,t))}else o({})}}},{key:"overrideResponsiveOptions",value:function(t){var e=new O(t).init({responsiveOverride:!0});this.w.config=e}}]),t}(),Q=function(){function t(e){a(this,t),this.ctx=e,this.colors=[],this.w=e.w;var n=this.w;this.isColorFn=!1,this.isBarDistributed=n.config.plotOptions.bar.distributed&&("bar"===n.config.chart.type||"rangeBar"===n.config.chart.type)}return s(t,[{key:"init",value:function(){this.setDefaultColors()}},{key:"setDefaultColors",value:function(){var t=this,e=this.w,n=new g;if(e.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(e.config.theme.mode)),void 0===e.config.colors?e.globals.colors=this.predefined():(e.globals.colors=e.config.colors,e.globals.axisCharts&&"bar"!==e.config.chart.type&&Array.isArray(e.config.colors)&&e.config.colors.length>0&&e.config.colors.length===e.config.series.length&&(e.globals.colors=e.config.colors.map((function(n,i){return"function"==typeof n?(t.isColorFn=!0,n({value:e.globals.axisCharts?e.globals.series[i][0]?e.globals.series[i][0]:0:e.globals.series[i],seriesIndex:i,dataPointIndex:i,w:e})):n})))),e.config.theme.monochrome.enabled){var i=[],r=e.globals.series.length;this.isBarDistributed&&(r=e.globals.series[0].length*e.globals.series.length);for(var a=e.config.theme.monochrome.color,o=1/(r/e.config.theme.monochrome.shadeIntensity),s=e.config.theme.monochrome.shadeTo,l=0,c=0;c<r;c++){var u=void 0;"dark"===s?(u=n.shadeColor(-1*l,a),l+=o):(u=n.shadeColor(l,a),l+=o),i.push(u)}e.globals.colors=i.slice()}var h=e.globals.colors.slice();this.pushExtraColors(e.globals.colors),["fill","stroke"].forEach((function(n){void 0===e.config[n].colors?e.globals[n].colors=t.isColorFn?e.config.colors:h:e.globals[n].colors=e.config[n].colors.slice(),t.pushExtraColors(e.globals[n].colors)})),void 0===e.config.dataLabels.style.colors?e.globals.dataLabels.style.colors=h:e.globals.dataLabels.style.colors=e.config.dataLabels.style.colors.slice(),this.pushExtraColors(e.globals.dataLabels.style.colors,50),void 0===e.config.plotOptions.radar.polygons.fill.colors?e.globals.radarPolygons.fill.colors=["dark"===e.config.theme.mode?"#202D48":"#fff"]:e.globals.radarPolygons.fill.colors=e.config.plotOptions.radar.polygons.fill.colors.slice(),this.pushExtraColors(e.globals.radarPolygons.fill.colors,20),void 0===e.config.markers.colors?e.globals.markers.colors=h:e.globals.markers.colors=e.config.markers.colors.slice(),this.pushExtraColors(e.globals.markers.colors)}},{key:"pushExtraColors",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=this.w,r=e||i.globals.series.length;if(null===n&&(n=this.isBarDistributed||"heatmap"===i.config.chart.type&&i.config.plotOptions.heatmap.colorScale.inverse),n&&(r=i.globals.series[0].length*i.globals.series.length),t.length<r)for(var a=r-t.length,o=0;o<a;o++)t.push(t[o])}},{key:"updateThemeOptions",value:function(t){t.chart=t.chart||{},t.tooltip=t.tooltip||{};var e=t.theme.mode||"light",n=t.theme.palette?t.theme.palette:"dark"===e?"palette4":"palette1",i=t.chart.foreColor?t.chart.foreColor:"dark"===e?"#f6f7f8":"#373d3f";return t.tooltip.theme=e,t.chart.foreColor=i,t.theme.palette=n,t}},{key:"predefined",value:function(){switch(this.w.config.theme.palette){case"palette1":this.colors=["#008FFB","#00E396","#FEB019","#FF4560","#775DD0"];break;case"palette2":this.colors=["#3f51b5","#03a9f4","#4caf50","#f9ce1d","#FF9800"];break;case"palette3":this.colors=["#33b2df","#546E7A","#d4526e","#13d8aa","#A5978B"];break;case"palette4":this.colors=["#4ecdc4","#c7f464","#81D4FA","#fd6a6a","#546E7A"];break;case"palette5":this.colors=["#2b908f","#f9a3a4","#90ee7e","#fa4443","#69d2e7"];break;case"palette6":this.colors=["#449DD1","#F86624","#EA3546","#662E9B","#C5D86D"];break;case"palette7":this.colors=["#D7263D","#1B998B","#2E294E","#F46036","#E2C044"];break;case"palette8":this.colors=["#662E9B","#F86624","#F9C80E","#EA3546","#43BCCD"];break;case"palette9":this.colors=["#5C4742","#A5978B","#8D5B4C","#5A2A27","#C4BBAF"];break;case"palette10":this.colors=["#A300D6","#7D02EB","#5653FE","#2983FF","#00B1F2"];break;default:this.colors=["#008FFB","#00E396","#FEB019","#FF4560","#775DD0"]}return this.colors}}]),t}(),J=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"draw",value:function(){this.drawTitleSubtitle("title"),this.drawTitleSubtitle("subtitle")}},{key:"drawTitleSubtitle",value:function(t){var e=this.w,n="title"===t?e.config.title:e.config.subtitle,i=e.globals.svgWidth/2,r=n.offsetY,a="middle";if("left"===n.align?(i=10,a="start"):"right"===n.align&&(i=e.globals.svgWidth-10,a="end"),i+=n.offsetX,r=r+parseInt(n.style.fontSize,10)+n.margin/2,void 0!==n.text){var o=new x(this.ctx).drawText({x:i,y:r,text:n.text,textAnchor:a,fontSize:n.style.fontSize,fontFamily:n.style.fontFamily,fontWeight:n.style.fontWeight,foreColor:n.style.color,opacity:1});o.node.setAttribute("class","apexcharts-".concat(t,"-text")),e.globals.dom.Paper.add(o)}}}]),t}(),tt=function(){function t(e){a(this,t),this.w=e.w,this.dCtx=e}return s(t,[{key:"getTitleSubtitleCoords",value:function(t){var e=this.w,n=0,i=0,r="title"===t?e.config.title.floating:e.config.subtitle.floating,a=e.globals.dom.baseEl.querySelector(".apexcharts-".concat(t,"-text"));if(null!==a&&!r){var o=a.getBoundingClientRect();n=o.width,i=e.globals.axisCharts?o.height+5:o.height}return{width:n,height:i}}},{key:"getLegendsRect",value:function(){var t=this.w,e=t.globals.dom.baseEl.querySelector(".apexcharts-legend"),n=Object.assign({},g.getBoundingClientRect(e));return null!==e&&!t.config.legend.floating&&t.config.legend.show?this.dCtx.lgRect={x:n.x,y:n.y,height:n.height,width:0===n.height?0:n.width}:this.dCtx.lgRect={x:0,y:0,height:0,width:0},"left"!==t.config.legend.position&&"right"!==t.config.legend.position||1.5*this.dCtx.lgRect.width>t.globals.svgWidth&&(this.dCtx.lgRect.width=t.globals.svgWidth/1.5),this.dCtx.lgRect}},{key:"getLargestStringFromMultiArr",value:function(t,e){var n=t;if(this.w.globals.isMultiLineX){var i=e.map((function(t,e){return Array.isArray(t)?t.length:1})),r=Math.max.apply(Math,p(i));n=e[i.indexOf(r)]}return n}}]),t}(),et=function(){function t(e){a(this,t),this.w=e.w,this.dCtx=e}return s(t,[{key:"getxAxisLabelsCoords",value:function(){var t,e=this.w,n=e.globals.labels.slice();if(e.config.xaxis.convertedCatToNumeric&&0===n.length&&(n=e.globals.categoryLabels),e.globals.timescaleLabels.length>0){var i=this.getxAxisTimeScaleLabelsCoords();t={width:i.width,height:i.height},e.globals.rotateXLabels=!1}else{this.dCtx.lgWidthForSideLegends="left"!==e.config.legend.position&&"right"!==e.config.legend.position||e.config.legend.floating?0:this.dCtx.lgRect.width;var r=e.globals.xLabelFormatter,a=g.getLargestStringFromArr(n),o=this.dCtx.dimHelpers.getLargestStringFromMultiArr(a,n);e.globals.isBarHorizontal&&(o=a=e.globals.yAxisScale[0].result.reduce((function(t,e){return t.length>e.length?t:e}),0));var s=new X(this.dCtx.ctx),l=a;a=s.xLabelFormat(r,a,l),o=s.xLabelFormat(r,o,l),(e.config.xaxis.convertedCatToNumeric&&void 0===a||""===String(a).trim())&&(o=a="1");var c=new x(this.dCtx.ctx),u=c.getTextRects(a,e.config.xaxis.labels.style.fontSize),h=u;if(a!==o&&(h=c.getTextRects(o,e.config.xaxis.labels.style.fontSize)),(t={width:u.width>=h.width?u.width:h.width,height:u.height>=h.height?u.height:h.height}).width*n.length>e.globals.svgWidth-this.dCtx.lgWidthForSideLegends-this.dCtx.yAxisWidth-this.dCtx.gridPad.left-this.dCtx.gridPad.right&&0!==e.config.xaxis.labels.rotate||e.config.xaxis.labels.rotateAlways){if(!e.globals.isBarHorizontal){e.globals.rotateXLabels=!0;var f=function(t){return c.getTextRects(t,e.config.xaxis.labels.style.fontSize,e.config.xaxis.labels.style.fontFamily,"rotate(".concat(e.config.xaxis.labels.rotate," 0 0)"),!1)};u=f(a),a!==o&&(h=f(o)),t.height=(u.height>h.height?u.height:h.height)/1.5,t.width=u.width>h.width?u.width:h.width}}else e.globals.rotateXLabels=!1}return e.config.xaxis.labels.show||(t={width:0,height:0}),{width:t.width,height:t.height}}},{key:"getxAxisTitleCoords",value:function(){var t=this.w,e=0,n=0;if(void 0!==t.config.xaxis.title.text){var i=new x(this.dCtx.ctx).getTextRects(t.config.xaxis.title.text,t.config.xaxis.title.style.fontSize);e=i.width,n=i.height}return{width:e,height:n}}},{key:"getxAxisTimeScaleLabelsCoords",value:function(){var t,e=this.w;this.dCtx.timescaleLabels=e.globals.timescaleLabels.slice();var n=this.dCtx.timescaleLabels.map((function(t){return t.value})),i=n.reduce((function(t,e){return void 0===t?(console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"),0):t.length>e.length?t:e}),0);return 1.05*(t=new x(this.dCtx.ctx).getTextRects(i,e.config.xaxis.labels.style.fontSize)).width*n.length>e.globals.gridWidth&&0!==e.config.xaxis.labels.rotate&&(e.globals.overlappingXLabels=!0),t}},{key:"additionalPaddingXLabels",value:function(t){var e=this,n=this.w,i=n.globals,r=n.config,a=r.xaxis.type,o=t.width;i.skipLastTimelinelabel=!1,i.skipFirstTimelinelabel=!1;var s=n.config.yaxis[0].opposite&&n.globals.isBarHorizontal,l=function(t,s){(function(t){return-1!==i.collapsedSeriesIndices.indexOf(t)})(s)||("datetime"!==a&&e.dCtx.gridPad.left<o/2-e.dCtx.yAxisWidthLeft&&!i.rotateXLabels&&!r.xaxis.labels.trim&&(e.dCtx.xPadLeft=o/2+1),function(t){if(e.dCtx.timescaleLabels&&e.dCtx.timescaleLabels.length){var r=e.dCtx.timescaleLabels[0],s=e.dCtx.timescaleLabels[e.dCtx.timescaleLabels.length-1].position+o/1.75-e.dCtx.yAxisWidthRight,l=r.position-o/1.75+e.dCtx.yAxisWidthLeft;s>i.gridWidth&&(i.skipLastTimelinelabel=!0),l<0&&(i.skipFirstTimelinelabel=!0)}else"datetime"===a?e.dCtx.gridPad.right<o&&!i.rotateXLabels&&(i.skipLastTimelinelabel=!0):"datetime"!==a&&e.dCtx.gridPad.right<o/2-e.dCtx.yAxisWidthRight&&!i.rotateXLabels&&("between"!==n.config.xaxis.tickPlacement||n.globals.isBarHorizontal)&&(e.dCtx.xPadRight=o/2+1)}())};r.yaxis.forEach((function(t,n){s?(e.dCtx.gridPad.left<o&&(e.dCtx.xPadLeft=o/2+1),e.dCtx.xPadRight=o/2+1):l(0,n)}))}}]),t}(),nt=function(){function t(e){a(this,t),this.w=e.w,this.dCtx=e}return s(t,[{key:"getyAxisLabelsCoords",value:function(){var t=this,e=this.w,n=[],i=10;return e.config.yaxis.map((function(r,a){if(r.show&&r.labels.show&&e.globals.yAxisScale[a].result.length){var o=e.globals.yLabelFormatters[a],s=o(e.globals.yAxisScale[a].niceMax,{seriesIndex:a,dataPointIndex:-1,w:e}),l=s;if(void 0!==s&&0!==s.length||(s=e.globals.yAxisScale[a].niceMax),e.globals.isBarHorizontal){i=0;var c=e.globals.labels.slice();s=o(s=g.getLargestStringFromArr(c),{seriesIndex:a,dataPointIndex:-1,w:e}),l=t.dCtx.dimHelpers.getLargestStringFromMultiArr(s,c)}var u=new x(t.dCtx.ctx),h=u.getTextRects(s,r.labels.style.fontSize),f=h;s!==l&&(f=u.getTextRects(l,r.labels.style.fontSize)),n.push({width:(f.width>h.width?f.width:h.width)+i,height:f.height>h.height?f.height:h.height})}else n.push({width:0,height:0})})),n}},{key:"getyAxisTitleCoords",value:function(){var t=this,e=this.w,n=[];return e.config.yaxis.map((function(e,i){if(e.show&&void 0!==e.title.text){var r=new x(t.dCtx.ctx).getTextRects(e.title.text,e.title.style.fontSize,e.title.style.fontFamily,"rotate(-90 0 0)",!1);n.push({width:r.width,height:r.height})}else n.push({width:0,height:0})})),n}},{key:"getTotalYAxisWidth",value:function(){var t=this.w,e=0,n=0,i=0,r=t.globals.yAxisScale.length>1?10:0,a=function(a,o){var s=t.config.yaxis[o].floating,l=0;a.width>0&&!s?(l=a.width+r,function(e){return t.globals.ignoreYAxisIndexes.indexOf(e)>-1}(o)&&(l=l-a.width-r)):l=s||!t.config.yaxis[o].show?0:5,t.config.yaxis[o].opposite?i+=l:n+=l,e+=l};return t.globals.yLabelsCoords.map((function(t,e){a(t,e)})),t.globals.yTitleCoords.map((function(t,e){a(t,e)})),t.globals.isBarHorizontal&&(e=t.globals.yLabelsCoords[0].width+t.globals.yTitleCoords[0].width+15),this.dCtx.yAxisWidthLeft=n,this.dCtx.yAxisWidthRight=i,e}}]),t}(),it=function(){function t(e){a(this,t),this.w=e.w,this.dCtx=e}return s(t,[{key:"gridPadForColumnsInNumericAxis",value:function(t){var e=this.w;if(e.globals.noData)return 0;var n=e.config.chart.type,i=0,r="bar"===n||"rangeBar"===n?e.config.series.length:1;if(e.globals.comboBarCount>0&&(r=e.globals.comboBarCount),e.globals.collapsedSeries.forEach((function(t){"bar"!==t.type&&"rangeBar"!==t.type||(r-=1)})),e.config.chart.stacked&&(r=1),("bar"===n||"rangeBar"===n||e.globals.comboBarCount>0)&&e.globals.isXNumeric&&!e.globals.isBarHorizontal&&r>0){var a,o,s=Math.abs(e.globals.initialMaxX-e.globals.initialMinX);s<=3&&(s=e.globals.dataPoints),a=s/t,e.globals.minXDiff&&e.globals.minXDiff/a>0&&(o=e.globals.minXDiff/a),(i=o/r*parseInt(e.config.plotOptions.bar.columnWidth,10)/100)<1&&(i=1),i=i/(r>1?1:1.5)+5,e.globals.barPadForNumericAxis=i}return i}},{key:"gridPadFortitleSubtitle",value:function(){var t=this,e=this.w,n=e.globals,i=this.dCtx.isSparkline||!e.globals.axisCharts?0:10;["title","subtitle"].forEach((function(n){void 0!==e.config[n].text?i+=e.config[n].margin:i+=t.dCtx.isSparkline||!e.globals.axisCharts?0:5}));var r=e.config.series.length>1||!e.globals.axisCharts||e.config.legend.showForSingleSeries;e.config.legend.show&&"bottom"===e.config.legend.position&&!e.config.legend.floating&&r&&(i+=10);var a=this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),o=this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");n.gridHeight=n.gridHeight-a.height-o.height-i,n.translateY=n.translateY+a.height+o.height+i}},{key:"setGridXPosForDualYAxis",value:function(t,e){var n=this.w;n.config.yaxis.map((function(i,r){-1===n.globals.ignoreYAxisIndexes.indexOf(r)&&!n.config.yaxis[r].floating&&n.config.yaxis[r].show&&i.opposite&&(n.globals.translateX=n.globals.translateX-(e[r].width+t[r].width)-parseInt(n.config.yaxis[r].labels.style.fontSize,10)/1.2-12)}))}}]),t}(),rt=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.lgRect={},this.yAxisWidth=0,this.yAxisWidthLeft=0,this.yAxisWidthRight=0,this.xAxisHeight=0,this.isSparkline=this.w.config.chart.sparkline.enabled,this.dimHelpers=new tt(this),this.dimYAxis=new nt(this),this.dimXAxis=new et(this),this.dimGrid=new it(this),this.lgWidthForSideLegends=0,this.gridPad=this.w.config.grid.padding,this.xPadRight=0,this.xPadLeft=0}return s(t,[{key:"plotCoords",value:function(){var t=this.w.globals;this.lgRect=this.dimHelpers.getLegendsRect(),t.axisCharts?this.setDimensionsForAxisCharts():this.setDimensionsForNonAxisCharts(),this.dimGrid.gridPadFortitleSubtitle(),t.gridHeight=t.gridHeight-this.gridPad.top-this.gridPad.bottom,t.gridWidth=t.gridWidth-this.gridPad.left-this.gridPad.right-this.xPadRight-this.xPadLeft;var e=this.dimGrid.gridPadForColumnsInNumericAxis(t.gridWidth);t.gridWidth=t.gridWidth-2*e,t.translateX=t.translateX+this.gridPad.left+this.xPadLeft+(e>0?e+4:0),t.translateY=t.translateY+this.gridPad.top}},{key:"setDimensionsForAxisCharts",value:function(){var t=this,e=this.w,n=e.globals,i=this.dimYAxis.getyAxisLabelsCoords(),r=this.dimYAxis.getyAxisTitleCoords();e.globals.yLabelsCoords=[],e.globals.yTitleCoords=[],e.config.yaxis.map((function(t,n){e.globals.yLabelsCoords.push({width:i[n].width,index:n}),e.globals.yTitleCoords.push({width:r[n].width,index:n})})),this.yAxisWidth=this.dimYAxis.getTotalYAxisWidth();var a=this.dimXAxis.getxAxisLabelsCoords(),o=this.dimXAxis.getxAxisTitleCoords();this.conditionalChecksForAxisCoords(a,o),n.translateXAxisY=e.globals.rotateXLabels?this.xAxisHeight/8:-4,n.translateXAxisX=e.globals.rotateXLabels&&e.globals.isXNumeric&&e.config.xaxis.labels.rotate<=-45?-this.xAxisWidth/4:0,e.globals.isBarHorizontal&&(n.rotateXLabels=!1,n.translateXAxisY=parseInt(e.config.xaxis.labels.style.fontSize,10)/1.5*-1),n.translateXAxisY=n.translateXAxisY+e.config.xaxis.labels.offsetY,n.translateXAxisX=n.translateXAxisX+e.config.xaxis.labels.offsetX;var s=this.yAxisWidth,l=this.xAxisHeight;n.xAxisLabelsHeight=this.xAxisHeight,n.xAxisHeight=this.xAxisHeight;var c=10;("radar"===e.config.chart.type||this.isSparkline)&&(s=0,l=n.goldenPadding),this.isSparkline&&(this.lgRect={height:0,width:0},l=0,s=0,c=0),this.dimXAxis.additionalPaddingXLabels(a);var u=function(){n.translateX=s,n.gridHeight=n.svgHeight-t.lgRect.height-l-(t.isSparkline?0:e.globals.rotateXLabels?10:15),n.gridWidth=n.svgWidth-s};switch("top"===e.config.xaxis.position&&(c=n.xAxisHeight-e.config.xaxis.axisTicks.height-5),e.config.legend.position){case"bottom":n.translateY=c,u();break;case"top":n.translateY=this.lgRect.height+c,u();break;case"left":n.translateY=c,n.translateX=this.lgRect.width+s,n.gridHeight=n.svgHeight-l-12,n.gridWidth=n.svgWidth-this.lgRect.width-s;break;case"right":n.translateY=c,n.translateX=s,n.gridHeight=n.svgHeight-l-12,n.gridWidth=n.svgWidth-this.lgRect.width-s-5;break;default:throw new Error("Legend position not supported")}this.dimGrid.setGridXPosForDualYAxis(r,i),new U(this.ctx).setYAxisXPosition(i,r)}},{key:"setDimensionsForNonAxisCharts",value:function(){var t=this.w,e=t.globals,n=t.config,i=0;t.config.legend.show&&!t.config.legend.floating&&(i=20);var r="pie"===n.chart.type||"donut"===n.chart.type?"pie":"radialBar",a=n.plotOptions[r].offsetY,o=n.plotOptions[r].offsetX;if(!n.legend.show||n.legend.floating)return e.gridHeight=e.svgHeight-n.grid.padding.left+n.grid.padding.right,e.gridWidth=e.gridHeight,e.translateY=a,void(e.translateX=o+(e.svgWidth-e.gridWidth)/2);switch(n.legend.position){case"bottom":e.gridHeight=e.svgHeight-this.lgRect.height-e.goldenPadding,e.gridWidth=e.gridHeight,e.translateY=a-10,e.translateX=o+(e.svgWidth-e.gridWidth)/2;break;case"top":e.gridHeight=e.svgHeight-this.lgRect.height-e.goldenPadding,e.gridWidth=e.gridHeight,e.translateY=this.lgRect.height+a+10,e.translateX=o+(e.svgWidth-e.gridWidth)/2;break;case"left":e.gridWidth=e.svgWidth-this.lgRect.width-i,e.gridHeight="auto"!==n.chart.height?e.svgHeight:e.gridWidth,e.translateY=a,e.translateX=o+this.lgRect.width+i;break;case"right":e.gridWidth=e.svgWidth-this.lgRect.width-i-5,e.gridHeight="auto"!==n.chart.height?e.svgHeight:e.gridWidth,e.translateY=a,e.translateX=o+10;break;default:throw new Error("Legend position not supported")}}},{key:"conditionalChecksForAxisCoords",value:function(t,e){var n=this.w;this.xAxisHeight=(t.height+e.height)*(n.globals.isMultiLineX?1.2:n.globals.LINE_HEIGHT_RATIO)+(n.globals.rotateXLabels?22:10),this.xAxisWidth=t.width,this.xAxisHeight-e.height>n.config.xaxis.labels.maxHeight&&(this.xAxisHeight=n.config.xaxis.labels.maxHeight),n.config.xaxis.labels.minHeight&&this.xAxisHeight<n.config.xaxis.labels.minHeight&&(this.xAxisHeight=n.config.xaxis.labels.minHeight),n.config.xaxis.floating&&(this.xAxisHeight=0);var i=0,r=0;n.config.yaxis.forEach((function(t){i+=t.labels.minWidth,r+=t.labels.maxWidth})),this.yAxisWidth<i&&(this.yAxisWidth=i),this.yAxisWidth>r&&(this.yAxisWidth=r)}}]),t}(),at=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.chartType=this.w.config.chart.type,this.initialAnim=this.w.config.chart.animations.enabled,this.dynamicAnim=this.initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled,this.animBeginArr=[0],this.animDur=0,this.donutDataLabels=this.w.config.plotOptions.pie.donut.labels;var n=this.w;this.lineColorArr=void 0!==n.globals.stroke.colors?n.globals.stroke.colors:n.globals.colors,this.defaultSize=n.globals.svgHeight<n.globals.svgWidth?n.globals.gridHeight:n.globals.gridWidth,this.centerY=this.defaultSize/2,this.centerX=n.globals.gridWidth/2,this.fullAngle=360,n.globals.radialSize=this.defaultSize/2.05-n.config.stroke.width-(n.config.chart.sparkline.enabled?0:n.config.chart.dropShadow.blur),this.donutSize=n.globals.radialSize*parseInt(n.config.plotOptions.pie.donut.size,10)/100,this.sliceLabels=[],this.prevSectorAngleArr=[]}return s(t,[{key:"draw",value:function(t){var e=this.w,n=new x(this.ctx),i=n.group({class:"apexcharts-pie"});if(e.globals.noData)return i;for(var r=0,a=0;a<t.length;a++)r+=g.negToZero(t[a]);var o=[],s=n.group();0===r&&(r=1e-5);for(var l=0;l<t.length;l++){var c=this.fullAngle*g.negToZero(t[l])/r;o.push(c)}if(e.globals.dataChanged){for(var u,h=0,f=0;f<e.globals.previousPaths.length;f++)h+=g.negToZero(e.globals.previousPaths[f]);for(var d=0;d<e.globals.previousPaths.length;d++)u=this.fullAngle*g.negToZero(e.globals.previousPaths[d])/h,this.prevSectorAngleArr.push(u)}this.donutSize<0&&(this.donutSize=0);var p=e.config.plotOptions.pie.customScale,m=e.globals.gridWidth/2,v=e.globals.gridHeight/2,b=m-e.globals.gridWidth/2*p,y=v-e.globals.gridHeight/2*p;if("donut"===e.config.chart.type){var w=n.drawCircle(this.donutSize);w.attr({cx:this.centerX,cy:this.centerY,fill:e.config.plotOptions.pie.donut.background?e.config.plotOptions.pie.donut.background:"transparent"}),s.add(w)}var k=this.drawArcs(o,t);if(this.sliceLabels.forEach((function(t){k.add(t)})),s.attr({transform:"translate(".concat(b,", ").concat(y,") scale(").concat(p,")")}),s.add(k),i.add(s),this.donutDataLabels.show){var S=this.renderInnerDataLabels(this.donutDataLabels,{hollowSize:this.donutSize,centerX:this.centerX,centerY:this.centerY,opacity:this.donutDataLabels.show,translateX:b,translateY:y});i.add(S)}return i}},{key:"drawArcs",value:function(t,e){var n=this.w,i=new m(this.ctx),r=new x(this.ctx),a=new I(this.ctx),o=r.group({class:"apexcharts-slices"}),s=0,l=0,c=0,u=0;this.strokeWidth=n.config.stroke.show?n.config.stroke.width:0;for(var h=0;h<t.length;h++){var f=r.group({class:"apexcharts-series apexcharts-pie-series",seriesName:g.escapeString(n.globals.seriesNames[h]),rel:h+1,"data:realIndex":h});o.add(f),l=u,c=(s=c)+t[h],u=l+this.prevSectorAngleArr[h];var d=c-s,p=a.fillPath({seriesNumber:h,size:n.globals.radialSize,value:e[h]}),v=this.getChangedPath(l,u),b=r.drawPath({d:v,stroke:this.lineColorArr instanceof Array?this.lineColorArr[h]:this.lineColorArr,strokeWidth:0,fill:p,fillOpacity:n.config.fill.opacity,classes:"apexcharts-pie-area apexcharts-".concat(n.config.chart.type,"-slice-").concat(h)});if(b.attr({index:0,j:h}),n.config.chart.dropShadow.enabled){var y=n.config.chart.dropShadow;i.dropShadow(b,y,h)}this.addListeners(b,this.donutDataLabels),x.setAttrs(b.node,{"data:angle":d,"data:startAngle":s,"data:strokeWidth":this.strokeWidth,"data:value":e[h]});var w={x:0,y:0};"pie"===n.config.chart.type?w=g.polarToCartesian(this.centerX,this.centerY,n.globals.radialSize/1.25+n.config.plotOptions.pie.dataLabels.offset,s+(c-s)/2):"donut"===n.config.chart.type&&(w=g.polarToCartesian(this.centerX,this.centerY,(n.globals.radialSize+this.donutSize)/2+n.config.plotOptions.pie.dataLabels.offset,s+(c-s)/2)),f.add(b);var k=0;if(!this.initialAnim||n.globals.resized||n.globals.dataChanged?this.animBeginArr.push(0):(0==(k=(c-s)/this.fullAngle*n.config.chart.animations.speed)&&(k=1),this.animDur=k+this.animDur,this.animBeginArr.push(this.animDur)),this.dynamicAnim&&n.globals.dataChanged?this.animatePaths(b,{size:n.globals.radialSize,endAngle:c,startAngle:s,prevStartAngle:l,prevEndAngle:u,animateStartingPos:!0,i:h,animBeginArr:this.animBeginArr,shouldSetPrevPaths:!0,dur:n.config.chart.animations.dynamicAnimation.speed}):this.animatePaths(b,{size:n.globals.radialSize,endAngle:c,startAngle:s,i:h,totalItems:t.length-1,animBeginArr:this.animBeginArr,dur:k}),n.config.plotOptions.pie.expandOnClick&&b.click(this.pieClicked.bind(this,h)),n.config.dataLabels.enabled){var S=w.x,C=w.y,A=100*(c-s)/360+"%";if(0!==d&&n.config.plotOptions.pie.dataLabels.minAngleToShowLabel<t[h]){var E=n.config.dataLabels.formatter;void 0!==E&&(A=E(n.globals.seriesPercent[h][0],{seriesIndex:h,w:n}));var P=n.globals.dataLabels.style.colors[h],T=r.drawText({x:S,y:C,text:A,textAnchor:"middle",fontSize:n.config.dataLabels.style.fontSize,fontFamily:n.config.dataLabels.style.fontFamily,fontWeight:n.config.dataLabels.style.fontWeight,foreColor:P});if(n.config.dataLabels.dropShadow.enabled){var O=n.config.dataLabels.dropShadow;i.dropShadow(T,O)}T.node.classList.add("apexcharts-pie-label"),n.config.chart.animations.animate&&!1===n.globals.resized&&(T.node.classList.add("apexcharts-pie-label-delay"),T.node.style.animationDelay=n.config.chart.animations.speed/940+"s"),this.sliceLabels.push(T)}}}return o}},{key:"addListeners",value:function(t,e){var n=new x(this.ctx);t.node.addEventListener("mouseenter",n.pathMouseEnter.bind(this,t)),t.node.addEventListener("mouseleave",n.pathMouseLeave.bind(this,t)),t.node.addEventListener("mouseleave",this.revertDataLabelsInner.bind(this,t.node,e)),t.node.addEventListener("mousedown",n.pathMouseDown.bind(this,t)),this.donutDataLabels.total.showAlways||(t.node.addEventListener("mouseenter",this.printDataLabelsInner.bind(this,t.node,e)),t.node.addEventListener("mousedown",this.printDataLabelsInner.bind(this,t.node,e)))}},{key:"animatePaths",value:function(t,e){var n=this.w,i=e.endAngle-e.startAngle,r=i,a=e.startAngle,o=e.startAngle;void 0!==e.prevStartAngle&&void 0!==e.prevEndAngle&&(a=e.prevEndAngle,r=e.prevEndAngle-e.prevStartAngle),e.i===n.config.series.length-1&&(i+o>this.fullAngle?e.endAngle=e.endAngle-(i+o):i+o<this.fullAngle&&(e.endAngle=e.endAngle+(this.fullAngle-(i+o)))),i===this.fullAngle&&(i=this.fullAngle-.01),this.animateArc(t,a,o,i,r,e)}},{key:"animateArc",value:function(t,e,n,i,r,a){var o,s=this,l=this.w,c=new v(this.ctx),u=a.size;(isNaN(e)||isNaN(r))&&(e=n,r=i,a.dur=0);var h=i,f=n,d=e-n;l.globals.dataChanged&&a.shouldSetPrevPaths&&a.prevEndAngle&&(o=s.getPiePath({me:s,startAngle:a.prevStartAngle,angle:a.prevEndAngle-a.prevStartAngle,size:u}),t.attr({d:o})),0!==a.dur?t.animate(a.dur,l.globals.easing,a.animBeginArr[a.i]).afterAll((function(){"pie"!==l.config.chart.type&&"donut"!==l.config.chart.type||this.animate(l.config.chart.animations.dynamicAnimation.speed).attr({"stroke-width":s.strokeWidth}),a.i===l.config.series.length-1&&c.animationCompleted(t)})).during((function(l){h=d+(i-d)*l,a.animateStartingPos&&(h=r+(i-r)*l,f=e-r+(n-(e-r))*l),o=s.getPiePath({me:s,startAngle:f,angle:h,size:u}),t.node.setAttribute("data:pathOrig",o),t.attr({d:o})})):(o=s.getPiePath({me:s,startAngle:f,angle:i,size:u}),a.isTrack||(l.globals.animationEnded=!0),t.node.setAttribute("data:pathOrig",o),t.attr({d:o,"stroke-width":s.strokeWidth}))}},{key:"pieClicked",value:function(t){var e,n=this.w,i=this.w.globals.radialSize+(n.config.plotOptions.pie.expandOnClick?4:0),r=n.globals.dom.Paper.select(".apexcharts-".concat(n.config.chart.type.toLowerCase(),"-slice-").concat(t)).members[0];if("true"!==r.attr("data:pieClicked")){var a=n.globals.dom.baseEl.querySelectorAll(".apexcharts-pie-area");Array.prototype.forEach.call(a,(function(t){t.setAttribute("data:pieClicked","false");var e=t.getAttribute("data:pathOrig");t.setAttribute("d",e)})),r.attr("data:pieClicked","true");var o=parseInt(r.attr("data:startAngle"),10),s=parseInt(r.attr("data:angle"),10);e=this.getPiePath({me:this,startAngle:o,angle:s,size:i}),360!==s&&r.plot(e)}else{r.attr({"data:pieClicked":"false"}),this.revertDataLabelsInner(r.node,this.donutDataLabels);var l=r.attr("data:pathOrig");r.attr({d:l})}}},{key:"getChangedPath",value:function(t,e){var n="";return this.dynamicAnim&&this.w.globals.dataChanged&&(n=this.getPiePath({me:this,startAngle:t,angle:e-t,size:this.size})),n}},{key:"getPiePath",value:function(t){var e=t.me,n=t.startAngle,i=t.angle,r=t.size,a=this.w,o=n,s=Math.PI*(o-90)/180,l=i+n;Math.ceil(l)>=360&&(l=359.99);var c=Math.PI*(l-90)/180,u=e.centerX+r*Math.cos(s),h=e.centerY+r*Math.sin(s),f=e.centerX+r*Math.cos(c),d=e.centerY+r*Math.sin(c),p=g.polarToCartesian(e.centerX,e.centerY,e.donutSize,l),m=g.polarToCartesian(e.centerX,e.centerY,e.donutSize,o),v=i>180?1:0,x=["M",u,h,"A",r,r,0,v,1,f,d];return"donut"===a.config.chart.type?[].concat(x,["L",p.x,p.y,"A",e.donutSize,e.donutSize,0,v,0,m.x,m.y,"L",u,h,"z"]).join(" "):"pie"===a.config.chart.type?[].concat(x,["L",e.centerX,e.centerY,"L",u,h]).join(" "):[].concat(x).join(" ")}},{key:"renderInnerDataLabels",value:function(t,e){var n=this.w,i=new x(this.ctx),r=i.group({class:"apexcharts-datalabels-group",transform:"translate(".concat(e.translateX?e.translateX:0,", ").concat(e.translateY?e.translateY:0,") scale(").concat(n.config.plotOptions.pie.customScale,")")}),a=t.total.show;r.node.style.opacity=e.opacity;var o,s,l=e.centerX,c=e.centerY;o=void 0===t.name.color?n.globals.colors[0]:t.name.color;var u=t.name.fontSize,h=t.name.fontFamily,f=t.value.fontWeight;s=void 0===t.value.color?n.config.chart.foreColor:t.value.color;var d=t.value.formatter,p="",g="";if(a?(o=t.total.color,u=t.total.fontSize,h=t.total.fontFamily,f=t.total.fontWeight,g=t.total.label,p=t.total.formatter(n)):1===n.globals.series.length&&(p=d(n.globals.series[0],n),g=n.globals.seriesNames[0]),g&&(g=t.name.formatter(g,t.total.show,n)),t.name.show){var m=i.drawText({x:l,y:c+parseFloat(t.name.offsetY),text:g,textAnchor:"middle",foreColor:o,fontSize:u,fontWeight:f,fontFamily:h});m.node.classList.add("apexcharts-datalabel-label"),r.add(m)}if(t.value.show){var v=t.name.show?parseFloat(t.value.offsetY)+16:t.value.offsetY,b=i.drawText({x:l,y:c+v,text:p,textAnchor:"middle",foreColor:s,fontWeight:t.value.fontWeight,fontSize:t.value.fontSize,fontFamily:t.value.fontFamily});b.node.classList.add("apexcharts-datalabel-value"),r.add(b)}return r}},{key:"printInnerLabels",value:function(t,e,n,i){var r,a=this.w;i?r=void 0===t.name.color?a.globals.colors[parseInt(i.parentNode.getAttribute("rel"),10)-1]:t.name.color:a.globals.series.length>1&&t.total.show&&(r=t.total.color);var o=a.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label"),s=a.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");n=(0,t.value.formatter)(n,a),i||"function"!=typeof t.total.formatter||(n=t.total.formatter(a));var l=e===t.total.label;e=t.name.formatter(e,l,a),null!==o&&(o.textContent=e),null!==s&&(s.textContent=n),null!==o&&(o.style.fill=r)}},{key:"printDataLabelsInner",value:function(t,e){var n=this.w,i=t.getAttribute("data:value"),r=n.globals.seriesNames[parseInt(t.parentNode.getAttribute("rel"),10)-1];n.globals.series.length>1&&this.printInnerLabels(e,r,i,t);var a=n.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");null!==a&&(a.style.opacity=1)}},{key:"revertDataLabelsInner",value:function(t,e,n){var i=this,r=this.w,a=r.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group"),o=!1,s=r.globals.dom.baseEl.querySelectorAll(".apexcharts-pie-area"),l=function(t){var n=t.makeSliceOut,r=t.printLabel;Array.prototype.forEach.call(s,(function(t){"true"===t.getAttribute("data:pieClicked")&&(n&&(o=!0),r&&i.printDataLabelsInner(t,e))}))};if(l({makeSliceOut:!0,printLabel:!1}),e.total.show&&r.globals.series.length>1)o&&!e.total.showAlways?l({makeSliceOut:!1,printLabel:!0}):this.printInnerLabels(e,e.total.label,e.total.formatter(r));else if(l({makeSliceOut:!1,printLabel:!0}),!o)if(r.globals.selectedDataPoints.length&&r.globals.series.length>1)if(r.globals.selectedDataPoints[0].length>0){var c=r.globals.selectedDataPoints[0],u=r.globals.dom.baseEl.querySelector(".apexcharts-".concat(r.config.chart.type.toLowerCase(),"-slice-").concat(c));this.printDataLabelsInner(u,e)}else a&&r.globals.selectedDataPoints.length&&0===r.globals.selectedDataPoints[0].length&&(a.style.opacity=0);else a&&r.globals.series.length>1&&(a.style.opacity=0)}}]),t}(),ot=function(){function t(e){a(this,t),this.w=e.w,this.lgCtx=e}return s(t,[{key:"getLegendStyles",value:function(){var t=document.createElement("style");t.setAttribute("type","text/css");var e=document.createTextNode("\t\n    \t\n      .apexcharts-legend {\t\n        display: flex;\t\n        overflow: auto;\t\n        padding: 0 10px;\t\n      }\t\n      .apexcharts-legend.position-bottom, .apexcharts-legend.position-top {\t\n        flex-wrap: wrap\t\n      }\t\n      .apexcharts-legend.position-right, .apexcharts-legend.position-left {\t\n        flex-direction: column;\t\n        bottom: 0;\t\n      }\t\n      .apexcharts-legend.position-bottom.apexcharts-align-left, .apexcharts-legend.position-top.apexcharts-align-left, .apexcharts-legend.position-right, .apexcharts-legend.position-left {\t\n        justify-content: flex-start;\t\n      }\t\n      .apexcharts-legend.position-bottom.apexcharts-align-center, .apexcharts-legend.position-top.apexcharts-align-center {\t\n        justify-content: center;  \t\n      }\t\n      .apexcharts-legend.position-bottom.apexcharts-align-right, .apexcharts-legend.position-top.apexcharts-align-right {\t\n        justify-content: flex-end;\t\n      }\t\n      .apexcharts-legend-series {\t\n        cursor: pointer;\t\n        line-height: normal;\t\n      }\t\n      .apexcharts-legend.position-bottom .apexcharts-legend-series, .apexcharts-legend.position-top .apexcharts-legend-series{\t\n        display: flex;\t\n        align-items: center;\t\n      }\t\n      .apexcharts-legend-text {\t\n        position: relative;\t\n        font-size: 14px;\t\n      }\t\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\t\n        pointer-events: none;\t\n      }\t\n      .apexcharts-legend-marker {\t\n        position: relative;\t\n        display: inline-block;\t\n        cursor: pointer;\t\n        margin-right: 3px;\t\n        border-style: solid;\n      }\t\n      \t\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\t\n        display: inline-block;\t\n      }\t\n      .apexcharts-legend-series.apexcharts-no-click {\t\n        cursor: auto;\t\n      }\t\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\t\n        display: none !important;\t\n      }\t\n      .apexcharts-inactive-legend {\t\n        opacity: 0.45;\t\n      }");return t.appendChild(e),t}},{key:"getLegendBBox",value:function(){var t=this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect(),e=t.width;return{clwh:t.height,clww:e}}},{key:"appendToForeignObject",value:function(){var t=this.w.globals;t.dom.elLegendForeign=document.createElementNS(t.SVGNS,"foreignObject");var e=t.dom.elLegendForeign;e.setAttribute("x",0),e.setAttribute("y",0),e.setAttribute("width",t.svgWidth),e.setAttribute("height",t.svgHeight),t.dom.elLegendWrap.setAttribute("xmlns","http://www.w3.org/1999/xhtml"),e.appendChild(t.dom.elLegendWrap),e.appendChild(this.getLegendStyles()),t.dom.Paper.node.insertBefore(e,t.dom.elGraphical.node)}},{key:"toggleDataSeries",value:function(t,e){var n=this,i=this.w;if(i.globals.axisCharts||"radialBar"===i.config.chart.type){i.globals.resized=!0;var r=null,a=null;i.globals.risingSeries=[],i.globals.axisCharts?(r=i.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(t,"']")),a=parseInt(r.getAttribute("data:realIndex"),10)):(r=i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(t+1,"']")),a=parseInt(r.getAttribute("rel"),10)-1),e?[{cs:i.globals.collapsedSeries,csi:i.globals.collapsedSeriesIndices},{cs:i.globals.ancillaryCollapsedSeries,csi:i.globals.ancillaryCollapsedSeriesIndices}].forEach((function(t){n.riseCollapsedSeries(t.cs,t.csi,a)})):this.hideSeries({seriesEl:r,realIndex:a})}else{var o=i.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(t+1,"'] path")),s=i.config.chart.type;if("pie"===s||"donut"===s){var l=i.config.plotOptions.pie.donut.labels,c=new x(this.lgCtx.ctx),u=new at(this.lgCtx.ctx);c.pathMouseDown(o.members[0],null),u.printDataLabelsInner(o.members[0].node,l)}o.fire("click")}}},{key:"hideSeries",value:function(t){var e=t.seriesEl,n=t.realIndex,i=this.w;if(i.globals.axisCharts){var r=!1;if(i.config.yaxis[n]&&i.config.yaxis[n].show&&i.config.yaxis[n].showAlways&&(r=!0,i.globals.ancillaryCollapsedSeriesIndices.indexOf(n)<0&&(i.globals.ancillaryCollapsedSeries.push({index:n,data:i.config.series[n].data.slice(),type:e.parentNode.className.baseVal.split("-")[1]}),i.globals.ancillaryCollapsedSeriesIndices.push(n))),!r){i.globals.collapsedSeries.push({index:n,data:i.config.series[n].data.slice(),type:e.parentNode.className.baseVal.split("-")[1]}),i.globals.collapsedSeriesIndices.push(n);var a=i.globals.risingSeries.indexOf(n);i.globals.risingSeries.splice(a,1)}i.config.series[n].data=[]}else i.globals.collapsedSeries.push({index:n,data:i.config.series[n]}),i.globals.collapsedSeriesIndices.push(n),i.config.series[n]=0;for(var o=e.childNodes,s=0;s<o.length;s++)o[s].classList.contains("apexcharts-series-markers-wrap")&&(o[s].classList.contains("apexcharts-hide")?o[s].classList.remove("apexcharts-hide"):o[s].classList.add("apexcharts-hide"));i.globals.allSeriesCollapsed=i.globals.collapsedSeries.length===i.config.series.length,this.lgCtx.ctx.updateHelpers._updateSeries(i.config.series,i.config.chart.animations.dynamicAnimation.enabled)}},{key:"riseCollapsedSeries",value:function(t,e,n){var i=this.w;if(t.length>0)for(var r=0;r<t.length;r++)t[r].index===n&&(i.globals.axisCharts?(i.config.series[n].data=t[r].data.slice(),t.splice(r,1),e.splice(r,1),i.globals.risingSeries.push(n)):(i.config.series[n]=t[r].data,t.splice(r,1),e.splice(r,1),i.globals.risingSeries.push(n)),this.lgCtx.ctx.updateHelpers._updateSeries(i.config.series,i.config.chart.animations.dynamicAnimation.enabled))}}]),t}(),st=function(){function t(e,n){a(this,t),this.ctx=e,this.w=e.w,this.onLegendClick=this.onLegendClick.bind(this),this.onLegendHovered=this.onLegendHovered.bind(this),this.isBarsDistributed="bar"===this.w.config.chart.type&&this.w.config.plotOptions.bar.distributed&&1===this.w.config.series.length,this.legendHelpers=new ot(this)}return s(t,[{key:"init",value:function(){var t=this.w,e=t.globals,n=t.config;if((n.legend.showForSingleSeries&&1===e.series.length||this.isBarsDistributed||e.series.length>1||!e.axisCharts)&&n.legend.show){for(;e.dom.elLegendWrap.firstChild;)e.dom.elLegendWrap.removeChild(e.dom.elLegendWrap.firstChild);this.drawLegends(),g.isIE11()?document.getElementsByTagName("head")[0].appendChild(this.legendHelpers.getLegendStyles()):this.legendHelpers.appendToForeignObject(),"bottom"===n.legend.position||"top"===n.legend.position?this.legendAlignHorizontal():"right"!==n.legend.position&&"left"!==n.legend.position||this.legendAlignVertical()}}},{key:"drawLegends",value:function(){var t=this.w,e=t.config.legend.fontFamily,n=t.globals.seriesNames,i=t.globals.colors.slice();if("heatmap"===t.config.chart.type){var r=t.config.plotOptions.heatmap.colorScale.ranges;n=r.map((function(t){return t.name?t.name:t.from+" - "+t.to})),i=r.map((function(t){return t.color}))}else this.isBarsDistributed&&(n=t.globals.labels.slice());for(var a=t.globals.legendFormatter,o=t.config.legend.inverseOrder,s=o?n.length-1:0;o?s>=0:s<=n.length-1;o?s--:s++){var l=a(n[s],{seriesIndex:s,w:t}),c=!1,u=!1;if(t.globals.collapsedSeries.length>0)for(var h=0;h<t.globals.collapsedSeries.length;h++)t.globals.collapsedSeries[h].index===s&&(c=!0);if(t.globals.ancillaryCollapsedSeriesIndices.length>0)for(var f=0;f<t.globals.ancillaryCollapsedSeriesIndices.length;f++)t.globals.ancillaryCollapsedSeriesIndices[f]===s&&(u=!0);var d=document.createElement("span");d.classList.add("apexcharts-legend-marker");var p=t.config.legend.markers.offsetX,g=t.config.legend.markers.offsetY,m=t.config.legend.markers.height,v=t.config.legend.markers.width,b=t.config.legend.markers.strokeWidth,y=t.config.legend.markers.strokeColor,w=t.config.legend.markers.radius,k=d.style;k.background=i[s],k.color=i[s],t.config.legend.markers.fillColors&&t.config.legend.markers.fillColors[s]&&(k.background=t.config.legend.markers.fillColors[s]),k.height=Array.isArray(m)?parseFloat(m[s])+"px":parseFloat(m)+"px",k.width=Array.isArray(v)?parseFloat(v[s])+"px":parseFloat(v)+"px",k.left=Array.isArray(p)?p[s]:p,k.top=Array.isArray(g)?g[s]:g,k.borderWidth=Array.isArray(b)?b[s]:b,k.borderColor=Array.isArray(y)?y[s]:y,k.borderRadius=Array.isArray(w)?parseFloat(w[s])+"px":parseFloat(w)+"px",t.config.legend.markers.customHTML&&(Array.isArray(t.config.legend.markers.customHTML)?d.innerHTML=t.config.legend.markers.customHTML[s]():d.innerHTML=t.config.legend.markers.customHTML()),x.setAttrs(d,{rel:s+1,"data:collapsed":c||u}),(c||u)&&d.classList.add("apexcharts-inactive-legend");var S=document.createElement("div"),C=document.createElement("span");C.classList.add("apexcharts-legend-text"),C.innerHTML=Array.isArray(l)?l.join(" "):l;var A=t.config.legend.labels.useSeriesColors?t.globals.colors[s]:t.config.legend.labels.colors;A||(A=t.config.chart.foreColor),C.style.color=A,C.style.fontSize=parseFloat(t.config.legend.fontSize)+"px",C.style.fontWeight=t.config.legend.fontWeight,C.style.fontFamily=e||t.config.chart.fontFamily,x.setAttrs(C,{rel:s+1,i:s,"data:default-text":encodeURIComponent(l),"data:collapsed":c||u}),S.appendChild(d),S.appendChild(C);var E=new _(this.ctx);t.config.legend.showForZeroSeries||0===E.getSeriesTotalByIndex(s)&&E.seriesHaveSameValues(s)&&!E.isSeriesNull(s)&&-1===t.globals.collapsedSeriesIndices.indexOf(s)&&-1===t.globals.ancillaryCollapsedSeriesIndices.indexOf(s)&&S.classList.add("apexcharts-hidden-zero-series"),t.config.legend.showForNullSeries||E.isSeriesNull(s)&&-1===t.globals.collapsedSeriesIndices.indexOf(s)&&-1===t.globals.ancillaryCollapsedSeriesIndices.indexOf(s)&&S.classList.add("apexcharts-hidden-null-series"),t.globals.dom.elLegendWrap.appendChild(S),t.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(t.config.legend.horizontalAlign)),t.globals.dom.elLegendWrap.classList.add("position-"+t.config.legend.position),S.classList.add("apexcharts-legend-series"),S.style.margin="".concat(t.config.legend.itemMargin.vertical,"px ").concat(t.config.legend.itemMargin.horizontal,"px"),t.globals.dom.elLegendWrap.style.width=t.config.legend.width?t.config.legend.width+"px":"",t.globals.dom.elLegendWrap.style.height=t.config.legend.height?t.config.legend.height+"px":"",x.setAttrs(S,{rel:s+1,"data:collapsed":c||u}),(c||u)&&S.classList.add("apexcharts-inactive-legend"),t.config.legend.onItemClick.toggleDataSeries||S.classList.add("apexcharts-no-click")}"heatmap"!==t.config.chart.type&&!this.isBarsDistributed&&t.config.legend.onItemClick.toggleDataSeries&&t.globals.dom.elWrap.addEventListener("click",this.onLegendClick,!0),t.config.legend.onItemHover.highlightDataSeries&&(t.globals.dom.elWrap.addEventListener("mousemove",this.onLegendHovered,!0),t.globals.dom.elWrap.addEventListener("mouseout",this.onLegendHovered,!0))}},{key:"setLegendWrapXY",value:function(t,e){var n=this.w,i=n.globals.dom.baseEl.querySelector(".apexcharts-legend"),r=i.getBoundingClientRect(),a=0,o=0;if("bottom"===n.config.legend.position)o+=n.globals.svgHeight-r.height/2;else if("top"===n.config.legend.position){var s=new rt(this.ctx),l=s.dimHelpers.getTitleSubtitleCoords("title").height,c=s.dimHelpers.getTitleSubtitleCoords("subtitle").height;o=o+(l>0?l-10:0)+(c>0?c-10:0)}i.style.position="absolute",a=a+t+n.config.legend.offsetX,o=o+e+n.config.legend.offsetY,i.style.left=a+"px",i.style.top=o+"px","bottom"===n.config.legend.position?(i.style.top="auto",i.style.bottom=5-n.config.legend.offsetY+"px"):"right"===n.config.legend.position&&(i.style.left="auto",i.style.right=25+n.config.legend.offsetX+"px"),["width","height"].forEach((function(t){i.style[t]&&(i.style[t]=parseInt(n.config.legend[t],10)+"px")}))}},{key:"legendAlignHorizontal",value:function(){var t=this.w;t.globals.dom.baseEl.querySelector(".apexcharts-legend").style.right=0;var e=this.legendHelpers.getLegendBBox(),n=new rt(this.ctx),i=n.dimHelpers.getTitleSubtitleCoords("title"),r=n.dimHelpers.getTitleSubtitleCoords("subtitle"),a=0;"bottom"===t.config.legend.position?a=-e.clwh/1.8:"top"===t.config.legend.position&&(a=i.height+r.height+t.config.title.margin+t.config.subtitle.margin-10),this.setLegendWrapXY(20,a)}},{key:"legendAlignVertical",value:function(){var t=this.w,e=this.legendHelpers.getLegendBBox(),n=0;"left"===t.config.legend.position&&(n=20),"right"===t.config.legend.position&&(n=t.globals.svgWidth-e.clww-10),this.setLegendWrapXY(n,20)}},{key:"onLegendHovered",value:function(t){var e=this.w,n=t.target.classList.contains("apexcharts-legend-text")||t.target.classList.contains("apexcharts-legend-marker");if("heatmap"===e.config.chart.type||this.isBarsDistributed){if(n){var i=parseInt(t.target.getAttribute("rel"),10)-1;this.ctx.events.fireEvent("legendHover",[this.ctx,i,this.w]),new F(this.ctx).highlightRangeInSeries(t,t.target)}}else!t.target.classList.contains("apexcharts-inactive-legend")&&n&&new F(this.ctx).toggleSeriesOnHover(t,t.target)}},{key:"onLegendClick",value:function(t){if(t.target.classList.contains("apexcharts-legend-text")||t.target.classList.contains("apexcharts-legend-marker")){var e=parseInt(t.target.getAttribute("rel"),10)-1,n="true"===t.target.getAttribute("data:collapsed"),i=this.w.config.chart.events.legendClick;"function"==typeof i&&i(this.ctx,e,this.w),this.ctx.events.fireEvent("legendClick",[this.ctx,e,this.w]);var r=this.w.config.legend.markers.onClick;"function"==typeof r&&t.target.classList.contains("apexcharts-legend-marker")&&(r(this.ctx,e,this.w),this.ctx.events.fireEvent("legendMarkerClick",[this.ctx,e,this.w])),this.legendHelpers.toggleDataSeries(e,n)}}}]),t}(),lt=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.ev=this.w.config.chart.events,this.selectedClass="apexcharts-selected",this.localeValues=this.w.globals.locale.toolbar}return s(t,[{key:"createToolbar",value:function(){var t=this,e=this.w,n=function(){return document.createElement("div")},i=n();if(i.setAttribute("class","apexcharts-toolbar"),i.style.top=e.config.chart.toolbar.offsetY+"px",i.style.right=3-e.config.chart.toolbar.offsetX+"px",e.globals.dom.elWrap.appendChild(i),this.elZoom=n(),this.elZoomIn=n(),this.elZoomOut=n(),this.elPan=n(),this.elSelection=n(),this.elZoomReset=n(),this.elMenuIcon=n(),this.elMenu=n(),this.elCustomIcons=[],this.t=e.config.chart.toolbar.tools,Array.isArray(this.t.customIcons))for(var r=0;r<this.t.customIcons.length;r++)this.elCustomIcons.push(n());var a=[],o=function(n,i,r){var o=n.toLowerCase();t.t[o]&&e.config.chart.zoom.enabled&&a.push({el:i,icon:"string"==typeof t.t[o]?t.t[o]:r,title:t.localeValues[n],class:"apexcharts-".concat(o,"-icon")})};o("zoomIn",this.elZoomIn,'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n'),o("zoomOut",this.elZoomOut,'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n');var s=function(n){t.t[n]&&e.config.chart[n].enabled&&a.push({el:"zoom"===n?t.elZoom:t.elSelection,icon:"string"==typeof t.t[n]?t.t[n]:"zoom"===n?'<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>\n    <path d="M0 0h24v24H0V0z" fill="none"/>\n    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>\n</svg>':'<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>\n</svg>',title:t.localeValues["zoom"===n?"selectionZoom":"selection"],class:e.globals.isTouchDevice?"apexcharts-element-hidden":"apexcharts-".concat(n,"-icon")})};s("zoom"),s("selection"),this.t.pan&&e.config.chart.zoom.enabled&&a.push({el:this.elPan,icon:"string"==typeof this.t.pan?this.t.pan:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <defs>\n        <path d="M0 0h24v24H0z" id="a"/>\n    </defs>\n    <clipPath id="b">\n        <use overflow="visible" xlink:href="#a"/>\n    </clipPath>\n    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>\n</svg>',title:this.localeValues.pan,class:e.globals.isTouchDevice?"apexcharts-element-hidden":"apexcharts-pan-icon"}),o("reset",this.elZoomReset,'<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>'),this.t.download&&a.push({el:this.elMenuIcon,icon:"string"==typeof this.t.download?this.t.download:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',title:this.localeValues.menu,class:"apexcharts-menu-icon"});for(var l=0;l<this.elCustomIcons.length;l++)a.push({el:this.elCustomIcons[l],icon:this.t.customIcons[l].icon,title:this.t.customIcons[l].title,index:this.t.customIcons[l].index,class:"apexcharts-toolbar-custom-icon "+this.t.customIcons[l].class});a.forEach((function(t,e){t.index&&g.moveIndexInArray(a,e,t.index)}));for(var c=0;c<a.length;c++)x.setAttrs(a[c].el,{class:a[c].class,title:a[c].title}),a[c].el.innerHTML=a[c].icon,i.appendChild(a[c].el);this._createHamburgerMenu(i),e.globals.zoomEnabled?this.elZoom.classList.add(this.selectedClass):e.globals.panEnabled?this.elPan.classList.add(this.selectedClass):e.globals.selectionEnabled&&this.elSelection.classList.add(this.selectedClass),this.addToolbarEventListeners()}},{key:"_createHamburgerMenu",value:function(t){this.elMenuItems=[],t.appendChild(this.elMenu),x.setAttrs(this.elMenu,{class:"apexcharts-menu"});var e=[{name:"exportSVG",title:this.localeValues.exportToSVG},{name:"exportPNG",title:this.localeValues.exportToPNG},{name:"exportCSV",title:this.localeValues.exportToCSV}];this.w.globals.allSeriesHasEqualX||e.splice(2,1);for(var n=0;n<e.length;n++)this.elMenuItems.push(document.createElement("div")),this.elMenuItems[n].innerHTML=e[n].title,x.setAttrs(this.elMenuItems[n],{class:"apexcharts-menu-item ".concat(e[n].name),title:e[n].title}),this.elMenu.appendChild(this.elMenuItems[n])}},{key:"addToolbarEventListeners",value:function(){var t=this;this.elZoomReset.addEventListener("click",this.handleZoomReset.bind(this)),this.elSelection.addEventListener("click",this.toggleZoomSelection.bind(this,"selection")),this.elZoom.addEventListener("click",this.toggleZoomSelection.bind(this,"zoom")),this.elZoomIn.addEventListener("click",this.handleZoomIn.bind(this)),this.elZoomOut.addEventListener("click",this.handleZoomOut.bind(this)),this.elPan.addEventListener("click",this.togglePanning.bind(this)),this.elMenuIcon.addEventListener("click",this.toggleMenu.bind(this)),this.elMenuItems.forEach((function(e){e.classList.contains("exportSVG")?e.addEventListener("click",t.handleDownload.bind(t,"svg")):e.classList.contains("exportPNG")?e.addEventListener("click",t.handleDownload.bind(t,"png")):e.classList.contains("exportCSV")&&e.addEventListener("click",t.handleDownload.bind(t,"csv"))}));for(var e=0;e<this.t.customIcons.length;e++)this.elCustomIcons[e].addEventListener("click",this.t.customIcons[e].click.bind(this,this.ctx,this.ctx.w))}},{key:"toggleZoomSelection",value:function(t){this.toggleOtherControls();var e="selection"===t?this.elSelection:this.elZoom,n="selection"===t?"selectionEnabled":"zoomEnabled";this.w.globals[n]=!this.w.globals[n],e.classList.contains(this.selectedClass)?e.classList.remove(this.selectedClass):e.classList.add(this.selectedClass)}},{key:"getToolbarIconsReference",value:function(){var t=this.w;this.elZoom||(this.elZoom=t.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")),this.elPan||(this.elPan=t.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")),this.elSelection||(this.elSelection=t.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"))}},{key:"enableZoomPanFromToolbar",value:function(t){this.toggleOtherControls(),"pan"===t?this.w.globals.panEnabled=!0:this.w.globals.zoomEnabled=!0;var e="pan"===t?this.elPan:this.elZoom,n="pan"===t?this.elZoom:this.elPan;e&&e.classList.add(this.selectedClass),n&&n.classList.remove(this.selectedClass)}},{key:"togglePanning",value:function(){this.toggleOtherControls(),this.w.globals.panEnabled=!this.w.globals.panEnabled,this.elPan.classList.contains(this.selectedClass)?this.elPan.classList.remove(this.selectedClass):this.elPan.classList.add(this.selectedClass)}},{key:"toggleOtherControls",value:function(){var t=this,e=this.w;e.globals.panEnabled=!1,e.globals.zoomEnabled=!1,e.globals.selectionEnabled=!1,this.getToolbarIconsReference(),[this.elPan,this.elSelection,this.elZoom].forEach((function(e){e&&e.classList.remove(t.selectedClass)}))}},{key:"handleZoomIn",value:function(){var t=this.w,e=(t.globals.minX+t.globals.maxX)/2,n=(t.globals.minX+e)/2,i=(t.globals.maxX+e)/2,r=this._getNewMinXMaxX(n,i);t.globals.disableZoomIn||this.zoomUpdateOptions(r.minX,r.maxX)}},{key:"handleZoomOut",value:function(){var t=this.w;if(!("datetime"===t.config.xaxis.type&&new Date(t.globals.minX).getUTCFullYear()<1e3)){var e=(t.globals.minX+t.globals.maxX)/2,n=t.globals.minX-(e-t.globals.minX),i=t.globals.maxX-(e-t.globals.maxX),r=this._getNewMinXMaxX(n,i);t.globals.disableZoomOut||this.zoomUpdateOptions(r.minX,r.maxX)}}},{key:"_getNewMinXMaxX",value:function(t,e){var n=this.w.config.xaxis.convertedCatToNumeric;return{minX:n?Math.floor(t):t,maxX:n?Math.floor(e):e}}},{key:"zoomUpdateOptions",value:function(t,e){var n=this.w;if(!(n.config.xaxis.convertedCatToNumeric&&(t<1&&(t=1,e=n.globals.dataPoints),e-t<2))){var i={min:t,max:e},r=this.getBeforeZoomRange(i);r&&(i=r.xaxis);var a={xaxis:i},o=g.clone(n.globals.initialConfig.yaxis);n.config.chart.zoom.autoScaleYaxis&&(o=new B(this.ctx).autoScaleY(this.ctx,o,{xaxis:i})),n.config.chart.group||(a.yaxis=o),this.w.globals.zoomed=!0,this.ctx.updateHelpers._updateOptions(a,!1,this.w.config.chart.animations.dynamicAnimation.enabled),this.zoomCallback(i,o)}}},{key:"zoomCallback",value:function(t,e){"function"==typeof this.ev.zoomed&&this.ev.zoomed(this.ctx,{xaxis:t,yaxis:e})}},{key:"getBeforeZoomRange",value:function(t,e){var n=null;return"function"==typeof this.ev.beforeZoom&&(n=this.ev.beforeZoom(this,{xaxis:t,yaxis:e})),n}},{key:"toggleMenu",value:function(){var t=this;window.setTimeout((function(){t.elMenu.classList.contains("apexcharts-menu-open")?t.elMenu.classList.remove("apexcharts-menu-open"):t.elMenu.classList.add("apexcharts-menu-open")}),0)}},{key:"handleDownload",value:function(t){var e=this.w,n=new j(this.ctx);switch(t){case"svg":n.exportToSVG(this.ctx);break;case"png":n.exportToPng(this.ctx);break;case"csv":n.exportToCSV({series:e.config.series})}}},{key:"handleZoomReset",value:function(t){var e=this;this.ctx.getSyncedCharts().forEach((function(t){var n=t.w;n.globals.minX===n.globals.initialMinX&&n.globals.maxX===n.globals.initialMaxX||(t.updateHelpers.revertDefaultAxisMinMax(),"function"==typeof n.config.chart.events.zoomed&&e.zoomCallback({min:n.config.xaxis.min,max:n.config.xaxis.max}),n.globals.zoomed=!1,t.updateHelpers._updateSeries(n.globals.initialSeries,n.config.chart.animations.dynamicAnimation.enabled))}))}},{key:"destroy",value:function(){this.elZoom=null,this.elZoomIn=null,this.elZoomOut=null,this.elPan=null,this.elSelection=null,this.elZoomReset=null,this.elMenuIcon=null}}]),t}(),ct=function(t){function e(t){var n;return a(this,e),(n=d(this,f(e).call(this,t))).ctx=t,n.w=t.w,n.dragged=!1,n.graphics=new x(n.ctx),n.eventList=["mousedown","mouseleave","mousemove","touchstart","touchmove","mouseup","touchend"],n.clientX=0,n.clientY=0,n.startX=0,n.endX=0,n.dragX=0,n.startY=0,n.endY=0,n.dragY=0,n.moveDirection="none",n}return h(e,lt),s(e,[{key:"init",value:function(t){var e=this,n=t.xyRatios,i=this.w,r=this;this.xyRatios=n,this.zoomRect=this.graphics.drawRect(0,0,0,0),this.selectionRect=this.graphics.drawRect(0,0,0,0),this.gridRect=i.globals.dom.baseEl.querySelector(".apexcharts-grid"),this.zoomRect.node.classList.add("apexcharts-zoom-rect"),this.selectionRect.node.classList.add("apexcharts-selection-rect"),i.globals.dom.elGraphical.add(this.zoomRect),i.globals.dom.elGraphical.add(this.selectionRect),"x"===i.config.chart.selection.type?this.slDraggableRect=this.selectionRect.draggable({minX:0,minY:0,maxX:i.globals.gridWidth,maxY:i.globals.gridHeight}).on("dragmove",this.selectionDragging.bind(this,"dragging")):"y"===i.config.chart.selection.type?this.slDraggableRect=this.selectionRect.draggable({minX:0,maxX:i.globals.gridWidth}).on("dragmove",this.selectionDragging.bind(this,"dragging")):this.slDraggableRect=this.selectionRect.draggable().on("dragmove",this.selectionDragging.bind(this,"dragging")),this.preselectedSelection(),this.hoverArea=i.globals.dom.baseEl.querySelector(i.globals.chartClass),this.hoverArea.classList.add("apexcharts-zoomable"),this.eventList.forEach((function(t){e.hoverArea.addEventListener(t,r.svgMouseEvents.bind(r,n),{capture:!1,passive:!0})}))}},{key:"destroy",value:function(){this.slDraggableRect&&(this.slDraggableRect.draggable(!1),this.slDraggableRect.off(),this.selectionRect.off()),this.selectionRect=null,this.zoomRect=null,this.gridRect=null}},{key:"svgMouseEvents",value:function(t,e){var n=this.w,i=this,r=this.ctx.toolbar,a=n.globals.zoomEnabled?n.config.chart.zoom.type:n.config.chart.selection.type;if(e.shiftKey?(this.shiftWasPressed=!0,r.enableZoomPanFromToolbar("pan")):this.shiftWasPressed&&(r.enableZoomPanFromToolbar("zoom"),this.shiftWasPressed=!1),!e.target.classList.contains("apexcharts-selection-rect")&&!e.target.parentNode.classList.contains("apexcharts-toolbar")){if(i.clientX="touchmove"===e.type||"touchstart"===e.type?e.touches[0].clientX:"touchend"===e.type?e.changedTouches[0].clientX:e.clientX,i.clientY="touchmove"===e.type||"touchstart"===e.type?e.touches[0].clientY:"touchend"===e.type?e.changedTouches[0].clientY:e.clientY,"mousedown"===e.type&&1===e.which){var o=i.gridRect.getBoundingClientRect();i.startX=i.clientX-o.left,i.startY=i.clientY-o.top,i.dragged=!1,i.w.globals.mousedown=!0}if(("mousemove"===e.type&&1===e.which||"touchmove"===e.type)&&(i.dragged=!0,n.globals.panEnabled?(n.globals.selection=null,i.w.globals.mousedown&&i.panDragging({context:i,zoomtype:a,xyRatios:t})):(i.w.globals.mousedown&&n.globals.zoomEnabled||i.w.globals.mousedown&&n.globals.selectionEnabled)&&(i.selection=i.selectionDrawing({context:i,zoomtype:a}))),"mouseup"===e.type||"touchend"===e.type||"mouseleave"===e.type){var s=i.gridRect.getBoundingClientRect();i.w.globals.mousedown&&(i.endX=i.clientX-s.left,i.endY=i.clientY-s.top,i.dragX=Math.abs(i.endX-i.startX),i.dragY=Math.abs(i.endY-i.startY),(n.globals.zoomEnabled||n.globals.selectionEnabled)&&i.selectionDrawn({context:i,zoomtype:a}),n.globals.panEnabled&&n.config.xaxis.convertedCatToNumeric&&i.delayedPanScrolled()),n.globals.zoomEnabled&&i.hideSelectionRect(this.selectionRect),i.dragged=!1,i.w.globals.mousedown=!1}this.makeSelectionRectDraggable()}}},{key:"makeSelectionRectDraggable",value:function(){var t=this.w;if(this.selectionRect){var e=this.selectionRect.node.getBoundingClientRect();e.width>0&&e.height>0&&this.slDraggableRect.selectize({points:"l, r",pointSize:8,pointType:"rect"}).resize({constraint:{minX:0,minY:0,maxX:t.globals.gridWidth,maxY:t.globals.gridHeight}}).on("resizing",this.selectionDragging.bind(this,"resizing"))}}},{key:"preselectedSelection",value:function(){var t=this.w,e=this.xyRatios;if(!t.globals.zoomEnabled)if(void 0!==t.globals.selection&&null!==t.globals.selection)this.drawSelectionRect(t.globals.selection);else if(void 0!==t.config.chart.selection.xaxis.min&&void 0!==t.config.chart.selection.xaxis.max){var n=(t.config.chart.selection.xaxis.min-t.globals.minX)/e.xRatio,i={x:n,y:0,width:t.globals.gridWidth-(t.globals.maxX-t.config.chart.selection.xaxis.max)/e.xRatio-n,height:t.globals.gridHeight,translateX:0,translateY:0,selectionEnabled:!0};this.drawSelectionRect(i),this.makeSelectionRectDraggable(),"function"==typeof t.config.chart.events.selection&&t.config.chart.events.selection(this.ctx,{xaxis:{min:t.config.chart.selection.xaxis.min,max:t.config.chart.selection.xaxis.max},yaxis:{}})}}},{key:"drawSelectionRect",value:function(t){var e=t.x,n=t.y,i=t.width,r=t.height,a=t.translateX,o=t.translateY,s=this.w,l=this.zoomRect,c=this.selectionRect;if(this.dragged||null!==s.globals.selection){var u={transform:"translate("+a+", "+o+")"};s.globals.zoomEnabled&&this.dragged&&(i<0&&(i=1),l.attr({x:e,y:n,width:i,height:r,fill:s.config.chart.zoom.zoomedArea.fill.color,"fill-opacity":s.config.chart.zoom.zoomedArea.fill.opacity,stroke:s.config.chart.zoom.zoomedArea.stroke.color,"stroke-width":s.config.chart.zoom.zoomedArea.stroke.width,"stroke-opacity":s.config.chart.zoom.zoomedArea.stroke.opacity}),x.setAttrs(l.node,u)),s.globals.selectionEnabled&&(c.attr({x:e,y:n,width:i>0?i:0,height:r>0?r:0,fill:s.config.chart.selection.fill.color,"fill-opacity":s.config.chart.selection.fill.opacity,stroke:s.config.chart.selection.stroke.color,"stroke-width":s.config.chart.selection.stroke.width,"stroke-dasharray":s.config.chart.selection.stroke.dashArray,"stroke-opacity":s.config.chart.selection.stroke.opacity}),x.setAttrs(c.node,u))}}},{key:"hideSelectionRect",value:function(t){t&&t.attr({x:0,y:0,width:0,height:0})}},{key:"selectionDrawing",value:function(t){var e,n=t.context,i=t.zoomtype,r=this.w,a=n,o=this.gridRect.getBoundingClientRect(),s=a.startX-1,l=a.startY,c=a.clientX-o.left-s,u=a.clientY-o.top-l,h=0,f=0;return Math.abs(c+s)>r.globals.gridWidth?c=r.globals.gridWidth-s:a.clientX-o.left<0&&(c=s),s>a.clientX-o.left&&(h=-(c=Math.abs(c))),l>a.clientY-o.top&&(f=-(u=Math.abs(u))),e="x"===i?{x:s,y:0,width:c,height:r.globals.gridHeight,translateX:h,translateY:0}:"y"===i?{x:0,y:l,width:r.globals.gridWidth,height:u,translateX:0,translateY:f}:{x:s,y:l,width:c,height:u,translateX:h,translateY:f},a.drawSelectionRect(e),a.selectionDragging("resizing"),e}},{key:"selectionDragging",value:function(t,e){var n=this,i=this.w,r=this.xyRatios,a=this.selectionRect,o=0;"resizing"===t&&(o=30),"function"==typeof i.config.chart.events.selection&&i.globals.selectionEnabled&&(clearTimeout(this.w.globals.selectionResizeTimer),this.w.globals.selectionResizeTimer=window.setTimeout((function(){var t=n.gridRect.getBoundingClientRect(),e=a.node.getBoundingClientRect(),o=i.globals.xAxisScale.niceMin+(e.left-t.left)*r.xRatio,s=i.globals.xAxisScale.niceMin+(e.right-t.left)*r.xRatio,l=i.globals.yAxisScale[0].niceMin+(t.bottom-e.bottom)*r.yRatio[0],c=i.globals.yAxisScale[0].niceMax-(e.top-t.top)*r.yRatio[0];i.config.chart.events.selection(n.ctx,{xaxis:{min:o,max:s},yaxis:{min:l,max:c}})}),o))}},{key:"selectionDrawn",value:function(t){var e=t.context,n=t.zoomtype,i=this.w,r=e,a=this.xyRatios,o=this.ctx.toolbar;if(r.startX>r.endX){var s=r.startX;r.startX=r.endX,r.endX=s}if(r.startY>r.endY){var l=r.startY;r.startY=r.endY,r.endY=l}var c=i.globals.xAxisScale.niceMin+r.startX*a.xRatio,u=i.globals.xAxisScale.niceMin+r.endX*a.xRatio,h=[],f=[];if(i.config.yaxis.forEach((function(t,e){h.push(i.globals.yAxisScale[e].niceMax-a.yRatio[e]*r.startY),f.push(i.globals.yAxisScale[e].niceMax-a.yRatio[e]*r.endY)})),r.dragged&&(r.dragX>10||r.dragY>10)&&c!==u)if(i.globals.zoomEnabled){var d=g.clone(i.globals.initialConfig.yaxis);i.globals.zoomed=!0,i.globals.zoomed||(i.globals.lastXAxis=g.clone(i.config.xaxis),i.globals.lastYAxis=g.clone(i.config.yaxis)),i.config.xaxis.convertedCatToNumeric&&(c=Math.floor(c),u=Math.floor(u),c<1&&(c=1,u=i.globals.dataPoints),u-c<2&&(u=c+1));var p={min:c,max:u};if("xy"!==n&&"y"!==n||d.forEach((function(t,e){d[e].min=f[e],d[e].max=h[e]})),i.config.chart.zoom.autoScaleYaxis){var m=new B(r.ctx);d=m.autoScaleY(r.ctx,d,{xaxis:p})}if(o){var v=o.getBeforeZoomRange(p,d);v&&(p=v.xaxis?v.xaxis:p,d=v.yaxis?v.yaxe:d)}var x={xaxis:p};i.config.chart.group||(x.yaxis=d),r.ctx.updateHelpers._updateOptions(x,!1,r.w.config.chart.animations.dynamicAnimation.enabled),"function"==typeof i.config.chart.events.zoomed&&o.zoomCallback(p,d)}else if(i.globals.selectionEnabled){var b,y=null;b={min:c,max:u},"xy"!==n&&"y"!==n||(y=g.clone(i.config.yaxis)).forEach((function(t,e){y[e].min=f[e],y[e].max=h[e]})),i.globals.selection=r.selection,"function"==typeof i.config.chart.events.selection&&i.config.chart.events.selection(r.ctx,{xaxis:b,yaxis:y})}}},{key:"panDragging",value:function(t){var e=t.context,n=this.w,i=e;if(void 0!==n.globals.lastClientPosition.x){var r=n.globals.lastClientPosition.x-i.clientX,a=n.globals.lastClientPosition.y-i.clientY;Math.abs(r)>Math.abs(a)&&r>0?this.moveDirection="left":Math.abs(r)>Math.abs(a)&&r<0?this.moveDirection="right":Math.abs(a)>Math.abs(r)&&a>0?this.moveDirection="up":Math.abs(a)>Math.abs(r)&&a<0&&(this.moveDirection="down")}n.globals.lastClientPosition={x:i.clientX,y:i.clientY};var o=n.globals.minX,s=n.globals.maxX;n.config.xaxis.convertedCatToNumeric||i.panScrolled(o,s)}},{key:"delayedPanScrolled",value:function(){var t=this.w,e=t.globals.minX,n=t.globals.maxX,i=(t.globals.maxX-t.globals.minX)/2;"left"===this.moveDirection?(e=t.globals.minX+i,n=t.globals.maxX+i):"right"===this.moveDirection&&(e=t.globals.minX-i,n=t.globals.maxX-i),e=Math.floor(e),n=Math.floor(n),this.updateScrolledChart({xaxis:{min:e,max:n}},e,n)}},{key:"panScrolled",value:function(t,e){var n=this.w,i=this.xyRatios,r=g.clone(n.globals.initialConfig.yaxis);"left"===this.moveDirection?(t=n.globals.minX+n.globals.gridWidth/15*i.xRatio,e=n.globals.maxX+n.globals.gridWidth/15*i.xRatio):"right"===this.moveDirection&&(t=n.globals.minX-n.globals.gridWidth/15*i.xRatio,e=n.globals.maxX-n.globals.gridWidth/15*i.xRatio),(t<n.globals.initialMinX||e>n.globals.initialMaxX)&&(t=n.globals.minX,e=n.globals.maxX);var a={min:t,max:e};n.config.chart.zoom.autoScaleYaxis&&(r=new B(this.ctx).autoScaleY(this.ctx,r,{xaxis:a}));var o={xaxis:{min:t,max:e}};n.config.chart.group||(o.yaxis=r),this.updateScrolledChart(o,t,e)}},{key:"updateScrolledChart",value:function(t,e,n){var i=this.w;this.ctx.updateHelpers._updateOptions(t,!1,!1),"function"==typeof i.config.chart.events.scrolled&&i.config.chart.events.scrolled(this.ctx,{xaxis:{min:e,max:n}})}}]),e}(),ut=function(){function t(e){a(this,t),this.w=e.w,this.ttCtx=e,this.ctx=e.ctx}return s(t,[{key:"getNearestValues",value:function(t){var e=t.hoverArea,n=t.elGrid,i=t.clientX,r=t.clientY,a=this.w,o=a.globals.gridWidth,s=o/(a.globals.dataPoints-1),l=n.getBoundingClientRect(),c=this.hasBars();(a.globals.comboCharts||c)&&(s=o/a.globals.dataPoints);var u=i-l.left,h=r-l.top;u<0||h<0||u>a.globals.gridWidth||h>a.globals.gridHeight?(e.classList.remove("hovering-zoom"),e.classList.remove("hovering-pan")):a.globals.zoomEnabled?(e.classList.remove("hovering-pan"),e.classList.add("hovering-zoom")):a.globals.panEnabled&&(e.classList.remove("hovering-zoom"),e.classList.add("hovering-pan"));var f=Math.round(u/s);c&&(f=Math.ceil(u/s),f-=1);for(var d,p=null,m=null,v=[],x=0;x<a.globals.seriesXvalues.length;x++)v.push([a.globals.seriesXvalues[x][0]-1e-6].concat(a.globals.seriesXvalues[x]));return v=v.map((function(t){return t.filter((function(t){return t}))})),d=a.globals.seriesYvalues.map((function(t){return t.filter((function(t){return g.isNumber(t)}))})),a.globals.isXNumeric&&(p=(m=this.closestInMultiArray(u,h,v,d)).index,f=m.j,null!==p&&(v=a.globals.seriesXvalues[p],f=(m=this.closestInArray(u,v)).index)),a.globals.capturedSeriesIndex=null===p?-1:p,(!f||f<1)&&(f=0),a.globals.capturedDataPointIndex=f,{capturedSeries:p,j:f,hoverX:u,hoverY:h}}},{key:"closestInMultiArray",value:function(t,e,n,i){var r=this.w,a=0,o=null,s=-1;r.globals.series.length>1?a=this.getFirstActiveXArray(n):o=0;var l=i[a][0],c=n[a][0],u=Math.abs(t-c),h=Math.abs(e-l),f=h+u;return i.map((function(r,a){r.map((function(r,l){var c=Math.abs(e-i[a][l]),d=Math.abs(t-n[a][l]),p=d+c;p<f&&(f=p,u=d,h=c,o=a,s=l)}))})),{index:o,j:s}}},{key:"getFirstActiveXArray",value:function(t){for(var e=0,n=new _(this.ctx),i=t.map((function(t,e){return t.length>0?e:-1})),r=0;r<i.length;r++){var a=n.getSeriesTotalByIndex(r);if(-1!==i[r]&&0!==a&&!n.seriesHaveSameValues(r)){e=i[r];break}}return e}},{key:"closestInArray",value:function(t,e){for(var n=e[0],i=null,r=Math.abs(t-n),a=0;a<e.length;a++){var o=Math.abs(t-e[a]);o<r&&(r=o,i=a)}return{index:i}}},{key:"isXoverlap",value:function(t){var e=[],n=this.w.globals.seriesX.filter((function(t){return void 0!==t[0]}));if(n.length>0)for(var i=0;i<n.length-1;i++)void 0!==n[i][t]&&void 0!==n[i+1][t]&&n[i][t]!==n[i+1][t]&&e.push("unEqual");return 0===e.length}},{key:"isInitialSeriesSameLen",value:function(){for(var t=!0,e=this.w.globals.initialSeries,n=0;n<e.length-1;n++)if(e[n].data.length!==e[n+1].data.length){t=!1;break}return t}},{key:"getBarsHeight",value:function(t){return p(t).reduce((function(t,e){return t+e.getBBox().height}),0)}},{key:"getElMarkers",value:function(){return this.w.globals.dom.baseEl.querySelectorAll(" .apexcharts-series-markers")}},{key:"getAllMarkers",value:function(){return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker")}},{key:"hasMarkers",value:function(){return this.getElMarkers().length>0}},{key:"getElBars",value:function(){return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-rangebar-series")}},{key:"hasBars",value:function(){return this.getElBars().length>0}},{key:"getHoverMarkerSize",value:function(t){var e=this.w,n=e.config.markers.hover.size;return void 0===n&&(n=e.globals.markers.size[t]+e.config.markers.hover.sizeOffset),n}},{key:"toggleAllTooltipSeriesGroups",value:function(t){var e=this.w,n=this.ttCtx;0===n.allTooltipSeriesGroups.length&&(n.allTooltipSeriesGroups=e.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));for(var i=n.allTooltipSeriesGroups,r=0;r<i.length;r++)"enable"===t?(i[r].classList.add("apexcharts-active"),i[r].style.display=e.config.tooltip.items.display):(i[r].classList.remove("apexcharts-active"),i[r].style.display="none")}}]),t}(),ht=function(){function t(e){a(this,t),this.w=e.w,this.ctx=e.ctx,this.ttCtx=e,this.tooltipUtil=new ut(e)}return s(t,[{key:"drawSeriesTexts",value:function(t){var e=t.shared,n=void 0===e||e,i=t.ttItems,r=t.i,a=void 0===r?0:r,o=t.j,s=void 0===o?null:o,l=t.y1,c=t.y2,u=this.w;void 0!==u.config.tooltip.custom?this.handleCustomTooltip({i:a,j:s,y1:l,y2:c,w:u}):this.toggleActiveInactiveSeries(n);var h=this.getValuesToPrint({i:a,j:s});this.printLabels({i:a,j:s,values:h,ttItems:i,shared:n});var f=this.ttCtx.getElTooltip();this.ttCtx.tooltipRect.ttWidth=f.getBoundingClientRect().width,this.ttCtx.tooltipRect.ttHeight=f.getBoundingClientRect().height}},{key:"printLabels",value:function(t){var e,n=this,i=t.i,r=t.j,a=t.values,o=t.ttItems,s=t.shared,l=this.w,c=a.xVal,u=a.zVal,h=a.xAxisTTVal,f="",d=l.globals.colors[i];null!==r&&l.config.plotOptions.bar.distributed&&(d=l.globals.colors[r]);for(var p=function(t,a){var p=n.getFormatters(i);f=n.getSeriesName({fn:p.yLbTitleFormatter,index:i,seriesIndex:i,j:r});var g=l.config.tooltip.inverseOrder?a:t;if(l.globals.axisCharts){var m=function(t){return p.yLbFormatter(l.globals.series[t][r],{series:l.globals.series,seriesIndex:t,dataPointIndex:r,w:l})};s?(p=n.getFormatters(g),f=n.getSeriesName({fn:p.yLbTitleFormatter,index:g,seriesIndex:i,j:r}),d=l.globals.colors[g],e=m(g),(n.tooltipUtil.hasBars()&&l.config.chart.stacked&&0===l.globals.series[g][r]||void 0===l.globals.series[g][r])&&(e=void 0)):e=m(i)}null===r&&(e=p.yLbFormatter(l.globals.series[i],l)),n.DOMHandling({i,t:g,j:r,ttItems:o,values:{val:e,xVal:c,xAxisTTVal:h,zVal:u},seriesName:f,shared:s,pColor:d})},g=0,m=l.globals.series.length-1;g<l.globals.series.length;g++,m--)p(g,m)}},{key:"getFormatters",value:function(t){var e,n=this.w,i=n.globals.yLabelFormatters[t];return void 0!==n.globals.ttVal?Array.isArray(n.globals.ttVal)?(i=n.globals.ttVal[t]&&n.globals.ttVal[t].formatter,e=n.globals.ttVal[t]&&n.globals.ttVal[t].title&&n.globals.ttVal[t].title.formatter):(i=n.globals.ttVal.formatter,"function"==typeof n.globals.ttVal.title.formatter&&(e=n.globals.ttVal.title.formatter)):e=n.config.tooltip.y.title.formatter,"function"!=typeof i&&(i=n.globals.yLabelFormatters[0]?n.globals.yLabelFormatters[0]:function(t){return t}),"function"!=typeof e&&(e=function(t){return t}),{yLbFormatter:i,yLbTitleFormatter:e}}},{key:"getSeriesName",value:function(t){var e=t.fn,n=t.index,i=t.seriesIndex,r=t.j,a=this.w;return e(String(a.globals.seriesNames[n]),{series:a.globals.series,seriesIndex:i,dataPointIndex:r,w:a})}},{key:"DOMHandling",value:function(t){var e=t.i,n=t.t,i=(t.j,t.ttItems),r=t.values,a=t.seriesName,o=t.shared,s=t.pColor,l=this.w,c=this.ttCtx,u=r.val,h=r.xVal,f=r.xAxisTTVal,d=r.zVal,p=null;p=i[n].children,l.config.tooltip.fillSeriesColor&&(i[n].style.backgroundColor=s,p[0].style.display="none"),c.showTooltipTitle&&(null===c.tooltipTitle&&(c.tooltipTitle=l.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")),c.tooltipTitle.innerHTML=h),c.blxaxisTooltip&&(c.xaxisTooltipText.innerHTML=""!==f?f:h);var g=i[n].querySelector(".apexcharts-tooltip-text-label");g&&(g.innerHTML=a?a+": ":"");var m=i[n].querySelector(".apexcharts-tooltip-text-value");m&&(m.innerHTML=u),p[0]&&p[0].classList.contains("apexcharts-tooltip-marker")&&(l.config.tooltip.marker.fillColors&&Array.isArray(l.config.tooltip.marker.fillColors)&&(s=l.config.tooltip.marker.fillColors[e]),p[0].style.backgroundColor=s),l.config.tooltip.marker.show||(p[0].style.display="none"),null!==d&&(i[n].querySelector(".apexcharts-tooltip-text-z-label").innerHTML=l.config.tooltip.z.title,i[n].querySelector(".apexcharts-tooltip-text-z-value").innerHTML=void 0!==d?d:""),o&&p[0]&&c.tooltipTitle&&(null==u||l.globals.collapsedSeriesIndices.indexOf(n)>-1?p[0].parentNode.style.display="none":p[0].parentNode.style.display=l.config.tooltip.items.display)}},{key:"toggleActiveInactiveSeries",value:function(t){var e=this.w;if(t)this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");else{this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");var n=e.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group");n&&(n.classList.add("apexcharts-active"),n.style.display=e.config.tooltip.items.display)}}},{key:"getValuesToPrint",value:function(t){var e=t.i,n=t.j,i=this.w,r=this.ctx.series.filteredSeriesX(),a="",o="",s=null,l=null,c={series:i.globals.series,seriesIndex:e,dataPointIndex:n,w:i},u=i.globals.ttZFormatter;null===n?l=i.globals.series[e]:i.globals.isXNumeric?(a=r[e][n],0===r[e].length&&(a=r[this.tooltipUtil.getFirstActiveXArray(r)][n])):a=void 0!==i.globals.labels[n]?i.globals.labels[n]:"";var h=a;return i.globals.isXNumeric&&"datetime"===i.config.xaxis.type?a=new X(this.ctx).xLabelFormat(i.globals.ttKeyFormatter,h,h):i.globals.isBarHorizontal||(a=i.globals.xLabelFormatter(h,c)),void 0!==i.config.tooltip.x.formatter&&(a=i.globals.ttKeyFormatter(h,c)),i.globals.seriesZ.length>0&&i.globals.seriesZ[0].length>0&&(s=u(i.globals.seriesZ[e][n],i)),o="function"==typeof i.config.xaxis.tooltip.formatter?i.globals.xaxisTooltipFormatter(h,c):a,{val:Array.isArray(l)?l.join(" "):l,xVal:Array.isArray(a)?a.join(" "):a,xAxisTTVal:Array.isArray(o)?o.join(" "):o,zVal:s}}},{key:"handleCustomTooltip",value:function(t){var e=t.i,n=t.j,i=t.y1,r=t.y2,a=t.w,o=this.ttCtx.getElTooltip(),s=a.config.tooltip.custom;Array.isArray(s)&&s[e]&&(s=s[e]),o.innerHTML=s({ctx:this.ctx,series:a.globals.series,seriesIndex:e,dataPointIndex:n,y1:i,y2:r,w:a})}}]),t}(),ft=function(){function t(e){a(this,t),this.ttCtx=e,this.ctx=e.ctx,this.w=e.w}return s(t,[{key:"moveXCrosshairs",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=this.ttCtx,i=this.w,r=n.getElXCrosshairs(),a=t-n.xcrosshairsWidth/2,o=i.globals.labels.slice().length;if(null!==e&&(a=i.globals.gridWidth/o*e),null!==r&&(r.setAttribute("x",a),r.setAttribute("x1",a),r.setAttribute("x2",a),r.setAttribute("y2",i.globals.gridHeight),r.classList.add("apexcharts-active")),a<0&&(a=0),a>i.globals.gridWidth&&(a=i.globals.gridWidth),n.blxaxisTooltip){var s=a;"tickWidth"!==i.config.xaxis.crosshairs.width&&"barWidth"!==i.config.xaxis.crosshairs.width||(s=a+n.xcrosshairsWidth/2),this.moveXAxisTooltip(s)}}},{key:"moveYCrosshairs",value:function(t){var e=this.ttCtx;null!==e.ycrosshairs&&(x.setAttrs(e.ycrosshairs,{y1:t,y2:t}),x.setAttrs(e.ycrosshairsHidden,{y1:t,y2:t}))}},{key:"moveXAxisTooltip",value:function(t){var e=this.w,n=this.ttCtx;if(null!==n.xaxisTooltip){n.xaxisTooltip.classList.add("apexcharts-active");var i,r=n.xaxisOffY+e.config.xaxis.tooltip.offsetY+e.globals.translateY+1+e.config.xaxis.offsetY;if(t-=n.xaxisTooltip.getBoundingClientRect().width/2,!isNaN(t))t+=e.globals.translateX,i=new x(this.ctx).getTextRects(n.xaxisTooltipText.innerHTML),n.xaxisTooltipText.style.minWidth=i.width+"px",n.xaxisTooltip.style.left=t+"px",n.xaxisTooltip.style.top=r+"px"}}},{key:"moveYAxisTooltip",value:function(t){var e=this.w,n=this.ttCtx;null===n.yaxisTTEls&&(n.yaxisTTEls=e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));var i=parseInt(n.ycrosshairsHidden.getAttribute("y1"),10),r=e.globals.translateY+i,a=n.yaxisTTEls[t].getBoundingClientRect().height,o=e.globals.translateYAxisX[t]-2;e.config.yaxis[t].opposite&&(o-=26),r-=a/2,-1===e.globals.ignoreYAxisIndexes.indexOf(t)?(n.yaxisTTEls[t].classList.add("apexcharts-active"),n.yaxisTTEls[t].style.top=r+"px",n.yaxisTTEls[t].style.left=o+e.config.yaxis[t].tooltip.offsetX+"px"):n.yaxisTTEls[t].classList.remove("apexcharts-active")}},{key:"moveTooltip",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=this.w,r=this.ttCtx,a=r.getElTooltip(),o=r.tooltipRect,s=null!==n?parseFloat(n):1,l=parseFloat(t)+s+5,c=parseFloat(e)+s/2;if(l>i.globals.gridWidth/2&&(l=l-o.ttWidth-s-15),l>i.globals.gridWidth-o.ttWidth-10&&(l=i.globals.gridWidth-o.ttWidth),l<-20&&(l=-20),i.config.tooltip.followCursor){var u=r.getElGrid(),h=u.getBoundingClientRect();c=r.e.clientY+i.globals.translateY-h.top-o.ttHeight/2}if(!i.config.tooltip.followCursor){var f=this.positionChecks(o,l,c);l=f.x,c=f.y}isNaN(l)||(l+=i.globals.translateX,a.style.left=l+"px",a.style.top=c+"px")}},{key:"positionChecks",value:function(t,e,n){var i=this.w;return t.ttHeight/2+n>i.globals.gridHeight&&(n=i.globals.gridHeight-t.ttHeight+i.globals.translateY),n<0&&(n=0),{x:e,y:n}}},{key:"moveMarkers",value:function(t,e){var n=this.w,i=this.ttCtx;if(n.globals.markers.size[t]>0)for(var r=n.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(t,"'] .apexcharts-marker")),a=0;a<r.length;a++)parseInt(r[a].getAttribute("rel"),10)===e&&(i.marker.resetPointsSize(),i.marker.enlargeCurrentPoint(e,r[a]));else i.marker.resetPointsSize(),this.moveDynamicPointOnHover(e,t)}},{key:"moveDynamicPointOnHover",value:function(t,e){var n,i,r=this.w,a=this.ttCtx,o=r.globals.pointsArray,s=a.tooltipUtil.getHoverMarkerSize(e),l=r.config.series[e].type;if(!l||"column"!==l&&"candlestick"!==l){n=o[e][t][0],i=o[e][t][1]?o[e][t][1]:0;var c=r.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(e,"'] .apexcharts-series-markers circle"));c&&(c.setAttribute("r",s),c.setAttribute("cx",n),c.setAttribute("cy",i)),this.moveXCrosshairs(n),a.fixedTooltip||this.moveTooltip(n,i,s)}}},{key:"moveDynamicPointsOnHover",value:function(t){var e,n=this.ttCtx,i=n.w,r=0,a=0,o=i.globals.pointsArray;e=new F(this.ctx).getActiveConfigSeriesIndex(!0);var s=n.tooltipUtil.getHoverMarkerSize(e);o[e]&&(r=o[e][t][0],a=o[e][t][1]);var l=null,c=n.tooltipUtil.getAllMarkers();if(null!==(l=null!==c?c:i.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers circle")))for(var u=0;u<i.globals.series.length;u++){var h=o[u];if(i.globals.comboCharts&&void 0===h&&(l=p(l)).splice(u,0,null),h&&h.length){var f=o[u][t][1];l[u].setAttribute("cx",r);var d=parseInt(l[u].parentNode.parentNode.parentNode.getAttribute("data:realIndex"),10);null===f||isNaN(f)?l[d]&&l[d].setAttribute("r",0):(l[d]&&l[d].setAttribute("r",s),l[d]&&l[d].setAttribute("cy",f))}}if(this.moveXCrosshairs(r),!n.fixedTooltip){var g=a||i.globals.gridHeight;this.moveTooltip(r,g,s)}}},{key:"moveStickyTooltipOverBars",value:function(t){var e,n=this.w,i=this.ttCtx,r=n.globals.columnSeries?n.globals.columnSeries.length:n.globals.series.length,a=r>=2&&r%2==0?Math.floor(r/2):Math.floor(r/2)+1,o=n.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(a,"'] path[j='").concat(t,"'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(a,"'] path[j='").concat(t,"'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(a,"'] path[j='").concat(t,"']")),s=o?parseFloat(o.getAttribute("cx")):0,l=o?parseFloat(o.getAttribute("barWidth")):0;n.globals.isXNumeric?s-=r%2!=0?l/2:0:(s=i.xAxisTicksPositions[t-1]+i.dataPointsDividedWidth/2,isNaN(s)&&(s=i.xAxisTicksPositions[t]-i.dataPointsDividedWidth/2));var c=i.getElGrid().getBoundingClientRect();if(e=i.e.clientY-c.top-i.tooltipRect.ttHeight/2,this.moveXCrosshairs(s),!i.fixedTooltip){var u=e||n.globals.gridHeight;this.moveTooltip(s,u)}}}]),t}(),dt=function(){function t(e){a(this,t),this.w=e.w,this.ttCtx=e,this.ctx=e.ctx,this.tooltipPosition=new ft(e)}return s(t,[{key:"drawDynamicPoints",value:function(){for(var t=this.w,e=new x(this.ctx),n=new N(this.ctx),i=t.globals.dom.baseEl.querySelectorAll(".apexcharts-series"),r=0;r<i.length;r++){var a=parseInt(i[r].getAttribute("data:realIndex"),10),o=t.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(a,"'] .apexcharts-series-markers-wrap"));if(null!==o){var s=void 0,l="apexcharts-marker w".concat((Math.random()+1).toString(36).substring(4));"line"!==t.config.chart.type&&"area"!==t.config.chart.type||t.globals.comboCharts||t.config.tooltip.intersect||(l+=" no-pointer-events");var c=n.getMarkerConfig(l,a);(s=e.drawMarker(0,0,c)).node.setAttribute("default-marker-size",0);var u=document.createElementNS(t.globals.SVGNS,"g");u.classList.add("apexcharts-series-markers"),u.appendChild(s.node),o.appendChild(u)}}}},{key:"enlargeCurrentPoint",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=this.w;"bubble"!==r.config.chart.type&&this.newPointSize(t,e);var a=e.getAttribute("cx"),o=e.getAttribute("cy");if(null!==n&&null!==i&&(a=n,o=i),this.tooltipPosition.moveXCrosshairs(a),!this.fixedTooltip){if("radar"===r.config.chart.type){var s=this.ttCtx.getElGrid(),l=s.getBoundingClientRect();a=this.ttCtx.e.clientX-l.left}this.tooltipPosition.moveTooltip(a,o,r.config.markers.hover.size)}}},{key:"enlargePoints",value:function(t){for(var e=this.w,n=this.ttCtx,i=t,r=e.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"),a=e.config.markers.hover.size,o=0;o<r.length;o++){var s=r[o].getAttribute("rel"),l=r[o].getAttribute("index");if(void 0===a&&(a=e.globals.markers.size[l]+e.config.markers.hover.sizeOffset),i===parseInt(s,10)){this.newPointSize(i,r[o]);var c=r[o].getAttribute("cx"),u=r[o].getAttribute("cy");this.tooltipPosition.moveXCrosshairs(c),n.fixedTooltip||this.tooltipPosition.moveTooltip(c,u,a)}else this.oldPointSize(r[o])}}},{key:"newPointSize",value:function(t,e){var n=this.w,i=n.config.markers.hover.size,r=0===t?e.parentNode.firstChild:e.parentNode.lastChild;if("0"!==r.getAttribute("default-marker-size")){var a=parseInt(r.getAttribute("index"),10);void 0===i&&(i=n.globals.markers.size[a]+n.config.markers.hover.sizeOffset),r.setAttribute("r",i)}}},{key:"oldPointSize",value:function(t){var e=parseFloat(t.getAttribute("default-marker-size"));t.setAttribute("r",e)}},{key:"resetPointsSize",value:function(){for(var t=this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"),e=0;e<t.length;e++){var n=parseFloat(t[e].getAttribute("default-marker-size"));g.isNumber(n)?t[e].setAttribute("r",n):t[e].setAttribute("r",0)}}}]),t}(),pt=function(){function t(e){a(this,t),this.w=e.w,this.ttCtx=e}return s(t,[{key:"getAttr",value:function(t,e){return parseFloat(t.target.getAttribute(e))}},{key:"handleHeatTooltip",value:function(t){var e=t.e,n=t.opt,i=t.x,r=t.y,a=this.ttCtx,o=this.w;if(e.target.classList.contains("apexcharts-heatmap-rect")){var s=this.getAttr(e,"i"),l=this.getAttr(e,"j"),c=this.getAttr(e,"cx"),u=this.getAttr(e,"cy"),h=this.getAttr(e,"width"),f=this.getAttr(e,"height");if(a.tooltipLabels.drawSeriesTexts({ttItems:n.ttItems,i:s,j:l,shared:!1}),o.globals.capturedSeriesIndex=s,o.globals.capturedDataPointIndex=l,i=c+a.tooltipRect.ttWidth/2+h,r=u+a.tooltipRect.ttHeight/2-f/2,a.tooltipPosition.moveXCrosshairs(c+h/2),i>o.globals.gridWidth/2&&(i=c-a.tooltipRect.ttWidth/2+h),a.w.config.tooltip.followCursor){var d=a.getElGrid().getBoundingClientRect();r=a.e.clientY-d.top+o.globals.translateY/2-10}}return{x:i,y:r}}},{key:"handleMarkerTooltip",value:function(t){var e,n,i=t.e,r=t.opt,a=t.x,o=t.y,s=this.w,l=this.ttCtx;if(i.target.classList.contains("apexcharts-marker")){var c=parseInt(r.paths.getAttribute("cx"),10),u=parseInt(r.paths.getAttribute("cy"),10),h=parseFloat(r.paths.getAttribute("val"));if(n=parseInt(r.paths.getAttribute("rel"),10),e=parseInt(r.paths.parentNode.parentNode.parentNode.getAttribute("rel"),10)-1,l.intersect){var f=g.findAncestor(r.paths,"apexcharts-series");f&&(e=parseInt(f.getAttribute("data:realIndex"),10))}if(l.tooltipLabels.drawSeriesTexts({ttItems:r.ttItems,i:e,j:n,shared:!l.showOnIntersect&&s.config.tooltip.shared}),"mouseup"===i.type&&l.markerClick(i,e,n),s.globals.capturedSeriesIndex=e,s.globals.capturedDataPointIndex=n,a=c,o=u+s.globals.translateY-1.4*l.tooltipRect.ttHeight,l.w.config.tooltip.followCursor){var d=l.getElGrid().getBoundingClientRect();o=l.e.clientY+s.globals.translateY-d.top}h<0&&(o=u),l.marker.enlargeCurrentPoint(n,r.paths,a,o)}return{x:a,y:o}}},{key:"handleBarTooltip",value:function(t){var e,n,i=t.e,r=t.opt,a=this.w,o=this.ttCtx,s=o.getElTooltip(),l=0,c=0,u=0,h=this.getBarTooltipXY({e:i,opt:r});e=h.i;var f=h.barHeight,d=h.j;if(a.globals.capturedSeriesIndex=e,a.globals.capturedDataPointIndex=d,a.globals.isBarHorizontal&&o.tooltipUtil.hasBars()||!a.config.tooltip.shared?(c=h.x,u=h.y,n=Array.isArray(a.config.stroke.width)?a.config.stroke.width[e]:a.config.stroke.width,l=c):a.globals.comboCharts||a.config.tooltip.shared||(l/=2),isNaN(u)?u=a.globals.svgHeight-o.tooltipRect.ttHeight:u<0&&(u=0),c+o.tooltipRect.ttWidth>a.globals.gridWidth?c-=o.tooltipRect.ttWidth:c<0&&(c=0),o.w.config.tooltip.followCursor){var p=o.getElGrid().getBoundingClientRect();u=o.e.clientY-p.top}if(null===o.tooltip&&(o.tooltip=a.globals.dom.baseEl.querySelector(".apexcharts-tooltip")),a.config.tooltip.shared||(a.globals.comboBarCount>0?o.tooltipPosition.moveXCrosshairs(l+n/2):o.tooltipPosition.moveXCrosshairs(l)),!o.fixedTooltip&&(!a.config.tooltip.shared||a.globals.isBarHorizontal&&o.tooltipUtil.hasBars())){var g=a.globals.isMultipleYAxis?a.config.yaxis[m]&&a.config.yaxis[m].reversed:a.config.yaxis[0].reversed;g&&(c-=o.tooltipRect.ttWidth)<0&&(c=0),s.style.left=c+a.globals.translateX+"px";var m=parseInt(r.paths.parentNode.getAttribute("data:realIndex"),10);!g||a.globals.isBarHorizontal&&o.tooltipUtil.hasBars()||(u=u+f-2*(a.globals.series[e][d]<0?f:0)),o.tooltipRect.ttHeight+u>a.globals.gridHeight?(u=a.globals.gridHeight-o.tooltipRect.ttHeight+a.globals.translateY,s.style.top=u+"px"):s.style.top=u+a.globals.translateY-o.tooltipRect.ttHeight/2+"px"}}},{key:"getBarTooltipXY",value:function(t){var e=t.e,n=t.opt,i=this.w,r=null,a=this.ttCtx,o=0,s=0,l=0,c=0,u=0,h=e.target.classList;if(h.contains("apexcharts-bar-area")||h.contains("apexcharts-candlestick-area")||h.contains("apexcharts-rangebar-area")){var f=e.target,d=f.getBoundingClientRect(),p=n.elGrid.getBoundingClientRect(),g=d.height;u=d.height;var m=d.width,v=parseInt(f.getAttribute("cx"),10),x=parseInt(f.getAttribute("cy"),10);c=parseFloat(f.getAttribute("barWidth"));var b="touchmove"===e.type?e.touches[0].clientX:e.clientX;r=parseInt(f.getAttribute("j"),10),o=parseInt(f.parentNode.getAttribute("rel"),10)-1;var y=f.getAttribute("data-range-y1"),w=f.getAttribute("data-range-y2");i.globals.comboCharts&&(o=parseInt(f.parentNode.getAttribute("data:realIndex"),10)),a.tooltipLabels.drawSeriesTexts({ttItems:n.ttItems,i:o,j:r,y1:y?parseInt(y,10):null,y2:w?parseInt(w,10):null,shared:!a.showOnIntersect&&i.config.tooltip.shared}),i.config.tooltip.followCursor?i.globals.isBarHorizontal?(s=b-p.left+15,l=x-a.dataPointsDividedHeight+g/2-a.tooltipRect.ttHeight/2):(s=i.globals.isXNumeric?v-m/2:v-a.dataPointsDividedWidth+m/2,l=e.clientY-p.top-a.tooltipRect.ttHeight/2-15):i.globals.isBarHorizontal?((s=v)<a.xyRatios.baseLineInvertedY&&(s=v-a.tooltipRect.ttWidth),l=x-a.dataPointsDividedHeight+g/2-a.tooltipRect.ttHeight/2):(s=i.globals.isXNumeric?v-m/2:v-a.dataPointsDividedWidth+m/2,l=x)}return{x:s,y:l,barHeight:u,barWidth:c,i:o,j:r}}}]),t}(),gt=function(){function t(e){a(this,t),this.w=e.w,this.ttCtx=e}return s(t,[{key:"drawXaxisTooltip",value:function(){var t=this.w,e=this.ttCtx,n="bottom"===t.config.xaxis.position;e.xaxisOffY=n?t.globals.gridHeight+1:-t.globals.xAxisHeight-t.config.xaxis.axisTicks.height+3;var i=n?"apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom":"apexcharts-xaxistooltip apexcharts-xaxistooltip-top",r=t.globals.dom.elWrap;e.blxaxisTooltip&&null===t.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip")&&(e.xaxisTooltip=document.createElement("div"),e.xaxisTooltip.setAttribute("class",i+" apexcharts-theme-"+t.config.tooltip.theme),r.appendChild(e.xaxisTooltip),e.xaxisTooltipText=document.createElement("div"),e.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"),e.xaxisTooltipText.style.fontFamily=t.config.xaxis.tooltip.style.fontFamily||t.config.chart.fontFamily,e.xaxisTooltipText.style.fontSize=t.config.xaxis.tooltip.style.fontSize,e.xaxisTooltip.appendChild(e.xaxisTooltipText))}},{key:"drawYaxisTooltip",value:function(){for(var t=this.w,e=this.ttCtx,n=function(n){var i=t.config.yaxis[n].opposite||t.config.yaxis[n].crosshairs.opposite;e.yaxisOffX=i?t.globals.gridWidth+1:1;var r="apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(n,i?" apexcharts-yaxistooltip-right":" apexcharts-yaxistooltip-left");t.globals.yAxisSameScaleIndices.map((function(e,i){e.map((function(e,i){i===n&&(r+=t.config.yaxis[i].show?" ":" apexcharts-yaxistooltip-hidden")}))}));var a=t.globals.dom.elWrap;e.blyaxisTooltip&&null===t.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(n))&&(e.yaxisTooltip=document.createElement("div"),e.yaxisTooltip.setAttribute("class",r+" apexcharts-theme-"+t.config.tooltip.theme),a.appendChild(e.yaxisTooltip),0===n&&(e.yaxisTooltipText=[]),e.yaxisTooltipText.push(document.createElement("div")),e.yaxisTooltipText[n].classList.add("apexcharts-yaxistooltip-text"),e.yaxisTooltip.appendChild(e.yaxisTooltipText[n]))},i=0;i<t.config.yaxis.length;i++)n(i)}},{key:"setXCrosshairWidth",value:function(){var t=this.w,e=this.ttCtx,n=e.getElXCrosshairs();if(e.xcrosshairsWidth=parseInt(t.config.xaxis.crosshairs.width,10),t.globals.comboCharts){var i=t.globals.dom.baseEl.querySelector(".apexcharts-bar-area");if(null!==i&&"barWidth"===t.config.xaxis.crosshairs.width){var r=parseFloat(i.getAttribute("barWidth"));e.xcrosshairsWidth=r}else if("tickWidth"===t.config.xaxis.crosshairs.width){var a=t.globals.labels.length;e.xcrosshairsWidth=t.globals.gridWidth/a}}else if("tickWidth"===t.config.xaxis.crosshairs.width){var o=t.globals.labels.length;e.xcrosshairsWidth=t.globals.gridWidth/o}else if("barWidth"===t.config.xaxis.crosshairs.width){var s=t.globals.dom.baseEl.querySelector(".apexcharts-bar-area");if(null!==s){var l=parseFloat(s.getAttribute("barWidth"));e.xcrosshairsWidth=l}else e.xcrosshairsWidth=1}t.globals.isBarHorizontal&&(e.xcrosshairsWidth=0),null!==n&&e.xcrosshairsWidth>0&&n.setAttribute("width",e.xcrosshairsWidth)}},{key:"handleYCrosshair",value:function(){var t=this.w,e=this.ttCtx;e.ycrosshairs=t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"),e.ycrosshairsHidden=t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden")}},{key:"drawYaxisTooltipText",value:function(t,e,n){var i=this.ttCtx,r=this.w,a=r.globals.yLabelFormatters[t];if(i.blyaxisTooltip){var o=i.getElGrid().getBoundingClientRect(),s=(e-o.top)*n.yRatio[t],l=r.globals.maxYArr[t]-r.globals.minYArr[t],c=r.globals.minYArr[t]+(l-s);i.tooltipPosition.moveYCrosshairs(e-o.top),i.yaxisTooltipText[t].innerHTML=a(c),i.tooltipPosition.moveYAxisTooltip(t)}}}]),t}(),mt=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w;var n=this.w;this.tConfig=n.config.tooltip,this.tooltipUtil=new ut(this),this.tooltipLabels=new ht(this),this.tooltipPosition=new ft(this),this.marker=new dt(this),this.intersect=new pt(this),this.axesTooltip=new gt(this),this.showOnIntersect=this.tConfig.intersect,this.showTooltipTitle=this.tConfig.x.show,this.fixedTooltip=this.tConfig.fixed.enabled,this.xaxisTooltip=null,this.yaxisTTEls=null,this.isBarShared=!n.globals.isBarHorizontal&&this.tConfig.shared}return s(t,[{key:"getElTooltip",value:function(t){return t||(t=this),t.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip")}},{key:"getElXCrosshairs",value:function(){return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs")}},{key:"getElGrid",value:function(){return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid")}},{key:"drawTooltip",value:function(t){var e=this.w;this.xyRatios=t,this.blxaxisTooltip=e.config.xaxis.tooltip.enabled&&e.globals.axisCharts,this.blyaxisTooltip=e.config.yaxis[0].tooltip.enabled&&e.globals.axisCharts,this.allTooltipSeriesGroups=[],e.globals.axisCharts||(this.showTooltipTitle=!1);var n=document.createElement("div");if(n.classList.add("apexcharts-tooltip"),n.classList.add("apexcharts-theme-".concat(this.tConfig.theme)),e.globals.dom.elWrap.appendChild(n),e.globals.axisCharts){this.axesTooltip.drawXaxisTooltip(),this.axesTooltip.drawYaxisTooltip(),this.axesTooltip.setXCrosshairWidth(),this.axesTooltip.handleYCrosshair();var i=new W(this.ctx);this.xAxisTicksPositions=i.getXAxisTicksPositions()}if(!e.globals.comboCharts&&!this.tConfig.intersect&&"bar"!==e.config.chart.type&&"rangeBar"!==e.config.chart.type||this.tConfig.shared||(this.showOnIntersect=!0),0!==e.config.markers.size&&0!==e.globals.markers.largestSize||this.marker.drawDynamicPoints(this),e.globals.collapsedSeries.length!==e.globals.series.length){this.dataPointsDividedHeight=e.globals.gridHeight/e.globals.dataPoints,this.dataPointsDividedWidth=e.globals.gridWidth/e.globals.dataPoints,this.showTooltipTitle&&(this.tooltipTitle=document.createElement("div"),this.tooltipTitle.classList.add("apexcharts-tooltip-title"),this.tooltipTitle.style.fontFamily=this.tConfig.style.fontFamily||e.config.chart.fontFamily,this.tooltipTitle.style.fontSize=this.tConfig.style.fontSize,n.appendChild(this.tooltipTitle));var r=e.globals.series.length;(e.globals.xyCharts||e.globals.comboCharts)&&this.tConfig.shared&&(r=this.showOnIntersect?1:e.globals.series.length),this.legendLabels=e.globals.dom.baseEl.querySelectorAll(".apexcharts-legend-text"),this.ttItems=this.createTTElements(r),this.addSVGEvents()}}},{key:"createTTElements",value:function(t){for(var e=this.w,n=[],i=this.getElTooltip(),r=0;r<t;r++){var a=document.createElement("div");a.classList.add("apexcharts-tooltip-series-group"),this.tConfig.shared&&this.tConfig.enabledOnSeries&&Array.isArray(this.tConfig.enabledOnSeries)&&this.tConfig.enabledOnSeries.indexOf(r)<0&&a.classList.add("apexcharts-tooltip-series-group-hidden");var o=document.createElement("span");o.classList.add("apexcharts-tooltip-marker"),o.style.backgroundColor=e.globals.colors[r],a.appendChild(o);var s=document.createElement("div");s.classList.add("apexcharts-tooltip-text"),s.style.fontFamily=this.tConfig.style.fontFamily||e.config.chart.fontFamily,s.style.fontSize=this.tConfig.style.fontSize;var l=document.createElement("div");l.classList.add("apexcharts-tooltip-y-group");var c=document.createElement("span");c.classList.add("apexcharts-tooltip-text-label"),l.appendChild(c);var u=document.createElement("span");u.classList.add("apexcharts-tooltip-text-value"),l.appendChild(u);var h=document.createElement("div");h.classList.add("apexcharts-tooltip-z-group");var f=document.createElement("span");f.classList.add("apexcharts-tooltip-text-z-label"),h.appendChild(f);var d=document.createElement("span");d.classList.add("apexcharts-tooltip-text-z-value"),h.appendChild(d),s.appendChild(l),s.appendChild(h),a.appendChild(s),i.appendChild(a),n.push(a)}return n}},{key:"addSVGEvents",value:function(){var t=this.w,e=t.config.chart.type,n=this.getElTooltip(),i=!("bar"!==e&&"candlestick"!==e&&"rangeBar"!==e),r="area"===e||"line"===e||"scatter"===e||"bubble"===e||"radar"===e,a=t.globals.dom.Paper.node,o=this.getElGrid();o&&(this.seriesBound=o.getBoundingClientRect());var s,l=[],c=[],u={hoverArea:a,elGrid:o,tooltipEl:n,tooltipY:l,tooltipX:c,ttItems:this.ttItems};if(t.globals.axisCharts&&(r?s=t.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker"):i?s=t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-rangebar-area"):"heatmap"===e&&(s=t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap")),s&&s.length))for(var h=0;h<s.length;h++)l.push(s[h].getAttribute("cy")),c.push(s[h].getAttribute("cx"));if(t.globals.xyCharts&&!this.showOnIntersect||t.globals.comboCharts&&!this.showOnIntersect||i&&this.tooltipUtil.hasBars()&&this.tConfig.shared)this.addPathsEventListeners([a],u);else if(i&&!t.globals.comboCharts||r&&this.showOnIntersect)this.addDatapointEventsListeners(u);else if(!t.globals.axisCharts||"heatmap"===e){var f=t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");this.addPathsEventListeners(f,u)}if(this.showOnIntersect){var d=t.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker");d.length>0&&this.addPathsEventListeners(d,u),this.tooltipUtil.hasBars()&&!this.tConfig.shared&&this.addDatapointEventsListeners(u)}}},{key:"drawFixedTooltipRect",value:function(){var t=this.w,e=this.getElTooltip(),n=e.getBoundingClientRect(),i=n.width+10,r=n.height+10,a=this.tConfig.fixed.offsetX,o=this.tConfig.fixed.offsetY,s=this.tConfig.fixed.position.toLowerCase();return s.indexOf("right")>-1&&(a=a+t.globals.svgWidth-i+10),s.indexOf("bottom")>-1&&(o=o+t.globals.svgHeight-r-10),e.style.left=a+"px",e.style.top=o+"px",{x:a,y:o,ttWidth:i,ttHeight:r}}},{key:"addDatapointEventsListeners",value:function(t){var e=this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-rangebar-area");this.addPathsEventListeners(e,t)}},{key:"addPathsEventListeners",value:function(t,e){for(var n=this,i=function(i){var r={paths:t[i],tooltipEl:e.tooltipEl,tooltipY:e.tooltipY,tooltipX:e.tooltipX,elGrid:e.elGrid,hoverArea:e.hoverArea,ttItems:e.ttItems};["mousemove","mouseup","touchmove","mouseout","touchend"].map((function(e){return t[i].addEventListener(e,n.seriesHover.bind(n,r),{capture:!1,passive:!0})}))},r=0;r<t.length;r++)i(r)}},{key:"seriesHover",value:function(t,e){var n=this,i=[],r=this.w;r.config.chart.group&&(i=this.ctx.getGroupedCharts()),r.globals.axisCharts&&(r.globals.minX===-1/0&&r.globals.maxX===1/0||0===r.globals.dataPoints)||(i.length?i.forEach((function(i){var r=n.getElTooltip(i),a={paths:t.paths,tooltipEl:r,tooltipY:t.tooltipY,tooltipX:t.tooltipX,elGrid:t.elGrid,hoverArea:t.hoverArea,ttItems:i.w.globals.tooltip.ttItems};i.w.globals.minX===n.w.globals.minX&&i.w.globals.maxX===n.w.globals.maxX&&i.w.globals.tooltip.seriesHoverByContext({chartCtx:i,ttCtx:i.w.globals.tooltip,opt:a,e})})):this.seriesHoverByContext({chartCtx:this.ctx,ttCtx:this.w.globals.tooltip,opt:t,e}))}},{key:"seriesHoverByContext",value:function(t){var e=t.chartCtx,n=t.ttCtx,i=t.opt,r=t.e,a=e.w,o=this.getElTooltip();n.tooltipRect={x:0,y:0,ttWidth:o.getBoundingClientRect().width,ttHeight:o.getBoundingClientRect().height},n.e=r,!n.tooltipUtil.hasBars()||a.globals.comboCharts||n.isBarShared||this.tConfig.onDatasetHover.highlightDataSeries&&new F(e).toggleSeriesOnHover(r,r.target.parentNode),n.fixedTooltip&&n.drawFixedTooltipRect(),a.globals.axisCharts?n.axisChartsTooltips({e:r,opt:i,tooltipRect:n.tooltipRect}):n.nonAxisChartsTooltips({e:r,opt:i,tooltipRect:n.tooltipRect})}},{key:"axisChartsTooltips",value:function(t){var e,n,i=t.e,r=t.opt,a=this.w,o=r.elGrid.getBoundingClientRect(),s="touchmove"===i.type?i.touches[0].clientX:i.clientX,l="touchmove"===i.type?i.touches[0].clientY:i.clientY;if(this.clientY=l,this.clientX=s,a.globals.capturedSeriesIndex=-1,a.globals.capturedDataPointIndex=-1,l<o.top||l>o.top+o.height)this.handleMouseOut(r);else{if(Array.isArray(this.tConfig.enabledOnSeries)&&!a.config.tooltip.shared){var c=parseInt(r.paths.getAttribute("index"),10);if(this.tConfig.enabledOnSeries.indexOf(c)<0)return void this.handleMouseOut(r)}var u=this.getElTooltip(),h=this.getElXCrosshairs(),f=a.globals.xyCharts||"bar"===a.config.chart.type&&!a.globals.isBarHorizontal&&this.tooltipUtil.hasBars()&&this.tConfig.shared||a.globals.comboCharts&&this.tooltipUtil.hasBars();if(a.globals.isBarHorizontal&&this.tooltipUtil.hasBars()&&(f=!1),"mousemove"===i.type||"touchmove"===i.type||"mouseup"===i.type){if(null!==h&&h.classList.add("apexcharts-active"),null!==this.ycrosshairs&&this.blyaxisTooltip&&this.ycrosshairs.classList.add("apexcharts-active"),f&&!this.showOnIntersect)this.handleStickyTooltip(i,s,l,r);else if("heatmap"===a.config.chart.type){var d=this.intersect.handleHeatTooltip({e:i,opt:r,x:e,y:n});e=d.x,n=d.y,u.style.left=e+"px",u.style.top=n+"px"}else this.tooltipUtil.hasBars()&&this.intersect.handleBarTooltip({e:i,opt:r}),this.tooltipUtil.hasMarkers()&&this.intersect.handleMarkerTooltip({e:i,opt:r,x:e,y:n});if(this.blyaxisTooltip)for(var p=0;p<a.config.yaxis.length;p++)this.axesTooltip.drawYaxisTooltipText(p,l,this.xyRatios);r.tooltipEl.classList.add("apexcharts-active")}else"mouseout"!==i.type&&"touchend"!==i.type||this.handleMouseOut(r)}}},{key:"nonAxisChartsTooltips",value:function(t){var e=t.e,n=t.opt,i=t.tooltipRect,r=this.w,a=n.paths.getAttribute("rel"),o=this.getElTooltip(),s=r.globals.dom.elWrap.getBoundingClientRect();if("mousemove"===e.type||"touchmove"===e.type){o.classList.add("apexcharts-active"),this.tooltipLabels.drawSeriesTexts({ttItems:n.ttItems,i:parseInt(a,10)-1,shared:!1});var l=r.globals.clientX-s.left-i.ttWidth/2,c=r.globals.clientY-s.top-i.ttHeight-10;o.style.left=l+"px",o.style.top=c+"px"}else"mouseout"!==e.type&&"touchend"!==e.type||o.classList.remove("apexcharts-active")}},{key:"handleStickyTooltip",value:function(t,e,n,i){var r=this.w,a=this.tooltipUtil.getNearestValues({context:this,hoverArea:i.hoverArea,elGrid:i.elGrid,clientX:e,clientY:n}),o=a.j,s=a.capturedSeries;a.hoverX<0||a.hoverX>r.globals.gridWidth?this.handleMouseOut(i):null!==s?this.handleStickyCapturedSeries(t,s,i,o):this.tooltipUtil.isXoverlap(o)&&this.create(t,this,0,o,i.ttItems)}},{key:"handleStickyCapturedSeries",value:function(t,e,n,i){var r=this.w;null===r.globals.series[e][i]?this.handleMouseOut(n):void 0!==r.globals.series[e][i]?this.tConfig.shared&&this.tooltipUtil.isXoverlap(i)&&this.tooltipUtil.isInitialSeriesSameLen()?this.create(t,this,e,i,n.ttItems):this.create(t,this,e,i,n.ttItems,!1):this.tooltipUtil.isXoverlap(i)&&this.create(t,this,0,i,n.ttItems)}},{key:"deactivateHoverFilter",value:function(){for(var t=this.w,e=new x(this.ctx),n=t.globals.dom.Paper.select(".apexcharts-bar-area"),i=0;i<n.length;i++)e.pathMouseLeave(n[i])}},{key:"handleMouseOut",value:function(t){var e=this.w,n=this.getElXCrosshairs();if(t.tooltipEl.classList.remove("apexcharts-active"),this.deactivateHoverFilter(),"bubble"!==e.config.chart.type&&this.marker.resetPointsSize(),null!==n&&n.classList.remove("apexcharts-active"),null!==this.ycrosshairs&&this.ycrosshairs.classList.remove("apexcharts-active"),this.blxaxisTooltip&&this.xaxisTooltip.classList.remove("apexcharts-active"),this.blyaxisTooltip){null===this.yaxisTTEls&&(this.yaxisTTEls=e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));for(var i=0;i<this.yaxisTTEls.length;i++)this.yaxisTTEls[i].classList.remove("apexcharts-active")}e.config.legend.tooltipHoverFormatter&&this.legendLabels.forEach((function(t){var e=t.getAttribute("data:default-text");t.innerHTML=decodeURIComponent(e)}))}},{key:"markerClick",value:function(t,e,n){var i=this.w;"function"==typeof i.config.chart.events.markerClick&&i.config.chart.events.markerClick(t,this.ctx,{seriesIndex:e,dataPointIndex:n,w:i}),this.ctx.events.fireEvent("markerClick",[t,this.ctx,{seriesIndex:e,dataPointIndex:n,w:i}])}},{key:"create",value:function(t,e,n,i,r){var a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,o=this.w,s=e;"mouseup"===t.type&&this.markerClick(t,n,i),null===a&&(a=this.tConfig.shared);var l=this.tooltipUtil.hasMarkers(),c=this.tooltipUtil.getElBars();if(o.config.legend.tooltipHoverFormatter){var u=o.config.legend.tooltipHoverFormatter,h=Array.from(this.legendLabels);h.forEach((function(t){var e=t.getAttribute("data:default-text");t.innerHTML=decodeURIComponent(e)}));for(var f=0;f<h.length;f++){var d=h[f],p=parseInt(d.getAttribute("i"),10),g=decodeURIComponent(d.getAttribute("data:default-text")),m=u(g,{seriesIndex:a?p:n,dataPointIndex:i,w:o});if(a)d.innerHTML=o.globals.collapsedSeriesIndices.indexOf(p)<0?m:g;else if(d.innerHTML=p===n?m:g,n===p)break}}if(a){if(s.tooltipLabels.drawSeriesTexts({ttItems:r,i:n,j:i,shared:!this.showOnIntersect&&this.tConfig.shared}),l&&(o.globals.markers.largestSize>0?s.marker.enlargePoints(i):s.tooltipPosition.moveDynamicPointsOnHover(i)),this.tooltipUtil.hasBars()&&(this.barSeriesHeight=this.tooltipUtil.getBarsHeight(c),this.barSeriesHeight>0)){var v=new x(this.ctx),b=o.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(i,"']"));this.deactivateHoverFilter(),this.tooltipPosition.moveStickyTooltipOverBars(i);for(var y=0;y<b.length;y++)v.pathMouseEnter(b[y])}}else s.tooltipLabels.drawSeriesTexts({shared:!1,ttItems:r,i:n,j:i}),this.tooltipUtil.hasBars()&&s.tooltipPosition.moveStickyTooltipOverBars(i),l&&s.tooltipPosition.moveMarkers(n,i)}}]),t}(),vt=function(){function t(e){a(this,t),this.w=e.w,this.barCtx=e}return s(t,[{key:"handleBarDataLabels",value:function(t){var e=t.x,n=t.y,i=t.y1,r=t.y2,a=t.i,o=t.j,s=t.realIndex,l=t.series,c=t.barHeight,u=t.barWidth,h=t.barYPosition,f=t.visibleSeries,d=t.renderedPath,p=this.w,g=new x(this.barCtx.ctx),m=Array.isArray(this.barCtx.strokeWidth)?this.barCtx.strokeWidth[s]:this.barCtx.strokeWidth,v=e+parseFloat(u*f),b=n+parseFloat(c*f);p.globals.isXNumeric&&!p.globals.isBarHorizontal&&(v=e+parseFloat(u*(f+1)),b=n+parseFloat(c*(f+1))-m);var y,w=e,k=n,S=p.config.dataLabels,C=this.barCtx.barOptions.dataLabels;void 0!==h&&this.barCtx.isTimelineBar&&(b=h,k=h);var A=S.offsetX,E=S.offsetY,P={width:0,height:0};p.config.dataLabels.enabled&&(P=g.getTextRects(p.globals.yLabelFormatters[0](p.globals.maxY),parseFloat(S.style.fontSize)));var T={x:e,y:n,i:a,j:o,renderedPath:d,bcx:v,bcy:b,barHeight:c,barWidth:u,textRects:P,strokeWidth:m,dataLabelsX:w,dataLabelsY:k,barDataLabelsConfig:C,offX:A,offY:E};return y=this.barCtx.isHorizontal?this.calculateBarsDataLabelsPosition(T):this.calculateColumnsDataLabelsPosition(T),d.attr({cy:y.bcy,cx:y.bcx,j:o,val:l[a][o],barHeight:c,barWidth:u}),this.drawCalculatedDataLabels({x:y.dataLabelsX,y:y.dataLabelsY,val:this.barCtx.isTimelineBar?[i,r]:l[a][o],i:s,j:o,barWidth:u,barHeight:c,textRects:P,dataLabelsConfig:S})}},{key:"calculateColumnsDataLabelsPosition",value:function(t){var e,n=this.w,i=t.i,r=t.j,a=t.y,o=t.bcx,s=t.barWidth,l=t.barHeight,c=t.textRects,u=t.dataLabelsY,h=t.barDataLabelsConfig,f=t.strokeWidth,d=t.offX,p=t.offY,g="vertical"===n.config.plotOptions.bar.dataLabels.orientation;o-=f/2;var m=n.globals.gridWidth/n.globals.dataPoints;e=n.globals.isXNumeric?o-s/2+d:o-m+s/2+d,g&&(e=e+c.height/2-f/2-2);var v=this.barCtx.series[i][r]<=0;switch(this.barCtx.isReversed&&(a-=l),h.position){case"center":u=g?v?a+l/2+p:a+l/2-p:v?a+l/2+c.height/2+p:a+l/2+c.height/2-p;break;case"bottom":u=g?v?a+l+p:a+l-p:v?a+l+c.height+f+p:a+l-c.height/2+f-p;break;case"top":u=g?v?a+p:a-p:v?a-c.height/2-p:a+c.height+p}return n.config.chart.stacked||(u<0?u=0+f:u+c.height/3>n.globals.gridHeight&&(u=n.globals.gridHeight-f)),{bcx:o,bcy:a,dataLabelsX:e,dataLabelsY:u}}},{key:"calculateBarsDataLabelsPosition",value:function(t){var e=this.w,n=t.x,i=t.i,r=t.j,a=t.bcy,o=t.barHeight,s=t.barWidth,l=t.textRects,c=t.dataLabelsX,u=t.strokeWidth,h=t.barDataLabelsConfig,f=t.offX,d=t.offY,p=e.globals.gridHeight/e.globals.dataPoints,g=a-(this.barCtx.isTimelineBar?0:p)+o/2+l.height/2+d-3,m=this.barCtx.series[i][r]<=0,v=n;switch(this.barCtx.isReversed&&(v=n+s,n=e.globals.gridWidth-s),h.position){case"center":c=m?v-s/2-f:v-s/2+f;break;case"bottom":c=m?v-s-u-Math.round(l.width/2)-f:v-s+u+Math.round(l.width/2)+f;break;case"top":c=m?v-u+Math.round(l.width/2)-f:v-u-Math.round(l.width/2)+f}return e.config.chart.stacked||(c<0?c=c+l.width+u:c+l.width/2>e.globals.gridWidth&&(c=e.globals.gridWidth-l.width-u)),{bcx:n,bcy:a,dataLabelsX:c,dataLabelsY:g}}},{key:"drawCalculatedDataLabels",value:function(t){var e=t.x,n=t.y,i=t.val,r=t.i,a=t.j,o=t.textRects,s=t.barHeight,l=t.barWidth,c=t.dataLabelsConfig,h=this.w,f="rotate(0)";"vertical"===h.config.plotOptions.bar.dataLabels.orientation&&(f="rotate(-90, ".concat(e,", ").concat(n,")"));var d=new z(this.barCtx.ctx),p=new x(this.barCtx.ctx),g=c.formatter,m=null,v=h.globals.collapsedSeriesIndices.indexOf(r)>-1;if(c.enabled&&!v){m=p.group({class:"apexcharts-data-labels",transform:f});var b="";void 0!==i&&(b=g(i,{seriesIndex:r,dataPointIndex:a,w:h})),0===i&&h.config.chart.stacked&&(b="");var y=h.globals.series[r][a]<=0,w=h.config.plotOptions.bar.dataLabels.position;"vertical"===h.config.plotOptions.bar.dataLabels.orientation&&("top"===w&&(c.textAnchor=y?"end":"start"),"center"===w&&(c.textAnchor="middle"),"bottom"===w&&(c.textAnchor=y?"end":"start")),this.barCtx.isTimelineBar&&this.barCtx.barOptions.dataLabels.hideOverflowingLabels&&l<p.getTextRects(b,parseFloat(c.style.fontSize)).width&&(b=""),h.config.chart.stacked&&this.barCtx.barOptions.dataLabels.hideOverflowingLabels&&(this.barCtx.isHorizontal?((l=Math.abs(h.globals.series[r][a])/this.barCtx.invertedYRatio[this.barCtx.yaxisIndex])>0&&o.width/1.6>l||l<0&&o.width/1.6<l)&&(b=""):(s=Math.abs(h.globals.series[r][a])/this.barCtx.yRatio[this.barCtx.yaxisIndex],o.height/1.6>s&&(b="")));var k=u({},c);this.barCtx.isHorizontal&&i<0&&("start"===c.textAnchor?k.textAnchor="end":"end"===c.textAnchor&&(k.textAnchor="start")),d.plotDataLabelsText({x:e,y:n,text:b,i:r,j:a,parent:m,dataLabelsConfig:k,alwaysDrawDataLabel:!0,offsetCorrection:!0})}return m}}]),t}(),xt=function(){function t(e){a(this,t),this.w=e.w,this.barCtx=e}return s(t,[{key:"initVariables",value:function(t){var e=this.w;this.barCtx.series=t,this.barCtx.totalItems=0,this.barCtx.seriesLen=0,this.barCtx.visibleI=-1,this.barCtx.visibleItems=1;for(var n=0;n<t.length;n++)if(t[n].length>0&&(this.barCtx.seriesLen=this.barCtx.seriesLen+1,this.barCtx.totalItems+=t[n].length),e.globals.isXNumeric)for(var i=0;i<t[n].length;i++)e.globals.seriesX[n][i]>e.globals.minX&&e.globals.seriesX[n][i]<e.globals.maxX&&this.barCtx.visibleItems++;else this.barCtx.visibleItems=e.globals.dataPoints;0===this.barCtx.seriesLen&&(this.barCtx.seriesLen=1)}},{key:"initialPositions",value:function(){var t,e,n,i,r,a,o,s,l=this.w,c=l.globals.dataPoints;if(this.barCtx.isTimelineBar&&(c=l.globals.labels.length),this.barCtx.isHorizontal)r=(n=l.globals.gridHeight/c)/this.barCtx.seriesLen,l.globals.isXNumeric&&(r=(n=l.globals.gridHeight/this.barCtx.totalItems)/this.barCtx.seriesLen),r=r*parseInt(this.barCtx.barOptions.barHeight,10)/100,s=this.barCtx.baseLineInvertedY+l.globals.padHorizontal+(this.barCtx.isReversed?l.globals.gridWidth:0)-(this.barCtx.isReversed?2*this.barCtx.baseLineInvertedY:0),e=(n-r*this.barCtx.seriesLen)/2;else{if(i=l.globals.gridWidth/this.barCtx.visibleItems,l.config.xaxis.convertedCatToNumeric&&(i=l.globals.gridWidth/l.globals.dataPoints),a=i/this.barCtx.seriesLen*parseInt(this.barCtx.barOptions.columnWidth,10)/100,l.globals.isXNumeric){var u=this.barCtx.xRatio;l.config.xaxis.convertedCatToNumeric&&(u=this.barCtx.initialXRatio),l.globals.minXDiff&&l.globals.minXDiff/u>0&&(i=l.globals.minXDiff/u),(a=i/this.barCtx.seriesLen*parseInt(this.barCtx.barOptions.columnWidth,10)/100)<1&&(a=1)}o=l.globals.gridHeight-this.barCtx.baseLineY[this.barCtx.yaxisIndex]-(this.barCtx.isReversed?l.globals.gridHeight:0)+(this.barCtx.isReversed?2*this.barCtx.baseLineY[this.barCtx.yaxisIndex]:0),t=l.globals.padHorizontal+(i-a*this.barCtx.seriesLen)/2}return{x:t,y:e,yDivision:n,xDivision:i,barHeight:r,barWidth:a,zeroH:o,zeroW:s}}},{key:"getPathFillColor",value:function(t,e,n,i){var r=this.w,a=new I(this.barCtx.ctx),o=null,s=this.barCtx.barOptions.distributed?n:e;return this.barCtx.barOptions.colors.ranges.length>0&&this.barCtx.barOptions.colors.ranges.map((function(i){t[e][n]>=i.from&&t[e][n]<=i.to&&(o=i.color)})),r.config.series[e].data[n]&&r.config.series[e].data[n].fillColor&&(o=r.config.series[e].data[n].fillColor),a.fillPath({seriesNumber:this.barCtx.barOptions.distributed?s:i,dataPointIndex:n,color:o,value:t[e][n]})}},{key:"getStrokeWidth",value:function(t,e,n){var i=0,r=this.w;return void 0===this.barCtx.series[t][e]||null===this.barCtx.series[t][e]?this.barCtx.isNullValue=!0:this.barCtx.isNullValue=!1,r.config.stroke.show&&(this.barCtx.isNullValue||(i=Array.isArray(this.barCtx.strokeWidth)?this.barCtx.strokeWidth[n]:this.barCtx.strokeWidth)),i}},{key:"barBackground",value:function(t){var e=t.bc,n=t.i,i=t.y1,r=t.y2,a=t.elSeries,o=this.w,s=new x(this.barCtx.ctx);if(this.barCtx.barOptions.colors.backgroundBarColors.length>0&&0===n){e>=this.barCtx.barOptions.colors.backgroundBarColors.length&&(e=0);var l=this.barCtx.barOptions.colors.backgroundBarColors[e],c=s.drawRect(0,i,o.globals.gridWidth,r,0,l,this.barCtx.barOptions.colors.backgroundBarOpacity);a.add(c),c.node.classList.add("apexcharts-backgroundBar")}}},{key:"getBarEndingShape",value:function(t,e,n,i,r){var a=new x(this.barCtx.ctx);if(this.barCtx.isHorizontal){var o=null,s=e.x;if(void 0!==n[i][r]||null!==n[i][r]){var l=n[i][r]<0,c=e.barHeight/2-e.strokeWidth;switch(l&&(c=-e.barHeight/2-e.strokeWidth),t.config.chart.stacked||"rounded"===this.barCtx.barOptions.endingShape&&(s=e.x-c/2),this.barCtx.barOptions.endingShape){case"flat":o=a.line(s,e.barYPosition+e.barHeight-e.strokeWidth);break;case"rounded":o=a.quadraticCurve(s+c,e.barYPosition+(e.barHeight-e.strokeWidth)/2,s,e.barYPosition+e.barHeight-e.strokeWidth)}}return{path:o,ending_p_from:"",newX:s}}var u=null,h=e.y;if(void 0!==n[i][r]||null!==n[i][r]){var f=n[i][r]<0,d=e.barWidth/2-e.strokeWidth;switch(f&&(d=-e.barWidth/2-e.strokeWidth),t.config.chart.stacked||"rounded"===this.barCtx.barOptions.endingShape&&(h+=d/2),this.barCtx.barOptions.endingShape){case"flat":u=a.line(e.barXPosition+e.barWidth-e.strokeWidth,h);break;case"rounded":u=a.quadraticCurve(e.barXPosition+(e.barWidth-e.strokeWidth)/2,h-d,e.barXPosition+e.barWidth-e.strokeWidth,h)}}return{path:u,ending_p_from:"",newY:h}}}]),t}(),bt=function(){function t(e,n){a(this,t),this.ctx=e,this.w=e.w;var i=this.w;this.barOptions=i.config.plotOptions.bar,this.isHorizontal=this.barOptions.horizontal,this.strokeWidth=i.config.stroke.width,this.isNullValue=!1,this.isTimelineBar="datetime"===i.config.xaxis.type&&i.globals.seriesRangeBarTimeline.length,this.xyRatios=n,null!==this.xyRatios&&(this.xRatio=n.xRatio,this.initialXRatio=n.initialXRatio,this.yRatio=n.yRatio,this.invertedXRatio=n.invertedXRatio,this.invertedYRatio=n.invertedYRatio,this.baseLineY=n.baseLineY,this.baseLineInvertedY=n.baseLineInvertedY),this.yaxisIndex=0,this.seriesLen=0,this.barHelpers=new xt(this)}return s(t,[{key:"draw",value:function(t,e){var n=this.w,i=new x(this.ctx),r=new _(this.ctx,n);t=r.getLogSeries(t),this.series=t,this.yRatio=r.getLogYRatios(this.yRatio),this.barHelpers.initVariables(t);var a=i.group({class:"apexcharts-bar-series apexcharts-plot-series"});n.config.dataLabels.enabled&&this.totalItems>this.barOptions.dataLabels.maxItems&&console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.");for(var o=0,s=0;o<t.length;o++,s++){var l,c,h,f,d=void 0,p=void 0,m=[],v=[],b=n.globals.comboCharts?e[o]:o,y=i.group({class:"apexcharts-series",rel:o+1,seriesName:g.escapeString(n.globals.seriesNames[b]),"data:realIndex":b});this.ctx.series.addCollapsedClassToSeries(y,b),t[o].length>0&&(this.visibleI=this.visibleI+1);var w=0,k=0;this.yRatio.length>1&&(this.yaxisIndex=b),this.isReversed=n.config.yaxis[this.yaxisIndex]&&n.config.yaxis[this.yaxisIndex].reversed;var S=this.barHelpers.initialPositions();p=S.y,w=S.barHeight,c=S.yDivision,f=S.zeroW,d=S.x,k=S.barWidth,l=S.xDivision,h=S.zeroH,this.horizontal||v.push(d+k/2);for(var C=i.group({class:"apexcharts-datalabels","data:realIndex":b}),A=0;A<n.globals.dataPoints;A++){var E=this.barHelpers.getStrokeWidth(o,A,b),P=null,T={indexes:{i:o,j:A,realIndex:b,bc:s},x:d,y:p,strokeWidth:E,elSeries:y};this.isHorizontal?(P=this.drawBarPaths(u({},T,{barHeight:w,zeroW:f,yDivision:c})),k=this.series[o][A]/this.invertedYRatio):(P=this.drawColumnPaths(u({},T,{xDivision:l,barWidth:k,zeroH:h})),w=this.series[o][A]/this.yRatio[this.yaxisIndex]),p=P.y,d=P.x,A>0&&v.push(d+k/2),m.push(p);var O=this.barHelpers.getPathFillColor(t,o,A,b);this.renderSeries({realIndex:b,pathFill:O,j:A,i:o,pathFrom:P.pathFrom,pathTo:P.pathTo,strokeWidth:E,elSeries:y,x:d,y:p,series:t,barHeight:w,barWidth:k,elDataLabelsWrap:C,visibleSeries:this.visibleI,type:"bar"})}n.globals.seriesXvalues[b]=v,n.globals.seriesYvalues[b]=m,a.add(y)}return a}},{key:"renderSeries",value:function(t){var e=t.realIndex,n=t.pathFill,i=t.lineFill,r=t.j,a=t.i,o=t.pathFrom,s=t.pathTo,l=t.strokeWidth,c=t.elSeries,u=t.x,h=t.y,f=t.y1,d=t.y2,p=t.series,g=t.barHeight,v=t.barWidth,b=t.barYPosition,y=t.elDataLabelsWrap,w=t.visibleSeries,k=t.type,S=this.w,C=new x(this.ctx);i||(i=this.barOptions.distributed?S.globals.stroke.colors[r]:S.globals.stroke.colors[e]),S.config.series[a].data[r]&&S.config.series[a].data[r].strokeColor&&(i=S.config.series[a].data[r].strokeColor),this.isNullValue&&(n="none");var A=r/S.config.chart.animations.animateGradually.delay*(S.config.chart.animations.speed/S.globals.dataPoints)/2.4,E=C.renderPaths({i:a,j:r,realIndex:e,pathFrom:o,pathTo:s,stroke:i,strokeWidth:l,strokeLineCap:S.config.stroke.lineCap,fill:n,animationDelay:A,initialSpeed:S.config.chart.animations.speed,dataChangeSpeed:S.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-".concat(k,"-area")});E.attr("clip-path","url(#gridRectMask".concat(S.globals.cuid,")")),void 0!==f&&void 0!==d&&(E.attr("data-range-y1",f),E.attr("data-range-y2",d)),new m(this.ctx).setSelectionFilter(E,e,r),c.add(E);var P=new vt(this).handleBarDataLabels({x:u,y:h,y1:f,y2:d,i:a,j:r,series:p,realIndex:e,barHeight:g,barWidth:v,barYPosition:b,renderedPath:E,visibleSeries:w});return null!==P&&y.add(P),c.add(y),c}},{key:"drawBarPaths",value:function(t){var e=t.indexes,n=t.barHeight,i=t.strokeWidth,r=t.zeroW,a=t.x,o=t.y,s=t.yDivision,l=t.elSeries,c=this.w,u=new x(this.ctx),h=e.i,f=e.j,d=e.realIndex,p=e.bc;c.globals.isXNumeric&&(o=(c.globals.seriesX[h][f]-c.globals.minX)/this.invertedXRatio-n);var g=o+n*this.visibleI,m=u.move(r,g),v=u.move(r,g);c.globals.previousPaths.length>0&&(v=this.getPreviousPath(d,f));var b={barHeight:n,strokeWidth:i,barYPosition:g,x:a=void 0===this.series[h][f]||null===this.series[h][f]?r:r+this.series[h][f]/this.invertedYRatio-2*(this.isReversed?this.series[h][f]/this.invertedYRatio:0),zeroW:r},y=this.barHelpers.getBarEndingShape(c,b,this.series,h,f);return m=m+u.line(y.newX,g)+y.path+u.line(r,g+n-i)+u.line(r,g),v=v+u.line(r,g)+y.ending_p_from+u.line(r,g+n-i)+u.line(r,g+n-i)+u.line(r,g),c.globals.isXNumeric||(o+=s),this.barHelpers.barBackground({bc:p,i:h,y1:g-n*this.visibleI,y2:n*this.seriesLen,elSeries:l}),{pathTo:m,pathFrom:v,x:a,y:o,barYPosition:g}}},{key:"drawColumnPaths",value:function(t){var e=t.indexes,n=t.x,i=t.y,r=t.xDivision,a=t.barWidth,o=t.zeroH,s=t.strokeWidth,l=t.elSeries,c=this.w,u=new x(this.ctx),h=e.i,f=e.j,d=e.realIndex,p=e.bc;if(c.globals.isXNumeric){var g=h;c.globals.seriesX[h].length||(g=c.globals.maxValsInArrayIndex),n=(c.globals.seriesX[g][f]-c.globals.minX)/this.xRatio-a*this.seriesLen/2}var m=n+a*this.visibleI,v=u.move(m,o),b=u.move(m,o);c.globals.previousPaths.length>0&&(b=this.getPreviousPath(d,f));var y={barWidth:a,strokeWidth:s,barXPosition:m,y:i=void 0===this.series[h][f]||null===this.series[h][f]?o:o-this.series[h][f]/this.yRatio[this.yaxisIndex]+2*(this.isReversed?this.series[h][f]/this.yRatio[this.yaxisIndex]:0),zeroH:o},w=this.barHelpers.getBarEndingShape(c,y,this.series,h,f);if(v=v+u.line(m,w.newY)+w.path+u.line(m+a-s,o)+u.line(m-s/2,o),b=b+u.line(m,o)+w.ending_p_from+u.line(m+a-s,o)+u.line(m+a-s,o)+u.line(m-s/2,o),c.globals.isXNumeric||(n+=r),this.barOptions.colors.backgroundBarColors.length>0&&0===h){p>=this.barOptions.colors.backgroundBarColors.length&&(p=0);var k=this.barOptions.colors.backgroundBarColors[p],S=u.drawRect(m-s/2-a*this.visibleI,0,a*this.seriesLen+s/2,c.globals.gridHeight,0,k,this.barOptions.colors.backgroundBarOpacity);l.add(S),S.node.classList.add("apexcharts-backgroundBar")}return{pathTo:v,pathFrom:b,x:n,y:i,barXPosition:m}}},{key:"getPreviousPath",value:function(t,e){for(var n,i=this.w,r=0;r<i.globals.previousPaths.length;r++){var a=i.globals.previousPaths[r];a.paths&&a.paths.length>0&&parseInt(a.realIndex,10)===parseInt(t,10)&&void 0!==i.globals.previousPaths[r].paths[e]&&(n=i.globals.previousPaths[r].paths[e].d)}return n}}]),t}(),yt=function(t){function e(){return a(this,e),d(this,f(e).apply(this,arguments))}return h(e,bt),s(e,[{key:"draw",value:function(t,e){var n=this,i=this.w;this.graphics=new x(this.ctx),this.bar=new bt(this.ctx,this.xyRatios);var r=new _(this.ctx,i);t=r.getLogSeries(t),this.yRatio=r.getLogYRatios(this.yRatio),this.barHelpers.initVariables(t),"100%"===i.config.chart.stackType&&(t=i.globals.seriesPercent.slice()),this.series=t,this.totalItems=0,this.prevY=[],this.prevX=[],this.prevYF=[],this.prevXF=[],this.prevYVal=[],this.prevXVal=[],this.xArrj=[],this.xArrjF=[],this.xArrjVal=[],this.yArrj=[],this.yArrjF=[],this.yArrjVal=[];for(var a=0;a<t.length;a++)t[a].length>0&&(this.totalItems+=t[a].length);for(var o=this.graphics.group({class:"apexcharts-bar-series apexcharts-plot-series"}),s=0,l=0,c=function(r,a){var c=void 0,h=void 0,f=void 0,d=void 0,p=[],m=[],v=i.globals.comboCharts?e[r]:r;n.yRatio.length>1&&(n.yaxisIndex=v),n.isReversed=i.config.yaxis[n.yaxisIndex]&&i.config.yaxis[n.yaxisIndex].reversed;var x=n.graphics.group({class:"apexcharts-series",seriesName:g.escapeString(i.globals.seriesNames[v]),rel:r+1,"data:realIndex":v}),b=n.graphics.group({class:"apexcharts-datalabels","data:realIndex":v}),y=0,w=0,k=n.initialPositions(s,l,c,h,f,d);l=k.y,y=k.barHeight,h=k.yDivision,d=k.zeroW,s=k.x,w=k.barWidth,c=k.xDivision,f=k.zeroH,n.yArrj=[],n.yArrjF=[],n.yArrjVal=[],n.xArrj=[],n.xArrjF=[],n.xArrjVal=[],1===n.prevY.length&&n.prevY[0].every((function(t){return isNaN(t)}))&&(n.prevY[0]=n.prevY[0].map((function(t){return f})),n.prevYF[0]=n.prevYF[0].map((function(t){return 0})));for(var S=0;S<i.globals.dataPoints;S++){var C=n.barHelpers.getStrokeWidth(r,S,v),A={indexes:{i:r,j:S,realIndex:v,bc:a},strokeWidth:C,x:s,y:l,elSeries:x},E=null;n.isHorizontal?(E=n.drawStackedBarPaths(u({},A,{zeroW:d,barHeight:y,yDivision:h})),w=n.series[r][S]/n.invertedYRatio):(E=n.drawStackedColumnPaths(u({},A,{xDivision:c,barWidth:w,zeroH:f})),y=n.series[r][S]/n.yRatio[n.yaxisIndex]),l=E.y,s=E.x,p.push(s),m.push(l);var P=n.barHelpers.getPathFillColor(t,r,S,v);x=n.renderSeries({realIndex:v,pathFill:P,j:S,i:r,pathFrom:E.pathFrom,pathTo:E.pathTo,strokeWidth:C,elSeries:x,x:s,y:l,series:t,barHeight:y,barWidth:w,elDataLabelsWrap:b,type:"bar",visibleSeries:0})}i.globals.seriesXvalues[v]=p,i.globals.seriesYvalues[v]=m,n.prevY.push(n.yArrj),n.prevYF.push(n.yArrjF),n.prevYVal.push(n.yArrjVal),n.prevX.push(n.xArrj),n.prevXF.push(n.xArrjF),n.prevXVal.push(n.xArrjVal),o.add(x)},h=0,f=0;h<t.length;h++,f++)c(h,f);return o}},{key:"initialPositions",value:function(t,e,n,i,r,a){var o,s,l=this.w;return this.isHorizontal?(o=(o=i=l.globals.gridHeight/l.globals.dataPoints)*parseInt(l.config.plotOptions.bar.barHeight,10)/100,a=this.baseLineInvertedY+l.globals.padHorizontal+(this.isReversed?l.globals.gridWidth:0)-(this.isReversed?2*this.baseLineInvertedY:0),e=(i-o)/2):(s=n=l.globals.gridWidth/l.globals.dataPoints,s=l.globals.isXNumeric?(n=l.globals.minXDiff/this.xRatio)*parseInt(this.barOptions.columnWidth,10)/100:s*parseInt(l.config.plotOptions.bar.columnWidth,10)/100,r=this.baseLineY[this.yaxisIndex]+(this.isReversed?l.globals.gridHeight:0)-(this.isReversed?2*this.baseLineY[this.yaxisIndex]:0),t=l.globals.padHorizontal+(n-s)/2),{x:t,y:e,yDivision:i,xDivision:n,barHeight:o,barWidth:s,zeroH:r,zeroW:a}}},{key:"drawStackedBarPaths",value:function(t){for(var e,n=t.indexes,i=t.barHeight,r=t.strokeWidth,a=t.zeroW,o=t.x,s=t.y,l=t.yDivision,c=t.elSeries,u=this.w,h=s,f=n.i,d=n.j,p=n.realIndex,g=n.bc,m=0,v=0;v<this.prevXF.length;v++)m+=this.prevXF[v][d];if(f>0){var x=a;this.prevXVal[f-1][d]<0?x=this.series[f][d]>=0?this.prevX[f-1][d]+m-2*(this.isReversed?m:0):this.prevX[f-1][d]:this.prevXVal[f-1][d]>=0&&(x=this.series[f][d]>=0?this.prevX[f-1][d]:this.prevX[f-1][d]-m+2*(this.isReversed?m:0)),e=x}else e=a;o=null===this.series[f][d]?e:e+this.series[f][d]/this.invertedYRatio-2*(this.isReversed?this.series[f][d]/this.invertedYRatio:0);var b={barHeight:i,strokeWidth:r,invertedYRatio:this.invertedYRatio,barYPosition:h,x:o},y=this.barHelpers.getBarEndingShape(u,b,this.series,f,d);this.series.length>1&&f!==this.endingShapeOnSeriesNumber&&(y.path=this.graphics.line(y.newX,h+i-r)),this.xArrj.push(y.newX),this.xArrjF.push(Math.abs(e-y.newX)),this.xArrjVal.push(this.series[f][d]);var w=this.graphics.move(e,h),k=this.graphics.move(e,h);return u.globals.previousPaths.length>0&&(k=this.bar.getPreviousPath(p,d,!1)),w=w+this.graphics.line(y.newX,h)+y.path+this.graphics.line(e,h+i-r)+this.graphics.line(e,h),k=k+this.graphics.line(e,h)+this.graphics.line(e,h+i-r)+this.graphics.line(e,h+i-r)+this.graphics.line(e,h+i-r)+this.graphics.line(e,h),this.barHelpers.barBackground({bc:g,i:f,y1:h,y2:i,elSeries:c}),{pathTo:w,pathFrom:k,x:o,y:s+=l}}},{key:"drawStackedColumnPaths",value:function(t){var e=t.indexes,n=t.x,i=t.y,r=t.xDivision,a=t.barWidth,o=t.zeroH,s=t.strokeWidth,l=t.elSeries,c=this.w,u=e.i,h=e.j,f=e.realIndex,d=e.bc;if(c.globals.isXNumeric){var p=c.globals.seriesX[u][h];p||(p=0),n=(p-c.globals.minX)/this.xRatio-a/2}for(var g,m=n,v=0,x=0;x<this.prevYF.length;x++)v+=isNaN(this.prevYF[x][h])?0:this.prevYF[x][h];if(u>0&&!c.globals.isXNumeric||u>0&&c.globals.isXNumeric&&c.globals.seriesX[u-1][h]===c.globals.seriesX[u][h]){var b,y,w=Math.min(this.yRatio.length+1,u+1);if(void 0!==this.prevY[u-1])for(var k=1;k<w;k++)if(!isNaN(this.prevY[u-k][h])){y=this.prevY[u-k][h];break}for(var S=1;S<w;S++){if(this.prevYVal[u-S][h]<0){b=this.series[u][h]>=0?y-v+2*(this.isReversed?v:0):y;break}if(this.prevYVal[u-S][h]>=0){b=this.series[u][h]>=0?y:y+v-2*(this.isReversed?v:0);break}}void 0===b&&(b=c.globals.gridHeight),g=this.prevYF[0].every((function(t){return 0===t}))&&this.prevYF.slice(1,u).every((function(t){return t.every((function(t){return isNaN(t)}))}))?c.globals.gridHeight-o:b}else g=c.globals.gridHeight-o;i=g-this.series[u][h]/this.yRatio[this.yaxisIndex]+2*(this.isReversed?this.series[u][h]/this.yRatio[this.yaxisIndex]:0);var C={barWidth:a,strokeWidth:s,yRatio:this.yRatio[this.yaxisIndex],barXPosition:m,y:i},A=this.barHelpers.getBarEndingShape(c,C,this.series,u,h);this.yArrj.push(A.newY),this.yArrjF.push(Math.abs(g-A.newY)),this.yArrjVal.push(this.series[u][h]);var E=this.graphics.move(m,g),P=this.graphics.move(m,g);if(c.globals.previousPaths.length>0&&(P=this.bar.getPreviousPath(f,h,!1)),E=E+this.graphics.line(m,A.newY)+A.path+this.graphics.line(m+a-s,g)+this.graphics.line(m-s/2,g),P=P+this.graphics.line(m,g)+this.graphics.line(m+a-s,g)+this.graphics.line(m+a-s,g)+this.graphics.line(m+a-s,g)+this.graphics.line(m-s/2,g),c.config.plotOptions.bar.colors.backgroundBarColors.length>0&&0===u){d>=c.config.plotOptions.bar.colors.backgroundBarColors.length&&(d=0);var T=c.config.plotOptions.bar.colors.backgroundBarColors[d],O=this.graphics.drawRect(m,0,a,c.globals.gridHeight,0,T,c.config.plotOptions.bar.colors.backgroundBarOpacity);l.add(O),O.node.classList.add("apexcharts-backgroundBar")}return n+=r,{pathTo:E,pathFrom:P,x:c.globals.isXNumeric?n-r:n,y:i}}}]),e}(),wt=function(t){function e(){return a(this,e),d(this,f(e).apply(this,arguments))}return h(e,bt),s(e,[{key:"draw",value:function(t,e){var n=this.w,i=new x(this.ctx),r=new I(this.ctx);this.candlestickOptions=this.w.config.plotOptions.candlestick;var a=new _(this.ctx,n);t=a.getLogSeries(t),this.series=t,this.yRatio=a.getLogYRatios(this.yRatio),this.barHelpers.initVariables(t);for(var o=i.group({class:"apexcharts-candlestick-series apexcharts-plot-series"}),s=0;s<t.length;s++){var l,c,u,h,f=void 0,d=void 0,p=[],m=[],v=n.globals.comboCharts?e[s]:s,b=i.group({class:"apexcharts-series",seriesName:g.escapeString(n.globals.seriesNames[v]),rel:s+1,"data:realIndex":v});t[s].length>0&&(this.visibleI=this.visibleI+1),this.yRatio.length>1&&(this.yaxisIndex=v);var y=this.barHelpers.initialPositions();d=y.y,u=y.barHeight,f=y.x,h=y.barWidth,l=y.xDivision,c=y.zeroH,m.push(f+h/2);for(var w=i.group({class:"apexcharts-datalabels","data:realIndex":v}),k=0;k<n.globals.dataPoints;k++){var S,C=this.barHelpers.getStrokeWidth(s,k,v),A=this.drawCandleStickPaths({indexes:{i:s,j:k,realIndex:v},x:f,y:d,xDivision:l,barWidth:h,zeroH:c,strokeWidth:C,elSeries:b});d=A.y,f=A.x,S=A.color,k>0&&m.push(f+h/2),p.push(d);var E=r.fillPath({seriesNumber:v,dataPointIndex:k,color:S,value:t[s][k]}),P=this.candlestickOptions.wick.useFillColor?S:void 0;this.renderSeries({realIndex:v,pathFill:E,lineFill:P,j:k,i:s,pathFrom:A.pathFrom,pathTo:A.pathTo,strokeWidth:C,elSeries:b,x:f,y:d,series:t,barHeight:u,barWidth:h,elDataLabelsWrap:w,visibleSeries:this.visibleI,type:"candlestick"})}n.globals.seriesXvalues[v]=m,n.globals.seriesYvalues[v]=p,o.add(b)}return o}},{key:"drawCandleStickPaths",value:function(t){var e=t.indexes,n=t.x,i=(t.y,t.xDivision),r=t.barWidth,a=t.zeroH,o=t.strokeWidth,s=this.w,l=new x(this.ctx),c=e.i,u=e.j,h=!0,f=s.config.plotOptions.candlestick.colors.upward,d=s.config.plotOptions.candlestick.colors.downward,p=this.yRatio[this.yaxisIndex],g=e.realIndex,m=this.getOHLCValue(g,u),v=a,b=a;m.o>m.c&&(h=!1);var y=Math.min(m.o,m.c),w=Math.max(m.o,m.c);s.globals.isXNumeric&&(n=(s.globals.seriesX[g][u]-s.globals.minX)/this.xRatio-r/2);var k=n+r*this.visibleI;void 0===this.series[c][u]||null===this.series[c][u]?y=a:(y=a-y/p,w=a-w/p,v=a-m.h/p,b=a-m.l/p);var S=l.move(k,a),C=l.move(k,y);return s.globals.previousPaths.length>0&&(C=this.getPreviousPath(g,u,!0)),S=l.move(k,w)+l.line(k+r/2,w)+l.line(k+r/2,v)+l.line(k+r/2,w)+l.line(k+r,w)+l.line(k+r,y)+l.line(k+r/2,y)+l.line(k+r/2,b)+l.line(k+r/2,y)+l.line(k,y)+l.line(k,w-o/2),C+=l.move(k,y),s.globals.isXNumeric||(n+=i),{pathTo:S,pathFrom:C,x:n,y:w,barXPosition:k,color:h?f:d}}},{key:"getOHLCValue",value:function(t,e){var n=this.w;return{o:n.globals.seriesCandleO[t][e],h:n.globals.seriesCandleH[t][e],l:n.globals.seriesCandleL[t][e],c:n.globals.seriesCandleC[t][e]}}}]),e}(),kt=function(){function t(e,n){a(this,t),this.ctx=e,this.w=e.w,this.xRatio=n.xRatio,this.yRatio=n.yRatio,this.negRange=!1,this.dynamicAnim=this.w.config.chart.animations.dynamicAnimation,this.rectRadius=this.w.config.plotOptions.heatmap.radius,this.strokeWidth=this.w.config.stroke.show?this.w.config.stroke.width:0}return s(t,[{key:"draw",value:function(t){var e=this.w,n=new x(this.ctx),i=n.group({class:"apexcharts-heatmap"});i.attr("clip-path","url(#gridRectMask".concat(e.globals.cuid,")"));var r=e.globals.gridWidth/e.globals.dataPoints,a=e.globals.gridHeight/e.globals.series.length,o=0,s=!1;this.checkColorRange();var l=t.slice();e.config.yaxis[0].reversed&&(s=!0,l.reverse());for(var c=s?0:l.length-1;s?c<l.length:c>=0;s?c++:c--){var u=n.group({class:"apexcharts-series apexcharts-heatmap-series",seriesName:g.escapeString(e.globals.seriesNames[c]),rel:c+1,"data:realIndex":c});if(e.config.chart.dropShadow.enabled){var h=e.config.chart.dropShadow;new m(this.ctx).dropShadow(u,h,c)}for(var f=0,d=0;d<l[c].length;d++){var p=1,v=e.config.plotOptions.heatmap.shadeIntensity,b=this.determineHeatColor(c,d);p=e.globals.hasNegs||this.negRange?e.config.plotOptions.heatmap.reverseNegativeShade?b.percent<0?b.percent/100*(1.25*v):(1-b.percent/100)*(1.25*v):b.percent<0?1-(1+b.percent/100)*v:(1-b.percent/100)*v:1-b.percent/100;var y=b.color,w=new g;e.config.plotOptions.heatmap.enableShades&&(p<0&&(p=0),y=g.hexToRgba(w.shadeColor(p,b.color),e.config.fill.opacity)),"image"===e.config.fill.type&&(y=new I(this.ctx).fillPath({seriesNumber:c,dataPointIndex:d,opacity:e.globals.hasNegs?b.percent<0?1-(1+b.percent/100):v+b.percent/100:b.percent/100,patternID:g.randomId(),width:e.config.fill.image.width?e.config.fill.image.width:r,height:e.config.fill.image.height?e.config.fill.image.height:a}));var k=this.rectRadius,S=n.drawRect(f,o,r,a,k);if(S.attr({cx:f,cy:o}),S.node.classList.add("apexcharts-heatmap-rect"),u.add(S),S.attr({fill:y,i:c,index:c,j:d,val:l[c][d],"stroke-width":this.strokeWidth,stroke:e.globals.stroke.colors[0],color:y}),S.node.addEventListener("mouseenter",n.pathMouseEnter.bind(this,S)),S.node.addEventListener("mouseleave",n.pathMouseLeave.bind(this,S)),S.node.addEventListener("mousedown",n.pathMouseDown.bind(this,S)),e.config.chart.animations.enabled&&!e.globals.dataChanged){var C=1;e.globals.resized||(C=e.config.chart.animations.speed),this.animateHeatMap(S,f,o,r,a,C)}if(e.globals.dataChanged){var A=1;if(this.dynamicAnim.enabled&&e.globals.shouldAnimate){A=this.dynamicAnim.speed;var E=e.globals.previousPaths[c]&&e.globals.previousPaths[c][d]&&e.globals.previousPaths[c][d].color;E||(E="rgba(255, 255, 255, 0)"),this.animateHeatColor(S,g.isColorHex(E)?E:g.rgb2hex(E),g.isColorHex(y)?y:g.rgb2hex(y),A)}}var P=this.calculateHeatmapDataLabels({x:f,y:o,i:c,j:d,heatColorProps:b,series:l,rectHeight:a,rectWidth:r});null!==P&&u.add(P),f+=r}o+=a,i.add(u)}var T=e.globals.yAxisScale[0].result.slice();e.config.yaxis[0].reversed?T.unshift(""):T.push(""),e.globals.yAxisScale[0].result=T;var O=e.globals.gridHeight/e.globals.series.length;return e.config.yaxis[0].labels.offsetY=-O/2,i}},{key:"checkColorRange",value:function(){var t=this,e=this.w.config.plotOptions.heatmap;e.colorScale.ranges.length>0&&e.colorScale.ranges.map((function(e,n){e.from<0&&(t.negRange=!0)}))}},{key:"determineHeatColor",value:function(t,e){var n=this.w,i=n.globals.series[t][e],r=n.config.plotOptions.heatmap,a=r.colorScale.inverse?e:t,o=n.globals.colors[a],s=null,l=Math.min.apply(Math,p(n.globals.series[t])),c=Math.max.apply(Math,p(n.globals.series[t]));r.distributed||(l=n.globals.minY,c=n.globals.maxY),void 0!==r.colorScale.min&&(l=r.colorScale.min<n.globals.minY?r.colorScale.min:n.globals.minY,c=r.colorScale.max>n.globals.maxY?r.colorScale.max:n.globals.maxY);var u=Math.abs(c)+Math.abs(l),h=100*i/(0===u?u-1e-6:u);return r.colorScale.ranges.length>0&&r.colorScale.ranges.map((function(t,e){if(i>=t.from&&i<=t.to){o=t.color,s=t.foreColor?t.foreColor:null,l=t.from,c=t.to;var n=Math.abs(c)+Math.abs(l);h=100*i/(0===n?n-1e-6:n)}})),{color:o,foreColor:s,percent:h}}},{key:"calculateHeatmapDataLabels",value:function(t){var e=t.x,n=t.y,i=t.i,r=t.j,a=t.heatColorProps,o=(t.series,t.rectHeight),s=t.rectWidth,l=this.w,c=l.config.dataLabels,u=new x(this.ctx),h=new z(this.ctx),f=c.formatter,d=null;if(c.enabled){d=u.group({class:"apexcharts-data-labels"});var p=c.offsetX,g=c.offsetY,m=e+s/2+p,v=n+o/2+parseFloat(c.style.fontSize)/3+g,b=f(l.globals.series[i][r],{seriesIndex:i,dataPointIndex:r,w:l});h.plotDataLabelsText({x:m,y:v,text:b,i,j:r,color:a.foreColor,parent:d,dataLabelsConfig:c})}return d}},{key:"animateHeatMap",value:function(t,e,n,i,r,a){var o=new v(this.ctx);o.animateRect(t,{x:e+i/2,y:n+r/2,width:0,height:0},{x:e,y:n,width:i,height:r},a,(function(){o.animationCompleted(t)}))}},{key:"animateHeatColor",value:function(t,e,n,i){t.attr({fill:e}).animate(i).attr({fill:n})}}]),t}(),St=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.chartType=this.w.config.chart.type,this.initialAnim=this.w.config.chart.animations.enabled,this.dynamicAnim=this.initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled,this.animDur=0;var n=this.w;this.graphics=new x(this.ctx),this.lineColorArr=void 0!==n.globals.stroke.colors?n.globals.stroke.colors:n.globals.colors,this.defaultSize=n.globals.svgHeight<n.globals.svgWidth?n.globals.gridHeight+1.5*n.globals.goldenPadding:n.globals.gridWidth,this.maxValue=this.w.globals.maxY,this.minValue=this.w.globals.minY,this.polygons=n.config.plotOptions.radar.polygons;var i=n.globals.labels.slice().sort((function(t,e){return e.length-t.length}))[0],r=this.graphics.getTextRects(i,n.config.xaxis.labels.style.fontSize);this.strokeWidth=n.config.stroke.show?n.config.stroke.width:0,this.size=this.defaultSize/2.1-this.strokeWidth-n.config.chart.dropShadow.blur,n.config.xaxis.labels.show&&(this.size=this.size-r.width/1.75),void 0!==n.config.plotOptions.radar.size&&(this.size=n.config.plotOptions.radar.size),this.dataRadiusOfPercent=[],this.dataRadius=[],this.angleArr=[],this.yaxisLabelsTextsPos=[]}return s(t,[{key:"draw",value:function(t){var e=this,n=this.w,i=new I(this.ctx),r=[],a=new z(this.ctx);t.length&&(this.dataPointsLen=t[n.globals.maxValsInArrayIndex].length),this.disAngle=2*Math.PI/this.dataPointsLen;var o=n.globals.gridWidth/2,s=n.globals.gridHeight/2,l=o+n.config.plotOptions.radar.offsetX,c=s+n.config.plotOptions.radar.offsetY,h=this.graphics.group({class:"apexcharts-radar-series apexcharts-plot-series",transform:"translate(".concat(l||0,", ").concat(c||0,")")}),f=[],d=null,p=null;if(this.yaxisLabels=this.graphics.group({class:"apexcharts-yaxis"}),t.forEach((function(t,o){var s=t.length===n.globals.dataPoints,l=e.graphics.group().attr({class:"apexcharts-series","data:longestSeries":s,seriesName:g.escapeString(n.globals.seriesNames[o]),rel:o+1,"data:realIndex":o});e.dataRadiusOfPercent[o]=[],e.dataRadius[o]=[],e.angleArr[o]=[],t.forEach((function(t,n){var i=Math.abs(e.maxValue-e.minValue);t+=Math.abs(e.minValue),e.dataRadiusOfPercent[o][n]=t/i,e.dataRadius[o][n]=e.dataRadiusOfPercent[o][n]*e.size,e.angleArr[o][n]=n*e.disAngle})),f=e.getDataPointsPos(e.dataRadius[o],e.angleArr[o]);var c=e.createPaths(f,{x:0,y:0});d=e.graphics.group({class:"apexcharts-series-markers-wrap apexcharts-element-hidden"}),p=e.graphics.group({class:"apexcharts-datalabels","data:realIndex":o}),n.globals.delayedElements.push({el:d.node,index:o});var h={i:o,realIndex:o,animationDelay:o,initialSpeed:n.config.chart.animations.speed,dataChangeSpeed:n.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-radar",shouldClipToGrid:!1,bindEventsOnPaths:!1,stroke:n.globals.stroke.colors[o],strokeLineCap:n.config.stroke.lineCap},v=null;n.globals.previousPaths.length>0&&(v=e.getPreviousPath(o));for(var x=0;x<c.linePathsTo.length;x++){var b=e.graphics.renderPaths(u({},h,{pathFrom:null===v?c.linePathsFrom[x]:v,pathTo:c.linePathsTo[x],strokeWidth:Array.isArray(e.strokeWidth)?e.strokeWidth[o]:e.strokeWidth,fill:"none",drawShadow:!1}));l.add(b);var y=i.fillPath({seriesNumber:o}),w=e.graphics.renderPaths(u({},h,{pathFrom:null===v?c.areaPathsFrom[x]:v,pathTo:c.areaPathsTo[x],strokeWidth:0,fill:y,drawShadow:!1}));if(n.config.chart.dropShadow.enabled){var k=new m(e.ctx),S=n.config.chart.dropShadow;k.dropShadow(w,Object.assign({},S,{noUserSpaceOnUse:!0}),o)}l.add(w)}t.forEach((function(t,i){var r=new N(e.ctx).getMarkerConfig("apexcharts-marker",o,i),s=e.graphics.drawMarker(f[i].x,f[i].y,r);s.attr("rel",i),s.attr("j",i),s.attr("index",o),s.node.setAttribute("default-marker-size",r.pSize);var c=e.graphics.group({class:"apexcharts-series-markers"});if(c&&c.add(s),d.add(c),l.add(d),n.config.dataLabels.enabled){var h=n.config.dataLabels;a.plotDataLabelsText({x:f[i].x,y:f[i].y,text:n.globals.series[o][i],textAnchor:"middle",i:o,j:o,parent:p,offsetCorrection:!1,dataLabelsConfig:u({},h)})}l.add(p)})),r.push(l)})),this.drawPolygons({parent:h}),n.config.xaxis.labels.show){var v=this.drawXAxisTexts();h.add(v)}return h.add(this.yaxisLabels),r.forEach((function(t){h.add(t)})),h}},{key:"drawPolygons",value:function(t){for(var e=this,n=this.w,i=t.parent,r=n.globals.yAxisScale[0].result.reverse(),a=r.length,o=[],s=this.size/(a-1),l=0;l<a;l++)o[l]=s*l;o.reverse();var c=[],u=[];o.forEach((function(t,n){var i=e.getPolygonPos(t),r="";i.forEach((function(t,i){if(0===n){var a=e.graphics.drawLine(t.x,t.y,0,0,Array.isArray(e.polygons.connectorColors)?e.polygons.connectorColors[i]:e.polygons.connectorColors);u.push(a)}0===i&&e.yaxisLabelsTextsPos.push({x:t.x,y:t.y}),r+=t.x+","+t.y+" "})),c.push(r)})),c.forEach((function(t,r){var a=e.polygons.strokeColors,o=e.graphics.drawPolygon(t,Array.isArray(a)?a[r]:a,n.globals.radarPolygons.fill.colors[r]);i.add(o)})),u.forEach((function(t){i.add(t)})),n.config.yaxis[0].show&&this.yaxisLabelsTextsPos.forEach((function(t,n){var i=e.drawYAxisTexts(t.x,t.y,n,r[n]);e.yaxisLabels.add(i)}))}},{key:"drawYAxisTexts",value:function(t,e,n,i){var r=this.w,a=r.config.yaxis[0],o=r.globals.yLabelFormatters[0];return this.graphics.drawText({x:t+a.labels.offsetX,y:e+a.labels.offsetY,text:o(i,n),textAnchor:"middle",fontSize:a.labels.style.fontSize,fontFamily:a.labels.style.fontFamily,foreColor:a.labels.style.color})}},{key:"drawXAxisTexts",value:function(){var t=this,e=this.w,n=e.config.xaxis.labels,i=this.graphics.group({class:"apexcharts-xaxis"}),r=this.getPolygonPos(this.size);return e.globals.labels.forEach((function(a,o){var s=e.config.xaxis.labels.formatter,l=new z(t.ctx);if(r[o]){var c=t.getTextPos(r[o],t.size),h=s(a,{seriesIndex:-1,dataPointIndex:o,w:e});l.plotDataLabelsText({x:c.newX,y:c.newY,text:h,textAnchor:c.textAnchor,i:o,j:o,parent:i,color:n.style.colors[o]?n.style.colors[o]:"#a8a8a8",dataLabelsConfig:u({textAnchor:c.textAnchor,dropShadow:{enabled:!1}},n),offsetCorrection:!1})}})),i}},{key:"createPaths",value:function(t,e){var n=this,i=[],r=[],a=[],o=[];if(t.length){r=[this.graphics.move(e.x,e.y)],o=[this.graphics.move(e.x,e.y)];var s=this.graphics.move(t[0].x,t[0].y),l=this.graphics.move(t[0].x,t[0].y);t.forEach((function(e,i){s+=n.graphics.line(e.x,e.y),l+=n.graphics.line(e.x,e.y),i===t.length-1&&(s+="Z",l+="Z")})),i.push(s),a.push(l)}return{linePathsFrom:r,linePathsTo:i,areaPathsFrom:o,areaPathsTo:a}}},{key:"getTextPos",value:function(t,e){var n="middle",i=t.x,r=t.y;return Math.abs(t.x)>=10?t.x>0?(n="start",i+=10):t.x<0&&(n="end",i-=10):n="middle",Math.abs(t.y)>=e-10&&(t.y<0?r-=10:t.y>0&&(r+=10)),{textAnchor:n,newX:i,newY:r}}},{key:"getPreviousPath",value:function(t){for(var e=this.w,n=null,i=0;i<e.globals.previousPaths.length;i++){var r=e.globals.previousPaths[i];r.paths.length>0&&parseInt(r.realIndex,10)===parseInt(t,10)&&void 0!==e.globals.previousPaths[i].paths[0]&&(n=e.globals.previousPaths[i].paths[0].d)}return n}},{key:"getDataPointsPos",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.dataPointsLen;t=t||[],e=e||[];for(var i=[],r=0;r<n;r++){var a={};a.x=t[r]*Math.sin(e[r]),a.y=-t[r]*Math.cos(e[r]),i.push(a)}return i}},{key:"getPolygonPos",value:function(t){for(var e=[],n=2*Math.PI/this.dataPointsLen,i=0;i<this.dataPointsLen;i++){var r={};r.x=t*Math.sin(i*n),r.y=-t*Math.cos(i*n),e.push(r)}return e}}]),t}(),Ct=function(t){function e(t){var n;a(this,e),(n=d(this,f(e).call(this,t))).ctx=t,n.w=t.w,n.animBeginArr=[0],n.animDur=0;var i=n.w;return n.startAngle=i.config.plotOptions.radialBar.startAngle,n.endAngle=i.config.plotOptions.radialBar.endAngle,n.totalAngle=Math.abs(i.config.plotOptions.radialBar.endAngle-i.config.plotOptions.radialBar.startAngle),n.trackStartAngle=i.config.plotOptions.radialBar.track.startAngle,n.trackEndAngle=i.config.plotOptions.radialBar.track.endAngle,n.radialDataLabels=i.config.plotOptions.radialBar.dataLabels,n.trackStartAngle||(n.trackStartAngle=n.startAngle),n.trackEndAngle||(n.trackEndAngle=n.endAngle),360===n.endAngle&&(n.endAngle=359.99),n.fullAngle=360-i.config.plotOptions.radialBar.endAngle-i.config.plotOptions.radialBar.startAngle,n.margin=parseInt(i.config.plotOptions.radialBar.track.margin,10),n}return h(e,at),s(e,[{key:"draw",value:function(t){var e=this.w,n=new x(this.ctx),i=n.group({class:"apexcharts-radialbar"});if(e.globals.noData)return i;var r=n.group(),a=this.defaultSize/2,o=e.globals.gridWidth/2,s=this.defaultSize/2.05;e.config.chart.sparkline.enabled||(s=s-e.config.stroke.width-e.config.chart.dropShadow.blur);var l=e.globals.fill.colors;if(e.config.plotOptions.radialBar.track.show){var c=this.drawTracks({size:s,centerX:o,centerY:a,colorArr:l,series:t});r.add(c)}var u=this.drawArcs({size:s,centerX:o,centerY:a,colorArr:l,series:t}),h=360;e.config.plotOptions.radialBar.startAngle<0&&(h=this.totalAngle);var f=(360-h)/360;if(e.globals.radialSize=s-s*f,this.radialDataLabels.value.show){var d=Math.max(this.radialDataLabels.value.offsetY,this.radialDataLabels.name.offsetY);e.globals.radialSize+=d*f}return r.add(u.g),"front"===e.config.plotOptions.radialBar.hollow.position&&(u.g.add(u.elHollow),u.dataLabels&&u.g.add(u.dataLabels)),i.add(r),i}},{key:"drawTracks",value:function(t){var e=this.w,n=new x(this.ctx),i=n.group({class:"apexcharts-tracks"}),r=new m(this.ctx),a=new I(this.ctx),o=this.getStrokeWidth(t);t.size=t.size-o/2;for(var s=0;s<t.series.length;s++){var l=n.group({class:"apexcharts-radialbar-track apexcharts-track"});i.add(l),l.attr({rel:s+1}),t.size=t.size-o-this.margin;var c=e.config.plotOptions.radialBar.track,u=a.fillPath({seriesNumber:0,size:t.size,fillColors:Array.isArray(c.background)?c.background[s]:c.background,solid:!0}),h=this.trackStartAngle,f=this.trackEndAngle;Math.abs(f)+Math.abs(h)>=360&&(f=360-Math.abs(this.startAngle)-.1);var d=n.drawPath({d:"",stroke:u,strokeWidth:o*parseInt(c.strokeWidth,10)/100,fill:"none",strokeOpacity:c.opacity,classes:"apexcharts-radialbar-area"});if(c.dropShadow.enabled){var p=c.dropShadow;r.dropShadow(d,p)}l.add(d),d.attr("id","apexcharts-radialbarTrack-"+s),this.animatePaths(d,{centerX:t.centerX,centerY:t.centerY,endAngle:f,startAngle:h,size:t.size,i:s,totalItems:2,animBeginArr:0,dur:0,isTrack:!0,easing:e.globals.easing})}return i}},{key:"drawArcs",value:function(t){var e=this.w,n=new x(this.ctx),i=new I(this.ctx),r=new m(this.ctx),a=n.group(),o=this.getStrokeWidth(t);t.size=t.size-o/2;var s=e.config.plotOptions.radialBar.hollow.background,l=t.size-o*t.series.length-this.margin*t.series.length-o*parseInt(e.config.plotOptions.radialBar.track.strokeWidth,10)/100/2,c=l-e.config.plotOptions.radialBar.hollow.margin;void 0!==e.config.plotOptions.radialBar.hollow.image&&(s=this.drawHollowImage(t,a,l,s));var u=this.drawHollow({size:c,centerX:t.centerX,centerY:t.centerY,fill:s||"transparent"});if(e.config.plotOptions.radialBar.hollow.dropShadow.enabled){var h=e.config.plotOptions.radialBar.hollow.dropShadow;r.dropShadow(u,h)}var f=1;!this.radialDataLabels.total.show&&e.globals.series.length>1&&(f=0);var d=null;this.radialDataLabels.show&&(d=this.renderInnerDataLabels(this.radialDataLabels,{hollowSize:l,centerX:t.centerX,centerY:t.centerY,opacity:f})),"back"===e.config.plotOptions.radialBar.hollow.position&&(a.add(u),d&&a.add(d));var p=!1;e.config.plotOptions.radialBar.inverseOrder&&(p=!0);for(var v=p?t.series.length-1:0;p?v>=0:v<t.series.length;p?v--:v++){var b=n.group({class:"apexcharts-series apexcharts-radial-series",seriesName:g.escapeString(e.globals.seriesNames[v])});a.add(b),b.attr({rel:v+1,"data:realIndex":v}),this.ctx.series.addCollapsedClassToSeries(b,v),t.size=t.size-o-this.margin;var y=i.fillPath({seriesNumber:v,size:t.size,value:t.series[v]}),w=this.startAngle,k=void 0,S=g.negToZero(t.series[v]>100?100:t.series[v])/100,C=Math.round(this.totalAngle*S)+this.startAngle,A=void 0;e.globals.dataChanged&&(k=this.startAngle,A=Math.round(this.totalAngle*g.negToZero(e.globals.previousPaths[v])/100)+k),Math.abs(C)+Math.abs(w)>=360&&(C-=.01),Math.abs(A)+Math.abs(k)>=360&&(A-=.01);var E=C-w,P=Array.isArray(e.config.stroke.dashArray)?e.config.stroke.dashArray[v]:e.config.stroke.dashArray,T=n.drawPath({d:"",stroke:y,strokeWidth:o,fill:"none",fillOpacity:e.config.fill.opacity,classes:"apexcharts-radialbar-area apexcharts-radialbar-slice-"+v,strokeDashArray:P});if(x.setAttrs(T.node,{"data:angle":E,"data:value":t.series[v]}),e.config.chart.dropShadow.enabled){var O=e.config.chart.dropShadow;r.dropShadow(T,O,v)}this.addListeners(T,this.radialDataLabels),b.add(T),T.attr({index:0,j:v});var L=0;!this.initialAnim||e.globals.resized||e.globals.dataChanged||(L=(C-w)/360*e.config.chart.animations.speed,this.animDur=L/(1.2*t.series.length)+this.animDur,this.animBeginArr.push(this.animDur)),e.globals.dataChanged&&(L=(C-w)/360*e.config.chart.animations.dynamicAnimation.speed,this.animDur=L/(1.2*t.series.length)+this.animDur,this.animBeginArr.push(this.animDur)),this.animatePaths(T,{centerX:t.centerX,centerY:t.centerY,endAngle:C,startAngle:w,prevEndAngle:A,prevStartAngle:k,size:t.size,i:v,totalItems:2,animBeginArr:this.animBeginArr,dur:L,shouldSetPrevPaths:!0,easing:e.globals.easing})}return{g:a,elHollow:u,dataLabels:d}}},{key:"drawHollow",value:function(t){var e=new x(this.ctx).drawCircle(2*t.size);return e.attr({class:"apexcharts-radialbar-hollow",cx:t.centerX,cy:t.centerY,r:t.size,fill:t.fill}),e}},{key:"drawHollowImage",value:function(t,e,n,i){var r=this.w,a=new I(this.ctx),o=g.randomId(),s=r.config.plotOptions.radialBar.hollow.image;if(r.config.plotOptions.radialBar.hollow.imageClipped)a.clippedImgArea({width:n,height:n,image:s,patternID:"pattern".concat(r.globals.cuid).concat(o)}),i="url(#pattern".concat(r.globals.cuid).concat(o,")");else{var l=r.config.plotOptions.radialBar.hollow.imageWidth,c=r.config.plotOptions.radialBar.hollow.imageHeight;if(void 0===l&&void 0===c){var u=r.globals.dom.Paper.image(s).loaded((function(e){this.move(t.centerX-e.width/2+r.config.plotOptions.radialBar.hollow.imageOffsetX,t.centerY-e.height/2+r.config.plotOptions.radialBar.hollow.imageOffsetY)}));e.add(u)}else{var h=r.globals.dom.Paper.image(s).loaded((function(e){this.move(t.centerX-l/2+r.config.plotOptions.radialBar.hollow.imageOffsetX,t.centerY-c/2+r.config.plotOptions.radialBar.hollow.imageOffsetY),this.size(l,c)}));e.add(h)}}return i}},{key:"getStrokeWidth",value:function(t){var e=this.w;return t.size*(100-parseInt(e.config.plotOptions.radialBar.hollow.size,10))/100/(t.series.length+1)-this.margin}}]),e}(),At=function(t){function e(){return a(this,e),d(this,f(e).apply(this,arguments))}return h(e,bt),s(e,[{key:"draw",value:function(t,e){var n=this.w,i=new x(this.ctx);this.rangeBarOptions=this.w.config.plotOptions.rangeBar,this.series=t,this.seriesRangeStart=n.globals.seriesRangeStart,this.seriesRangeEnd=n.globals.seriesRangeEnd,this.barHelpers.initVariables(t);for(var r=i.group({class:"apexcharts-rangebar-series apexcharts-plot-series"}),a=0;a<t.length;a++){var o,s,l,c=void 0,h=void 0,f=void 0,d=n.globals.comboCharts?e[a]:a,p=i.group({class:"apexcharts-series",seriesName:g.escapeString(n.globals.seriesNames[d]),rel:a+1,"data:realIndex":d});t[a].length>0&&(this.visibleI=this.visibleI+1);var m=0,v=0;this.yRatio.length>1&&(this.yaxisIndex=d);var b=this.barHelpers.initialPositions();h=b.y,l=b.zeroW,c=b.x,v=b.barWidth,o=b.xDivision,s=b.zeroH;for(var y=i.group({class:"apexcharts-datalabels","data:realIndex":d}),w=0;w<n.globals.dataPoints;w++){var k=this.barHelpers.getStrokeWidth(a,w,d),S=this.seriesRangeStart[a][w],C=this.seriesRangeEnd[a][w],A=null,E=null,P={x:c,y:h,strokeWidth:k,elSeries:p};if(f=b.yDivision,m=b.barHeight,this.isHorizontal){E=h+m*this.visibleI;var T=(f-m*this.seriesLen)/2;if(void 0===n.config.series[a].data[w])break;if(this.isTimelineBar&&n.config.series[a].data[w].x){var O=this.detectOverlappingBars({i:a,j:w,barYPosition:E,srty:T,barHeight:m,yDivision:f,initPositions:b});m=O.barHeight,E=O.barYPosition}v=(A=this.drawRangeBarPaths(u({indexes:{i:a,j:w,realIndex:d},barHeight:m,barYPosition:E,zeroW:l,yDivision:f,y1:S,y2:C},P))).barWidth}else m=(A=this.drawRangeColumnPaths(u({indexes:{i:a,j:w,realIndex:d},zeroH:s,barWidth:v,xDivision:o},P))).barHeight;h=A.y,c=A.x;var L=this.barHelpers.getPathFillColor(t,a,w,d),M=n.globals.stroke.colors[d];this.renderSeries({realIndex:d,pathFill:L,lineFill:M,j:w,i:a,x:c,y:h,y1:S,y2:C,pathFrom:A.pathFrom,pathTo:A.pathTo,strokeWidth:k,elSeries:p,series:t,barHeight:m,barYPosition:E,barWidth:v,elDataLabelsWrap:y,visibleSeries:this.visibleI,type:"rangebar"})}r.add(p)}return r}},{key:"detectOverlappingBars",value:function(t){var e=t.i,n=t.j,i=t.barYPosition,r=t.srty,a=t.barHeight,o=t.yDivision,s=t.initPositions,l=this.w,c=[],u=l.config.series[e].data[n].rangeName,h=l.config.series[e].data[n].x,f=l.globals.labels.indexOf(h),d=l.globals.seriesRangeBarTimeline[e].findIndex((function(t){return t.x===h&&t.overlaps.length>0}));return i=r+a*this.visibleI+o*f,d>-1&&(c=l.globals.seriesRangeBarTimeline[e][d].overlaps).indexOf(u)>-1&&(i=(a=s.barHeight/c.length)*this.visibleI+o*(100-parseInt(this.barOptions.barHeight,10))/100/2+a*(this.visibleI+c.indexOf(u))+o*f),{barYPosition:i,barHeight:a}}},{key:"drawRangeColumnPaths",value:function(t){var e=t.indexes,n=t.x,i=t.strokeWidth,r=t.xDivision,a=t.barWidth,o=t.zeroH,s=this.w,l=new x(this.ctx),c=e.i,u=e.j,h=this.yRatio[this.yaxisIndex],f=e.realIndex,d=this.getRangeValue(f,u),p=Math.min(d.start,d.end),g=Math.max(d.start,d.end);s.globals.isXNumeric&&(n=(s.globals.seriesX[c][u]-s.globals.minX)/this.xRatio-a/2);var m=n+a*this.visibleI;void 0===this.series[c][u]||null===this.series[c][u]?p=o:(p=o-p/h,g=o-g/h);var v=Math.abs(g-p),b=l.move(m,o),y=l.move(m,p);return s.globals.previousPaths.length>0&&(y=this.getPreviousPath(f,u,!0)),b=l.move(m,g)+l.line(m+a,g)+l.line(m+a,p)+l.line(m,p)+l.line(m,g-i/2),y=y+l.move(m,p)+l.line(m+a,p)+l.line(m+a,p)+l.line(m,p),s.globals.isXNumeric||(n+=r),{pathTo:b,pathFrom:y,barHeight:v,x:n,y:g,barXPosition:m}}},{key:"drawRangeBarPaths",value:function(t){var e=t.indexes,n=t.y,i=t.y1,r=t.y2,a=t.yDivision,o=t.barHeight,s=t.barYPosition,l=t.zeroW,c=this.w,u=new x(this.ctx),h=l+i/this.invertedYRatio,f=l+r/this.invertedYRatio,d=u.move(l,s),p=u.move(h,s);c.globals.previousPaths.length>0&&(p=this.getPreviousPath(e.realIndex,e.j));var g=Math.abs(f-h);return d=u.move(h,s)+u.line(f,s)+u.line(f,s+o)+u.line(h,s+o)+u.line(h,s),p=p+u.line(h,s)+u.line(h,s+o)+u.line(h,s+o)+u.line(h,s),c.globals.isXNumeric||(n+=a),{pathTo:d,pathFrom:p,barWidth:g,x:f,y:n}}},{key:"getRangeValue",value:function(t,e){var n=this.w;return{start:n.globals.seriesRangeStart[t][e],end:n.globals.seriesRangeEnd[t][e]}}}]),e}(),Et=function(){function t(e){a(this,t),this.w=e.w,this.lineCtx=e}return s(t,[{key:"sameValueSeriesFix",value:function(t,e){var n=this.w;if("line"===n.config.chart.type&&("gradient"===n.config.fill.type||"gradient"===n.config.fill.type[t])&&new _(this.lineCtx.ctx,n).seriesHaveSameValues(t)){var i=e[t].slice();i[i.length-1]=i[i.length-1]+1e-6,e[t]=i}return e}},{key:"calculatePoints",value:function(t){var e=t.series,n=t.realIndex,i=t.x,r=t.y,a=t.i,o=t.j,s=t.prevY,l=this.w,c=[],u=[];if(0===o){var h=this.lineCtx.categoryAxisCorrection+l.config.markers.offsetX;l.globals.isXNumeric&&(h=(l.globals.seriesX[n][0]-l.globals.minX)/this.lineCtx.xRatio+l.config.markers.offsetX),c.push(h),u.push(g.isNumber(e[a][0])?s+l.config.markers.offsetY:null),c.push(i+l.config.markers.offsetX),u.push(g.isNumber(e[a][o+1])?r+l.config.markers.offsetY:null)}else c.push(i+l.config.markers.offsetX),u.push(g.isNumber(e[a][o+1])?r+l.config.markers.offsetY:null);return{x:c,y:u}}},{key:"checkPreviousPaths",value:function(t){for(var e=t.pathFromLine,n=t.pathFromArea,i=t.realIndex,r=this.w,a=0;a<r.globals.previousPaths.length;a++){var o=r.globals.previousPaths[a];("line"===o.type||"area"===o.type)&&o.paths.length>0&&parseInt(o.realIndex,10)===parseInt(i,10)&&("line"===o.type?(this.lineCtx.appendPathFrom=!1,e=r.globals.previousPaths[a].paths[0].d):"area"===o.type&&(this.lineCtx.appendPathFrom=!1,n=r.globals.previousPaths[a].paths[0].d,r.config.stroke.show&&r.globals.previousPaths[a].paths[1]&&(e=r.globals.previousPaths[a].paths[1].d)))}return{pathFromLine:e,pathFromArea:n}}},{key:"determineFirstPrevY",value:function(t){var e=t.i,n=t.series,i=t.prevY,r=t.lineYPosition,a=this.w;if(void 0!==n[e][0])i=(r=a.config.chart.stacked&&e>0?this.lineCtx.prevSeriesY[e-1][0]:this.lineCtx.zeroY)-n[e][0]/this.lineCtx.yRatio[this.lineCtx.yaxisIndex]+2*(this.lineCtx.isReversed?n[e][0]/this.lineCtx.yRatio[this.lineCtx.yaxisIndex]:0);else if(a.config.chart.stacked&&e>0&&void 0===n[e][0])for(var o=e-1;o>=0;o--)if(null!==n[o][0]&&void 0!==n[o][0]){i=r=this.lineCtx.prevSeriesY[o][0];break}return{prevY:i,lineYPosition:r}}}]),t}(),Pt=function(){function t(e,n,i){a(this,t),this.ctx=e,this.w=e.w,this.xyRatios=n,this.pointsChart=!("bubble"!==this.w.config.chart.type&&"scatter"!==this.w.config.chart.type)||i,this.scatter=new R(this.ctx),this.noNegatives=this.w.globals.minX===Number.MAX_VALUE,this.lineHelpers=new Et(this),this.markers=new N(this.ctx),this.prevSeriesY=[],this.categoryAxisCorrection=0,this.yaxisIndex=0}return s(t,[{key:"draw",value:function(t,e,n){var i=this.w,r=new x(this.ctx),a=i.globals.comboCharts?e:i.config.chart.type,o=r.group({class:"apexcharts-".concat(a,"-series apexcharts-plot-series")}),s=new _(this.ctx,i);this.yRatio=this.xyRatios.yRatio,this.zRatio=this.xyRatios.zRatio,this.xRatio=this.xyRatios.xRatio,this.baseLineY=this.xyRatios.baseLineY,t=s.getLogSeries(t),this.yRatio=s.getLogYRatios(this.yRatio);for(var l=[],c=0;c<t.length;c++){t=this.lineHelpers.sameValueSeriesFix(c,t);var u=i.globals.comboCharts?n[c]:c;this._initSerieVariables(t,c,u);var h=[],f=[],d=i.globals.padHorizontal+this.categoryAxisCorrection;this.ctx.series.addCollapsedClassToSeries(this.elSeries,u),i.globals.isXNumeric&&i.globals.seriesX.length>0&&(d=(i.globals.seriesX[u][0]-i.globals.minX)/this.xRatio),f.push(d);var p,g=d,m=g,v=this.zeroY;v=this.lineHelpers.determineFirstPrevY({i:c,series:t,prevY:v,lineYPosition:0}).prevY,h.push(v),p=v;var b=this._calculatePathsFrom({series:t,i:c,realIndex:u,prevX:m,prevY:v}),y=this._iterateOverDataPoints({series:t,realIndex:u,i:c,x:d,y:1,pX:g,pY:p,pathsFrom:b,linePaths:[],areaPaths:[],seriesIndex:n,lineYPosition:0,xArrj:f,yArrj:h});this._handlePaths({type:a,realIndex:u,i:c,paths:y}),this.elSeries.add(this.elPointsMain),this.elSeries.add(this.elDataLabelsWrap),l.push(this.elSeries)}for(var w=l.length;w>0;w--)o.add(l[w-1]);return o}},{key:"_initSerieVariables",value:function(t,e,n){var i=this.w,r=new x(this.ctx);this.xDivision=i.globals.gridWidth/(i.globals.dataPoints-("on"===i.config.xaxis.tickPlacement?1:0)),this.strokeWidth=Array.isArray(i.config.stroke.width)?i.config.stroke.width[n]:i.config.stroke.width,this.yRatio.length>1&&(this.yaxisIndex=n),this.isReversed=i.config.yaxis[this.yaxisIndex]&&i.config.yaxis[this.yaxisIndex].reversed,this.zeroY=i.globals.gridHeight-this.baseLineY[this.yaxisIndex]-(this.isReversed?i.globals.gridHeight:0)+(this.isReversed?2*this.baseLineY[this.yaxisIndex]:0),this.areaBottomY=this.zeroY,this.zeroY>i.globals.gridHeight&&(this.areaBottomY=i.globals.gridHeight),this.categoryAxisCorrection=this.xDivision/2,this.elSeries=r.group({class:"apexcharts-series",seriesName:g.escapeString(i.globals.seriesNames[n])}),this.elPointsMain=r.group({class:"apexcharts-series-markers-wrap"}),this.elDataLabelsWrap=r.group({class:"apexcharts-datalabels","data:realIndex":n});var a=t[e].length===i.globals.dataPoints;this.elSeries.attr({"data:longestSeries":a,rel:e+1,"data:realIndex":n}),this.appendPathFrom=!0}},{key:"_calculatePathsFrom",value:function(t){var e,n,i,r,a=t.series,o=t.i,s=t.realIndex,l=t.prevX,c=t.prevY,u=this.w,h=new x(this.ctx);if(null===a[o][0]){for(var f=0;f<a[o].length;f++)if(null!==a[o][f]){l=this.xDivision*f,c=this.zeroY-a[o][f]/this.yRatio[this.yaxisIndex],e=h.move(l,c),n=h.move(l,this.areaBottomY);break}}else e=h.move(l,c),n=h.move(l,this.areaBottomY)+h.line(l,c);if(i=h.move(-1,this.zeroY)+h.line(-1,this.zeroY),r=h.move(-1,this.zeroY)+h.line(-1,this.zeroY),u.globals.previousPaths.length>0){var d=this.lineHelpers.checkPreviousPaths({pathFromLine:i,pathFromArea:r,realIndex:s});i=d.pathFromLine,r=d.pathFromArea}return{prevX:l,prevY:c,linePath:e,areaPath:n,pathFromLine:i,pathFromArea:r}}},{key:"_handlePaths",value:function(t){var e=t.type,n=t.realIndex,i=t.i,r=t.paths,a=this.w,o=new x(this.ctx),s=new I(this.ctx);this.prevSeriesY.push(r.yArrj),a.globals.seriesXvalues[n]=r.xArrj,a.globals.seriesYvalues[n]=r.yArrj,this.pointsChart||a.globals.delayedElements.push({el:this.elPointsMain.node,index:n});var l={i,realIndex:n,animationDelay:i,initialSpeed:a.config.chart.animations.speed,dataChangeSpeed:a.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-".concat(e)};if("area"===e)for(var c=s.fillPath({seriesNumber:n}),h=0;h<r.areaPaths.length;h++){var f=o.renderPaths(u({},l,{pathFrom:r.pathFromArea,pathTo:r.areaPaths[h],stroke:"none",strokeWidth:0,strokeLineCap:null,fill:c}));this.elSeries.add(f)}if(a.config.stroke.show&&!this.pointsChart){var d;d="line"===e?s.fillPath({seriesNumber:n,i}):a.globals.stroke.colors[n];for(var p=0;p<r.linePaths.length;p++){var g=o.renderPaths(u({},l,{pathFrom:r.pathFromLine,pathTo:r.linePaths[p],stroke:d,strokeWidth:this.strokeWidth,strokeLineCap:a.config.stroke.lineCap,fill:"none"}));this.elSeries.add(g)}}}},{key:"_iterateOverDataPoints",value:function(t){for(var e=t.series,n=t.realIndex,i=t.i,r=t.x,a=t.y,o=t.pX,s=t.pY,l=t.pathsFrom,c=t.linePaths,u=t.areaPaths,h=t.seriesIndex,f=t.lineYPosition,d=t.xArrj,p=t.yArrj,m=this.w,v=new x(this.ctx),b=this.yRatio,y=l.prevY,w=l.linePath,k=l.areaPath,S=l.pathFromLine,C=l.pathFromArea,A=g.isNumber(m.globals.minYArr[n])?m.globals.minYArr[n]:m.globals.minY,E=m.globals.dataPoints>1?m.globals.dataPoints-1:m.globals.dataPoints,P=0;P<E;P++){var T=void 0===e[i][P+1]||null===e[i][P+1];if(m.globals.isXNumeric){var O=m.globals.seriesX[n][P+1];void 0===m.globals.seriesX[n][P+1]&&(O=m.globals.seriesX[n][E-1]),r=(O-m.globals.minX)/this.xRatio}else r+=this.xDivision;f=m.config.chart.stacked&&i>0&&m.globals.collapsedSeries.length<m.config.series.length-1?this.prevSeriesY[i-1][P+1]:this.zeroY,a=T?f-A/b[this.yaxisIndex]+2*(this.isReversed?A/b[this.yaxisIndex]:0):f-e[i][P+1]/b[this.yaxisIndex]+2*(this.isReversed?e[i][P+1]/b[this.yaxisIndex]:0),d.push(r),p.push(a);var L=this.lineHelpers.calculatePoints({series:e,x:r,y:a,realIndex:n,i,j:P,prevY:y}),M=this._createPaths({series:e,i,realIndex:n,j:P,x:r,y:a,pX:o,pY:s,linePath:w,areaPath:k,linePaths:c,areaPaths:u,seriesIndex:h});u=M.areaPaths,c=M.linePaths,o=M.pX,s=M.pY,k=M.areaPath,w=M.linePath,this.appendPathFrom&&(S+=v.line(r,this.zeroY),C+=v.line(r,this.zeroY)),this.handleNullDataPoints(e,L,i,P,n),this._handleMarkersAndLabels({pointsPos:L,series:e,x:r,y:a,prevY:y,i,j:P,realIndex:n})}return{yArrj:p,xArrj:d,pathFromArea:C,areaPaths:u,pathFromLine:S,linePaths:c}}},{key:"_handleMarkersAndLabels",value:function(t){var e=t.pointsPos,n=(t.series,t.x,t.y,t.prevY,t.i),i=t.j,r=t.realIndex,a=this.w,o=new z(this.ctx);if(this.pointsChart)this.scatter.draw(this.elSeries,i,{realIndex:r,pointsPos:e,zRatio:this.zRatio,elParent:this.elPointsMain});else{a.globals.series[n].length>1&&this.elPointsMain.node.classList.add("apexcharts-element-hidden");var s=this.markers.plotChartMarkers(e,r,i+1);null!==s&&this.elPointsMain.add(s)}var l=o.drawDataLabel(e,r,i+1,null);null!==l&&this.elDataLabelsWrap.add(l)}},{key:"_createPaths",value:function(t){var e=t.series,n=t.i,i=t.realIndex,r=t.j,a=t.x,o=t.y,s=t.pX,l=t.pY,c=t.linePath,u=t.areaPath,h=t.linePaths,f=t.areaPaths,d=t.seriesIndex,p=this.w,g=new x(this.ctx),m=p.config.stroke.curve,v=this.areaBottomY;if(Array.isArray(p.config.stroke.curve)&&(m=Array.isArray(d)?p.config.stroke.curve[d[n]]:p.config.stroke.curve[n]),"smooth"===m){var b=.35*(a-s);p.globals.hasNullValues?(null!==e[n][r]&&(null!==e[n][r+1]?(c=g.move(s,l)+g.curve(s+b,l,a-b,o,a+1,o),u=g.move(s+1,l)+g.curve(s+b,l,a-b,o,a+1,o)+g.line(a,v)+g.line(s,v)+"z"):(c=g.move(s,l),u=g.move(s,l)+"z")),h.push(c),f.push(u)):(c+=g.curve(s+b,l,a-b,o,a,o),u+=g.curve(s+b,l,a-b,o,a,o)),s=a,l=o,r===e[n].length-2&&(u=u+g.curve(s,l,a,o,a,v)+g.move(a,o)+"z",p.globals.hasNullValues||(h.push(c),f.push(u)))}else{if(null===e[n][r+1]){c+=g.move(a,o);var y=p.globals.isXNumeric?(p.globals.seriesX[i][r]-p.globals.minX)/this.xRatio:a-this.xDivision;u=u+g.line(y,v)+g.move(a,o)+"z"}null===e[n][r]&&(c+=g.move(a,o),u+=g.move(a,v)),"stepline"===m?(c=c+g.line(a,null,"H")+g.line(null,o,"V"),u=u+g.line(a,null,"H")+g.line(null,o,"V")):"straight"===m&&(c+=g.line(a,o),u+=g.line(a,o)),r===e[n].length-2&&(u=u+g.line(a,v)+g.move(a,o)+"z",h.push(c),f.push(u))}return{linePaths:h,areaPaths:f,pX:s,pY:l,linePath:c,areaPath:u}}},{key:"handleNullDataPoints",value:function(t,e,n,i,r){var a=this.w;if(null===t[n][i]&&a.config.markers.showNullDataPoints||1===t[n].length){var o=this.markers.plotChartMarkers(e,r,i+1,this.strokeWidth-a.config.markers.strokeWidth/2,!0);null!==o&&this.elPointsMain.add(o)}}}]),t}(),Tt=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w,this.timeScaleArray=[],this.utc=this.w.config.xaxis.labels.datetimeUTC}return s(t,[{key:"calculateTimeScaleTicks",value:function(t,e){var n=this,i=this.w;if(i.globals.allSeriesCollapsed)return i.globals.labels=[],i.globals.timescaleLabels=[],[];var r=new P(this.ctx),a=(e-t)/864e5;this.determineInterval(a),i.globals.disableZoomIn=!1,i.globals.disableZoomOut=!1,a<.005?i.globals.disableZoomIn=!0:a>5e4&&(i.globals.disableZoomOut=!0);var o=r.getTimeUnitsfromTimestamp(t,e,this.utc),s=i.globals.gridWidth/a,l=s/24,c=l/60,h=Math.floor(24*a),f=Math.floor(24*a*60),d=Math.floor(a),p=Math.floor(a/30),g=Math.floor(a/365),m={minMinute:o.minMinute,minHour:o.minHour,minDate:o.minDate,minMonth:o.minMonth,minYear:o.minYear},v={firstVal:m,currentMinute:m.minMinute,currentHour:m.minHour,currentMonthDate:m.minDate,currentDate:m.minDate,currentMonth:m.minMonth,currentYear:m.minYear,daysWidthOnXAxis:s,hoursWidthOnXAxis:l,minutesWidthOnXAxis:c,numberOfMinutes:f,numberOfHours:h,numberOfDays:d,numberOfMonths:p,numberOfYears:g};switch(this.tickInterval){case"years":this.generateYearScale(v);break;case"months":case"half_year":this.generateMonthScale(v);break;case"months_days":case"months_fortnight":case"days":case"week_days":this.generateDayScale(v);break;case"hours":this.generateHourScale(v);break;case"minutes":this.generateMinuteScale(v)}var x=this.timeScaleArray.map((function(t){var e={position:t.position,unit:t.unit,year:t.year,day:t.day?t.day:1,hour:t.hour?t.hour:0,month:t.month+1};return"month"===t.unit?u({},e,{day:1,value:t.value+1}):"day"===t.unit||"hour"===t.unit?u({},e,{value:t.value}):"minute"===t.unit?u({},e,{value:t.value,minute:t.value}):t}));return x.filter((function(t){var e=1,r=Math.ceil(i.globals.gridWidth/120),a=t.value;void 0!==i.config.xaxis.tickAmount&&(r=i.config.xaxis.tickAmount),x.length>r&&(e=Math.floor(x.length/r));var o=!1,s=!1;switch(n.tickInterval){case"years":"year"===t.unit&&(o=!0);break;case"half_year":e=7,"year"===t.unit&&(o=!0);break;case"months":e=1,"year"===t.unit&&(o=!0);break;case"months_fortnight":e=15,"year"!==t.unit&&"month"!==t.unit||(o=!0),30===a&&(s=!0);break;case"months_days":e=10,"month"===t.unit&&(o=!0),30===a&&(s=!0);break;case"week_days":e=8,"month"===t.unit&&(o=!0);break;case"days":e=1,"month"===t.unit&&(o=!0);break;case"hours":"day"===t.unit&&(o=!0);break;case"minutes":a%5!=0&&(s=!0)}if("minutes"===n.tickInterval||"hours"===n.tickInterval){if(!s)return!0}else if((a%e==0||o)&&!s)return!0}))}},{key:"recalcDimensionsBasedOnFormat",value:function(t,e){var n=this.w,i=this.formatDates(t),r=this.removeOverlappingTS(i);n.globals.timescaleLabels=r.slice(),new rt(this.ctx).plotCoords()}},{key:"determineInterval",value:function(t){switch(!0){case t>1825:this.tickInterval="years";break;case t>800&&t<=1825:this.tickInterval="half_year";break;case t>180&&t<=800:this.tickInterval="months";break;case t>90&&t<=180:this.tickInterval="months_fortnight";break;case t>60&&t<=90:this.tickInterval="months_days";break;case t>30&&t<=60:this.tickInterval="week_days";break;case t>2&&t<=30:this.tickInterval="days";break;case t>.1&&t<=2:this.tickInterval="hours";break;case t<.1:this.tickInterval="minutes";break;default:this.tickInterval="days"}}},{key:"generateYearScale",value:function(t){var e=t.firstVal,n=t.currentMonth,i=t.currentYear,r=t.daysWidthOnXAxis,a=t.numberOfYears,o=e.minYear,s=0,l=new P(this.ctx);if(e.minDate>1&&e.minMonth>0){var c=l.determineRemainingDaysOfYear(e.minYear,e.minMonth,e.minDate);s=(l.determineDaysOfYear(e.minYear)-c+1)*r,o=e.minYear+1,this.timeScaleArray.push({position:s,value:o,unit:"year",year:o,month:g.monthMod(n+1)})}else 1===e.minDate&&0===e.minMonth&&this.timeScaleArray.push({position:s,value:o,unit:"year",year:i,month:g.monthMod(n+1)});for(var u=o,h=s,f=0;f<a;f++)u++,h=l.determineDaysOfYear(u-1)*r+h,this.timeScaleArray.push({position:h,value:u,unit:"year",year:u,month:1})}},{key:"generateMonthScale",value:function(t){var e=t.firstVal,n=t.currentMonthDate,i=t.currentMonth,r=t.currentYear,a=t.daysWidthOnXAxis,o=t.numberOfMonths,s=i,l=0,c=new P(this.ctx),u="month",h=0;if(e.minDate>1){l=(c.determineDaysOfMonths(i+1,e.minYear)-n+1)*a,s=g.monthMod(i+1);var f=r+h,d=g.monthMod(s),p=s;0===s&&(u="year",p=f,d=1,f+=h+=1),this.timeScaleArray.push({position:l,value:p,unit:u,year:f,month:d})}else this.timeScaleArray.push({position:l,value:s,unit:u,year:r,month:g.monthMod(i)});for(var m=s+1,v=l,x=0,b=1;x<o;x++,b++){0===(m=g.monthMod(m))?(u="year",h+=1):u="month";var y=r+Math.floor(m/12)+h;v=c.determineDaysOfMonths(m,y)*a+v;var w=0===m?y:m;this.timeScaleArray.push({position:v,value:w,unit:u,year:y,month:0===m?1:m}),m++}}},{key:"generateDayScale",value:function(t){var e=t.firstVal,n=t.currentMonth,i=t.currentYear,r=t.hoursWidthOnXAxis,a=t.numberOfDays,o=new P(this.ctx),s="day",l=e.minDate+1,c=l,u=function(t,e,n){return t>o.determineDaysOfMonths(e+1,n)?(c=1,s="month",f=e+=1,e):e},h=(24-e.minHour)*r,f=l,d=u(c,n,i);0===e.minHour&&1===e.minDate&&(h=0,f=g.monthMod(e.minMonth),s="month",c=e.minDate,a++),this.timeScaleArray.push({position:h,value:f,unit:s,year:i,month:g.monthMod(d),day:c});for(var p=h,m=0;m<a;m++){s="day",d=u(c+=1,d,i+Math.floor(d/12)+0);var v=i+Math.floor(d/12)+0;p=24*r+p;var x=1===c?g.monthMod(d):c;this.timeScaleArray.push({position:p,value:x,unit:s,year:v,month:g.monthMod(d),day:x})}}},{key:"generateHourScale",value:function(t){var e=t.firstVal,n=t.currentDate,i=t.currentMonth,r=t.currentYear,a=t.minutesWidthOnXAxis,o=t.numberOfHours,s=new P(this.ctx),l="hour",c=function(t,e){return t>s.determineDaysOfMonths(e+1,r)&&(m=1,e+=1),{month:e,date:m}},u=function(t,e){return t>s.determineDaysOfMonths(e+1,r)?e+=1:e},h=60-e.minMinute,f=h*a,d=e.minHour+1,p=d+1;60===h&&(f=0,p=(d=e.minHour)+1);var m=n,v=u(m,i);this.timeScaleArray.push({position:f,value:d,unit:l,day:m,hour:p,year:r,month:g.monthMod(v)});for(var x=f,b=0;b<o;b++){l="hour",p>=24&&(p=0,l="day",v=c(m+=1,v).month,v=u(m,v));var y=r+Math.floor(v/12)+0;x=0===p&&0===b?h*a:60*a+x;var w=0===p?m:p;this.timeScaleArray.push({position:x,value:w,unit:l,hour:p,day:m,year:y,month:g.monthMod(v)}),p++}}},{key:"generateMinuteScale",value:function(t){var e=t.firstVal,n=t.currentMinute,i=t.currentHour,r=t.currentDate,a=t.currentMonth,o=t.currentYear,s=t.minutesWidthOnXAxis,l=t.numberOfMinutes,c=s-(n-e.minMinute),u=e.minMinute+1,h=u+1,f=r,d=a,p=o,m=i;this.timeScaleArray.push({position:c,value:u,unit:"minute",day:f,hour:m,minute:h,year:p,month:g.monthMod(d)});for(var v=c,x=0;x<l;x++)h>=60&&(h=0,24===(m+=1)&&(m=0)),v=s+v,this.timeScaleArray.push({position:v,value:h,unit:"minute",hour:m,minute:h,day:f,year:o+Math.floor(d/12)+0,month:g.monthMod(d)}),h++}},{key:"createRawDateString",value:function(t,e){var n=t.year;return n+="-"+("0"+t.month.toString()).slice(-2),"day"===t.unit?n+="day"===t.unit?"-"+("0"+e).slice(-2):"-01":n+="-"+("0"+(t.day?t.day:"1")).slice(-2),"hour"===t.unit?n+="hour"===t.unit?"T"+("0"+e).slice(-2):"T00":n+="T"+("0"+(t.hour?t.hour:"0")).slice(-2),n+="minute"===t.unit?":"+("0"+e).slice(-2)+":00":":00:00",this.utc&&(n+=".000Z"),n}},{key:"formatDates",value:function(t){var e=this,n=this.w;return t.map((function(t){var i=t.value.toString(),r=new P(e.ctx),a=e.createRawDateString(t,i),o=r.getDate(a);if(void 0===n.config.xaxis.labels.format){var s="dd MMM",l=n.config.xaxis.labels.datetimeFormatter;"year"===t.unit&&(s=l.year),"month"===t.unit&&(s=l.month),"day"===t.unit&&(s=l.day),"hour"===t.unit&&(s=l.hour),"minute"===t.unit&&(s=l.minute),i=r.formatDate(o,s)}else i=r.formatDate(o,n.config.xaxis.labels.format);return{dateString:a,position:t.position,value:i,unit:t.unit,year:t.year,month:t.month}}))}},{key:"removeOverlappingTS",value:function(t){var e,n=this,i=new x(this.ctx),r=!1;t.length>0&&t[0].value&&t.every((function(e){return e.value.length===t[0].value.length}))&&(r=!0,e=i.getTextRects(t[0].value).width);var a=0,o=t.map((function(o,s){if(s>0&&n.w.config.xaxis.labels.hideOverlappingLabels){var l=r?e:i.getTextRects(t[a].value).width,c=t[a].position;return o.position>c+l+10?(a=s,o):null}return o}));return o.filter((function(t){return null!==t}))}}]),t}(),Ot=function(){function t(e,n){a(this,t),this.ctx=n,this.w=n.w,this.el=e}return s(t,[{key:"setupElements",value:function(){var t=this.w.globals,e=this.w.config,n=e.chart.type;t.axisCharts=["line","area","bar","rangeBar","candlestick","scatter","bubble","radar","heatmap"].indexOf(n)>-1,t.xyCharts=["line","area","bar","rangeBar","candlestick","scatter","bubble"].indexOf(n)>-1,t.isBarHorizontal=("bar"===e.chart.type||"rangeBar"===e.chart.type)&&e.plotOptions.bar.horizontal,t.chartClass=".apexcharts"+t.cuid,t.dom.baseEl=this.el,t.dom.elWrap=document.createElement("div"),x.setAttrs(t.dom.elWrap,{id:t.chartClass.substring(1),class:"apexcharts-canvas "+t.chartClass.substring(1)}),this.el.appendChild(t.dom.elWrap),t.dom.Paper=new window.SVG.Doc(t.dom.elWrap),t.dom.Paper.attr({class:"apexcharts-svg","xmlns:data":"ApexChartsNS",transform:"translate(".concat(e.chart.offsetX,", ").concat(e.chart.offsetY,")")}),t.dom.Paper.node.style.background=e.chart.background,this.setSVGDimensions(),t.dom.elGraphical=t.dom.Paper.group().attr({class:"apexcharts-inner apexcharts-graphical"}),t.dom.elAnnotations=t.dom.Paper.group().attr({class:"apexcharts-annotations"}),t.dom.elDefs=t.dom.Paper.defs(),t.dom.elLegendWrap=document.createElement("div"),t.dom.elLegendWrap.classList.add("apexcharts-legend"),t.dom.elWrap.appendChild(t.dom.elLegendWrap),t.dom.Paper.add(t.dom.elGraphical),t.dom.elGraphical.add(t.dom.elDefs)}},{key:"plotChartType",value:function(t,e){var n=this.w,i=n.config,r=n.globals,a={series:[],i:[]},o={series:[],i:[]},s={series:[],i:[]},l={series:[],i:[]},c={series:[],i:[]},u={series:[],i:[]};r.series.map((function(e,h){void 0!==t[h].type?("column"===t[h].type||"bar"===t[h].type?(r.series.length>1&&i.plotOptions.bar.horizontal&&console.warn("Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"),c.series.push(e),c.i.push(h),n.globals.columnSeries=c.series):"area"===t[h].type?(o.series.push(e),o.i.push(h)):"line"===t[h].type?(a.series.push(e),a.i.push(h)):"scatter"===t[h].type?(s.series.push(e),s.i.push(h)):"bubble"===t[h].type?(l.series.push(e),l.i.push(h)):"candlestick"===t[h].type?(u.series.push(e),u.i.push(h)):console.warn("You have specified an unrecognized chart type. Available types for this propery are line/area/column/bar/scatter/bubble"),r.comboCharts=!0):(a.series.push(e),a.i.push(h))}));var h=new Pt(this.ctx,e),f=new wt(this.ctx,e),d=new at(this.ctx),p=new Ct(this.ctx),g=new At(this.ctx,e),m=new St(this.ctx),v=[];if(r.comboCharts){if(o.series.length>0&&v.push(h.draw(o.series,"area",o.i)),c.series.length>0)if(n.config.chart.stacked){var x=new yt(this.ctx,e);v.push(x.draw(c.series,c.i))}else{var b=new bt(this.ctx,e);v.push(b.draw(c.series,c.i))}if(a.series.length>0&&v.push(h.draw(a.series,"line",a.i)),u.series.length>0&&v.push(f.draw(u.series,u.i)),s.series.length>0){var y=new Pt(this.ctx,e,!0);v.push(y.draw(s.series,"scatter",s.i))}if(l.series.length>0){var w=new Pt(this.ctx,e,!0);v.push(w.draw(l.series,"bubble",l.i))}}else switch(i.chart.type){case"line":v=h.draw(r.series,"line");break;case"area":v=h.draw(r.series,"area");break;case"bar":v=i.chart.stacked?new yt(this.ctx,e).draw(r.series):new bt(this.ctx,e).draw(r.series);break;case"candlestick":v=new wt(this.ctx,e).draw(r.series);break;case"rangeBar":v=g.draw(r.series);break;case"heatmap":v=new kt(this.ctx,e).draw(r.series);break;case"pie":case"donut":v=d.draw(r.series);break;case"radialBar":v=p.draw(r.series);break;case"radar":v=m.draw(r.series);break;default:v=h.draw(r.series)}return v}},{key:"setSVGDimensions",value:function(){var t=this.w.globals,e=this.w.config;t.svgWidth=e.chart.width,t.svgHeight=e.chart.height;var n=g.getDimensions(this.el),i=e.chart.width.toString().split(/[0-9]+/g).pop();if("%"===i?g.isNumber(n[0])&&(0===n[0].width&&(n=g.getDimensions(this.el.parentNode)),t.svgWidth=n[0]*parseInt(e.chart.width,10)/100):"px"!==i&&""!==i||(t.svgWidth=parseInt(e.chart.width,10)),"auto"!==t.svgHeight&&""!==t.svgHeight)if("%"===e.chart.height.toString().split(/[0-9]+/g).pop()){var r=g.getDimensions(this.el.parentNode);t.svgHeight=r[1]*parseInt(e.chart.height,10)/100}else t.svgHeight=parseInt(e.chart.height,10);else t.axisCharts?t.svgHeight=t.svgWidth/1.61:t.svgHeight=t.svgWidth/1.2;t.svgWidth<0&&(t.svgWidth=0),t.svgHeight<0&&(t.svgHeight=0),x.setAttrs(t.dom.Paper.node,{width:t.svgWidth,height:t.svgHeight});var a=e.chart.sparkline.enabled?0:t.axisCharts?e.chart.parentHeightOffset:0;t.dom.Paper.node.parentNode.parentNode.style.minHeight=t.svgHeight+a+"px",t.dom.elWrap.style.width=t.svgWidth+"px",t.dom.elWrap.style.height=t.svgHeight+"px"}},{key:"shiftGraphPosition",value:function(){var t=this.w.globals,e=t.translateY,n={transform:"translate("+t.translateX+", "+e+")"};x.setAttrs(t.dom.elGraphical.node,n),t.x2SpaceAvailable=t.svgWidth-t.dom.elGraphical.x()-t.gridWidth}},{key:"resizeNonAxisCharts",value:function(){var t=this.w,e=t.globals,n=0,i=t.config.chart.sparkline.enabled?1:15;i+=t.config.grid.padding.bottom,"top"!==t.config.legend.position&&"bottom"!==t.config.legend.position||!t.config.legend.show||t.config.legend.floating||(n=new st(this.ctx).legendHelpers.getLegendBBox().clwh+10);var r=t.globals.dom.baseEl.querySelector(".apexcharts-radialbar"),a=2.05*t.globals.radialSize;if(r&&!t.config.chart.sparkline.enabled){var o=g.getBoundingClientRect(r);a=o.bottom;var s=o.bottom-o.top;a=Math.max(2.05*t.globals.radialSize,s)}var l=a+e.translateY+n+i;e.dom.elLegendForeign&&e.dom.elLegendForeign.setAttribute("height",l),e.dom.elWrap.style.height=l+"px",x.setAttrs(e.dom.Paper.node,{height:l}),e.dom.Paper.node.parentNode.parentNode.style.minHeight=l+"px"}},{key:"coreCalculations",value:function(){new V(this.ctx).init()}},{key:"resetGlobals",value:function(){var t=this,e=function(){return t.w.config.series.map((function(t){return[]}))},n=new L,i=this.w.globals;n.initGlobalVars(i),i.seriesXvalues=e(),i.seriesYvalues=e()}},{key:"isMultipleY",value:function(){if(this.w.config.yaxis.constructor===Array&&this.w.config.yaxis.length>1)return this.w.globals.isMultipleYAxis=!0,!0}},{key:"xySettings",value:function(){var t=null,e=this.w;if(e.globals.axisCharts){if("back"===e.config.xaxis.crosshairs.position&&new Z(this.ctx).drawXCrosshairs(),"back"===e.config.yaxis[0].crosshairs.position&&new Z(this.ctx).drawYCrosshairs(),"datetime"===e.config.xaxis.type&&void 0===e.config.xaxis.labels.formatter){var n=new Tt(this.ctx),i=[];isFinite(e.globals.minX)&&isFinite(e.globals.maxX)&&!e.globals.isBarHorizontal?i=n.calculateTimeScaleTicks(e.globals.minX,e.globals.maxX):e.globals.isBarHorizontal&&(i=n.calculateTimeScaleTicks(e.globals.minY,e.globals.maxY)),n.recalcDimensionsBasedOnFormat(i)}t=new _(this.ctx).getCalculatedRatios()}return t}},{key:"setupBrushHandler",value:function(){var t=this,e=this.w;if(e.config.chart.brush.enabled&&"function"!=typeof e.config.chart.events.selection){var n=e.config.chart.brush.targets||[e.config.chart.brush.target];n.forEach((function(e){var n=ApexCharts.getChartByID(e);n.w.globals.brushSource=t.ctx;var i=function(){t.ctx.updateHelpers._updateOptions({chart:{selection:{xaxis:{min:n.w.globals.minX,max:n.w.globals.maxX}}}},!1,!1)};"function"!=typeof n.w.config.chart.events.zoomed&&(n.w.config.chart.events.zoomed=function(){i()}),"function"!=typeof n.w.config.chart.events.scrolled&&(n.w.config.chart.events.scrolled=function(){i()})})),e.config.chart.events.selection=function(t,i){n.forEach((function(t){var n=ApexCharts.getChartByID(t),r=g.clone(e.config.yaxis);e.config.chart.brush.autoScaleYaxis&&1===n.w.globals.series.length&&(r=new B(n).autoScaleY(n,r,i)),n.ctx.updateHelpers._updateOptions({xaxis:{min:i.xaxis.min,max:i.xaxis.max},yaxis:u({},n.w.config.yaxis[0],{min:r[0].min,max:r[0].max})},!1,!1,!1,!1)}))}}}}]),t}(),Lt=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"_updateOptions",value:function(t){var e=this,n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=[this.ctx];a&&(s=this.ctx.getSyncedCharts()),this.ctx.w.globals.isExecCalled&&(s=[this.ctx],this.ctx.w.globals.isExecCalled=!1),s.forEach((function(a){var s=a.w;return s.globals.shouldAnimate=i,n||(s.globals.resized=!0,s.globals.dataChanged=!0,i&&a.series.getPreviousPaths()),t&&"object"===r(t)&&(a.config=new O(t),t=_.extendArrayProps(a.config,t),a.w.globals.chartID!==e.ctx.w.globals.chartID&&delete t.series,s.config=g.extend(s.config,t),o&&(s.globals.lastXAxis=[],s.globals.lastYAxis=[],s.globals.initialConfig=g.extend({},s.config),s.globals.initialSeries=JSON.parse(JSON.stringify(s.config.series)))),a.update(t)}))}},{key:"_updateSeries",value:function(t,e){var n,i=this,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=this.w;return a.globals.shouldAnimate=e,a.globals.dataChanged=!0,a.globals.allSeriesCollapsed&&(a.globals.allSeriesCollapsed=!1),e&&this.ctx.series.getPreviousPaths(),a.globals.axisCharts?(0===(n=t.map((function(t,e){return i._extendSeries(t,e)}))).length&&(n=[{data:[]}]),a.config.series=n):a.config.series=t.slice(),r&&(a.globals.initialConfig.series=JSON.parse(JSON.stringify(a.config.series)),a.globals.initialSeries=JSON.parse(JSON.stringify(a.config.series))),this.ctx.update()}},{key:"_extendSeries",value:function(t,e){var n=this.w;return u({},n.config.series[e],{name:t.name?t.name:n.config.series[e]&&n.config.series[e].name,type:t.type?t.type:n.config.series[e]&&n.config.series[e].type,data:t.data?t.data:n.config.series[e]&&n.config.series[e].data})}},{key:"toggleDataPointSelection",value:function(t,e){var n=this.w,i=null,r=".apexcharts-series[data\\:realIndex='".concat(t,"']");return n.globals.axisCharts?i=n.globals.dom.Paper.select("".concat(r," path[j='").concat(e,"'], ").concat(r," circle[j='").concat(e,"'], ").concat(r," rect[j='").concat(e,"']")).members[0]:void 0===e&&(i=n.globals.dom.Paper.select("".concat(r," path[j='").concat(t,"']")).members[0],("pie"===n.config.chart.type||"donut"===n.config.chart.type)&&new at(this.ctx).pieClicked(t)),i?(new x(this.ctx).pathMouseDown(i,null),i.node?i.node:null):(console.warn("toggleDataPointSelection: Element not found"),null)}},{key:"forceXAxisUpdate",value:function(t){var e=this.w;if(["min","max"].forEach((function(n){void 0!==t.xaxis[n]&&(e.config.xaxis[n]=t.xaxis[n],e.globals.lastXAxis[n]=t.xaxis[n])})),t.xaxis.categories&&t.xaxis.categories.length&&(e.config.xaxis.categories=t.xaxis.categories),e.config.xaxis.convertedCatToNumeric){var n=new T(t);t=n.convertCatToNumericXaxis(t,this.ctx)}return t}},{key:"forceYAxisUpdate",value:function(t){var e=this.w;return e.config.chart.stacked&&"100%"===e.config.chart.stackType&&(Array.isArray(t.yaxis)?t.yaxis.forEach((function(e,n){t.yaxis[n].min=0,t.yaxis[n].max=100})):(t.yaxis.min=0,t.yaxis.max=100)),t}},{key:"revertDefaultAxisMinMax",value:function(){var t=this,e=this.w;e.config.xaxis.min=e.globals.lastXAxis.min,e.config.xaxis.max=e.globals.lastXAxis.max,e.config.yaxis.map((function(n,i){e.globals.zoomed?void 0!==e.globals.lastYAxis[i]&&(n.min=e.globals.lastYAxis[i].min,n.max=e.globals.lastYAxis[i].max):void 0!==t.ctx.opts.yaxis[i]&&(n.min=t.ctx.opts.yaxis[i].min,n.max=t.ctx.opts.yaxis[i].max)}))}}]),t}();S="undefined"!=typeof window?window:void 0,void 0===(i=function(){return function(t,e){var n=(void 0!==this?this:t).SVG=function(t){if(n.supported)return t=new n.Doc(t),n.parser.draw||n.prepare(),t};if(n.ns="http://www.w3.org/2000/svg",n.xmlns="http://www.w3.org/2000/xmlns/",n.xlink="http://www.w3.org/1999/xlink",n.svgjs="http://svgjs.com/svgjs",n.supported=!0,!n.supported)return!1;n.did=1e3,n.eid=function(t){return"Svgjs"+h(t)+n.did++},n.create=function(t){var n=e.createElementNS(this.ns,t);return n.setAttribute("id",this.eid(t)),n},n.extend=function(){var t,e;e=(t=[].slice.call(arguments)).pop();for(var i=t.length-1;i>=0;i--)if(t[i])for(var r in e)t[i].prototype[r]=e[r];n.Set&&n.Set.inherit&&n.Set.inherit()},n.invent=function(t){var e="function"==typeof t.create?t.create:function(){this.constructor.call(this,n.create(t.create))};return t.inherit&&(e.prototype=new t.inherit),t.extend&&n.extend(e,t.extend),t.construct&&n.extend(t.parent||n.Container,t.construct),e},n.adopt=function(e){return e?e.instance?e.instance:((i="svg"==e.nodeName?e.parentNode instanceof t.SVGElement?new n.Nested:new n.Doc:"linearGradient"==e.nodeName?new n.Gradient("linear"):"radialGradient"==e.nodeName?new n.Gradient("radial"):n[h(e.nodeName)]?new(n[h(e.nodeName)]):new n.Element(e)).type=e.nodeName,i.node=e,e.instance=i,i instanceof n.Doc&&i.namespace().defs(),i.setData(JSON.parse(e.getAttribute("svgjs:data"))||{}),i):null;var i},n.prepare=function(){var t=e.getElementsByTagName("body")[0],i=(t?new n.Doc(t):n.adopt(e.documentElement).nested()).size(2,0);n.parser={body:t||e.documentElement,draw:i.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,poly:i.polyline().node,path:i.path().node,native:n.create("svg")}},n.parser={native:n.create("svg")},e.addEventListener("DOMContentLoaded",(function(){n.parser.draw||n.prepare()}),!1),n.regex={numberAndUnit:/^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,hex:/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,rgb:/rgb\((\d+),(\d+),(\d+)\)/,reference:/#([a-z0-9\-_]+)/i,transforms:/\)\s*,?\s*/,whitespace:/\s/g,isHex:/^#[a-f0-9]{3,6}$/i,isRgb:/^rgb\(/,isCss:/[^:]+:[^;]+;?/,isBlank:/^(\s+)?$/,isNumber:/^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,isPercent:/^-?[\d\.]+%$/,isImage:/\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,delimiter:/[\s,]+/,hyphen:/([^e])\-/gi,pathLetters:/[MLHVCSQTAZ]/gi,isPathLetter:/[MLHVCSQTAZ]/i,numbersWithDots:/((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,dots:/\./g},n.utils={map:function(t,e){for(var n=t.length,i=[],r=0;r<n;r++)i.push(e(t[r]));return i},filter:function(t,e){for(var n=t.length,i=[],r=0;r<n;r++)e(t[r])&&i.push(t[r]);return i},filterSVGElements:function(e){return this.filter(e,(function(e){return e instanceof t.SVGElement}))}},n.defaults={attrs:{"fill-opacity":1,"stroke-opacity":1,"stroke-width":0,"stroke-linejoin":"miter","stroke-linecap":"butt",fill:"#000000",stroke:"#000000",opacity:1,x:0,y:0,cx:0,cy:0,width:0,height:0,r:0,rx:0,ry:0,offset:0,"stop-opacity":1,"stop-color":"#000000","font-size":16,"font-family":"Helvetica, Arial, sans-serif","text-anchor":"start"}},n.Color=function(t){var e,i;this.r=0,this.g=0,this.b=0,t&&("string"==typeof t?n.regex.isRgb.test(t)?(e=n.regex.rgb.exec(t.replace(n.regex.whitespace,"")),this.r=parseInt(e[1]),this.g=parseInt(e[2]),this.b=parseInt(e[3])):n.regex.isHex.test(t)&&(e=n.regex.hex.exec(4==(i=t).length?["#",i.substring(1,2),i.substring(1,2),i.substring(2,3),i.substring(2,3),i.substring(3,4),i.substring(3,4)].join(""):i),this.r=parseInt(e[1],16),this.g=parseInt(e[2],16),this.b=parseInt(e[3],16)):"object"===r(t)&&(this.r=t.r,this.g=t.g,this.b=t.b))},n.extend(n.Color,{toString:function(){return this.toHex()},toHex:function(){return"#"+f(this.r)+f(this.g)+f(this.b)},toRgb:function(){return"rgb("+[this.r,this.g,this.b].join()+")"},brightness:function(){return this.r/255*.3+this.g/255*.59+this.b/255*.11},morph:function(t){return this.destination=new n.Color(t),this},at:function(t){return this.destination?(t=t<0?0:t>1?1:t,new n.Color({r:~~(this.r+(this.destination.r-this.r)*t),g:~~(this.g+(this.destination.g-this.g)*t),b:~~(this.b+(this.destination.b-this.b)*t)})):this}}),n.Color.test=function(t){return t+="",n.regex.isHex.test(t)||n.regex.isRgb.test(t)},n.Color.isRgb=function(t){return t&&"number"==typeof t.r&&"number"==typeof t.g&&"number"==typeof t.b},n.Color.isColor=function(t){return n.Color.isRgb(t)||n.Color.test(t)},n.Array=function(t,e){0==(t=(t||[]).valueOf()).length&&e&&(t=e.valueOf()),this.value=this.parse(t)},n.extend(n.Array,{toString:function(){return this.value.join(" ")},valueOf:function(){return this.value},parse:function(t){return t=t.valueOf(),Array.isArray(t)?t:this.split(t)}}),n.PointArray=function(t,e){n.Array.call(this,t,e||[[0,0]])},n.PointArray.prototype=new n.Array,n.PointArray.prototype.constructor=n.PointArray;for(var i={M:function(t,e,n){return e.x=n.x=t[0],e.y=n.y=t[1],["M",e.x,e.y]},L:function(t,e){return e.x=t[0],e.y=t[1],["L",t[0],t[1]]},H:function(t,e){return e.x=t[0],["H",t[0]]},V:function(t,e){return e.y=t[0],["V",t[0]]},C:function(t,e){return e.x=t[4],e.y=t[5],["C",t[0],t[1],t[2],t[3],t[4],t[5]]},Q:function(t,e){return e.x=t[2],e.y=t[3],["Q",t[0],t[1],t[2],t[3]]},Z:function(t,e,n){return e.x=n.x,e.y=n.y,["Z"]}},a="mlhvqtcsaz".split(""),o=0,s=a.length;o<s;++o)i[a[o]]=function(t){return function(e,n,r){if("H"==t)e[0]=e[0]+n.x;else if("V"==t)e[0]=e[0]+n.y;else if("A"==t)e[5]=e[5]+n.x,e[6]=e[6]+n.y;else for(var a=0,o=e.length;a<o;++a)e[a]=e[a]+(a%2?n.y:n.x);return i[t](e,n,r)}}(a[o].toUpperCase());n.PathArray=function(t,e){n.Array.call(this,t,e||[["M",0,0]])},n.PathArray.prototype=new n.Array,n.PathArray.prototype.constructor=n.PathArray,n.extend(n.PathArray,{toString:function(){return function(t){for(var e=0,n=t.length,i="";e<n;e++)i+=t[e][0],null!=t[e][1]&&(i+=t[e][1],null!=t[e][2]&&(i+=" ",i+=t[e][2],null!=t[e][3]&&(i+=" ",i+=t[e][3],i+=" ",i+=t[e][4],null!=t[e][5]&&(i+=" ",i+=t[e][5],i+=" ",i+=t[e][6],null!=t[e][7]&&(i+=" ",i+=t[e][7])))));return i+" "}(this.value)},move:function(t,e){var n=this.bbox();return n.x,n.y,this},at:function(t){if(!this.destination)return this;for(var e=this.value,i=this.destination.value,r=[],a=new n.PathArray,o=0,s=e.length;o<s;o++){r[o]=[e[o][0]];for(var l=1,c=e[o].length;l<c;l++)r[o][l]=e[o][l]+(i[o][l]-e[o][l])*t;"A"===r[o][0]&&(r[o][4]=+(0!=r[o][4]),r[o][5]=+(0!=r[o][5]))}return a.value=r,a},parse:function(t){if(t instanceof n.PathArray)return t.valueOf();var e,r={M:2,L:2,H:1,V:1,C:6,S:4,Q:4,T:2,A:7,Z:0};t="string"==typeof t?t.replace(n.regex.numbersWithDots,c).replace(n.regex.pathLetters," $& ").replace(n.regex.hyphen,"$1 -").trim().split(n.regex.delimiter):t.reduce((function(t,e){return[].concat.call(t,e)}),[]);var a=[],o=new n.Point,s=new n.Point,l=0,u=t.length;do{n.regex.isPathLetter.test(t[l])?(e=t[l],++l):"M"==e?e="L":"m"==e&&(e="l"),a.push(i[e].call(null,t.slice(l,l+=r[e.toUpperCase()]).map(parseFloat),o,s))}while(u>l);return a},bbox:function(){return n.parser.draw||n.prepare(),n.parser.path.setAttribute("d",this.toString()),n.parser.path.getBBox()}}),n.Number=n.invent({create:function(t,e){this.value=0,this.unit=e||"","number"==typeof t?this.value=isNaN(t)?0:isFinite(t)?t:t<0?-34e37:34e37:"string"==typeof t?(e=t.match(n.regex.numberAndUnit))&&(this.value=parseFloat(e[1]),"%"==e[5]?this.value/=100:"s"==e[5]&&(this.value*=1e3),this.unit=e[5]):t instanceof n.Number&&(this.value=t.valueOf(),this.unit=t.unit)},extend:{toString:function(){return("%"==this.unit?~~(1e8*this.value)/1e6:"s"==this.unit?this.value/1e3:this.value)+this.unit},toJSON:function(){return this.toString()},valueOf:function(){return this.value},plus:function(t){return t=new n.Number(t),new n.Number(this+t,this.unit||t.unit)},minus:function(t){return t=new n.Number(t),new n.Number(this-t,this.unit||t.unit)},times:function(t){return t=new n.Number(t),new n.Number(this*t,this.unit||t.unit)},divide:function(t){return t=new n.Number(t),new n.Number(this/t,this.unit||t.unit)},to:function(t){var e=new n.Number(this);return"string"==typeof t&&(e.unit=t),e},morph:function(t){return this.destination=new n.Number(t),t.relative&&(this.destination.value+=this.value),this},at:function(t){return this.destination?new n.Number(this.destination).minus(this).times(t).plus(this):this}}}),n.Element=n.invent({create:function(t){this._stroke=n.defaults.attrs.stroke,this._event=null,this.dom={},(this.node=t)&&(this.type=t.nodeName,this.node.instance=this,this._stroke=t.getAttribute("stroke")||this._stroke)},extend:{x:function(t){return this.attr("x",t)},y:function(t){return this.attr("y",t)},cx:function(t){return null==t?this.x()+this.width()/2:this.x(t-this.width()/2)},cy:function(t){return null==t?this.y()+this.height()/2:this.y(t-this.height()/2)},move:function(t,e){return this.x(t).y(e)},center:function(t,e){return this.cx(t).cy(e)},width:function(t){return this.attr("width",t)},height:function(t){return this.attr("height",t)},size:function(t,e){var i=d(this,t,e);return this.width(new n.Number(i.width)).height(new n.Number(i.height))},clone:function(t){this.writeDataToDom();var e=m(this.node.cloneNode(!0));return t?t.add(e):this.after(e),e},remove:function(){return this.parent()&&this.parent().removeElement(this),this},replace:function(t){return this.after(t).remove(),t},addTo:function(t){return t.put(this)},putIn:function(t){return t.add(this)},id:function(t){return this.attr("id",t)},show:function(){return this.style("display","")},hide:function(){return this.style("display","none")},visible:function(){return"none"!=this.style("display")},toString:function(){return this.attr("id")},classes:function(){var t=this.attr("class");return null==t?[]:t.trim().split(n.regex.delimiter)},hasClass:function(t){return-1!=this.classes().indexOf(t)},addClass:function(t){if(!this.hasClass(t)){var e=this.classes();e.push(t),this.attr("class",e.join(" "))}return this},removeClass:function(t){return this.hasClass(t)&&this.attr("class",this.classes().filter((function(e){return e!=t})).join(" ")),this},toggleClass:function(t){return this.hasClass(t)?this.removeClass(t):this.addClass(t)},reference:function(t){return n.get(this.attr(t))},parent:function(e){var i=this;if(!i.node.parentNode)return null;if(i=n.adopt(i.node.parentNode),!e)return i;for(;i&&i.node instanceof t.SVGElement;){if("string"==typeof e?i.matches(e):i instanceof e)return i;if(!i.node.parentNode||"#document"==i.node.parentNode.nodeName)return null;i=n.adopt(i.node.parentNode)}},doc:function(){return this instanceof n.Doc?this:this.parent(n.Doc)},parents:function(t){var e=[],n=this;do{if(!(n=n.parent(t))||!n.node)break;e.push(n)}while(n.parent);return e},matches:function(t){return function(t,e){return(t.matches||t.matchesSelector||t.msMatchesSelector||t.mozMatchesSelector||t.webkitMatchesSelector||t.oMatchesSelector).call(t,e)}(this.node,t)},native:function(){return this.node},svg:function(t){var i=e.createElement("svg");if(!(t&&this instanceof n.Parent))return i.appendChild(t=e.createElement("svg")),this.writeDataToDom(),t.appendChild(this.node.cloneNode(!0)),i.innerHTML.replace(/^<svg>/,"").replace(/<\/svg>$/,"");i.innerHTML="<svg>"+t.replace(/\n/,"").replace(/<([\w:-]+)([^<]+?)\/>/g,"<$1$2></$1>")+"</svg>";for(var r=0,a=i.firstChild.childNodes.length;r<a;r++)this.node.appendChild(i.firstChild.firstChild);return this},writeDataToDom:function(){return(this.each||this.lines)&&(this.each?this:this.lines()).each((function(){this.writeDataToDom()})),this.node.removeAttribute("svgjs:data"),Object.keys(this.dom).length&&this.node.setAttribute("svgjs:data",JSON.stringify(this.dom)),this},setData:function(t){return this.dom=t,this},is:function(t){return function(t,e){return t instanceof e}(this,t)}}}),n.easing={"-":function(t){return t},"<>":function(t){return-Math.cos(t*Math.PI)/2+.5},">":function(t){return Math.sin(t*Math.PI/2)},"<":function(t){return 1-Math.cos(t*Math.PI/2)}},n.morph=function(t){return function(e,i){return new n.MorphObj(e,i).at(t)}},n.Situation=n.invent({create:function(t){this.init=!1,this.reversed=!1,this.reversing=!1,this.duration=new n.Number(t.duration).valueOf(),this.delay=new n.Number(t.delay).valueOf(),this.start=+new Date+this.delay,this.finish=this.start+this.duration,this.ease=t.ease,this.loop=0,this.loops=!1,this.animations={},this.attrs={},this.styles={},this.transforms=[],this.once={}}}),n.FX=n.invent({create:function(t){this._target=t,this.situations=[],this.active=!1,this.situation=null,this.paused=!1,this.lastPos=0,this.pos=0,this.absPos=0,this._speed=1},extend:{animate:function(t,e,i){"object"===r(t)&&(e=t.ease,i=t.delay,t=t.duration);var a=new n.Situation({duration:t||1e3,delay:i||0,ease:n.easing[e||"-"]||e});return this.queue(a),this},target:function(t){return t&&t instanceof n.Element?(this._target=t,this):this._target},timeToAbsPos:function(t){return(t-this.situation.start)/(this.situation.duration/this._speed)},absPosToTime:function(t){return this.situation.duration/this._speed*t+this.situation.start},startAnimFrame:function(){this.stopAnimFrame(),this.animationFrame=t.requestAnimationFrame(function(){this.step()}.bind(this))},stopAnimFrame:function(){t.cancelAnimationFrame(this.animationFrame)},start:function(){return!this.active&&this.situation&&(this.active=!0,this.startCurrent()),this},startCurrent:function(){return this.situation.start=+new Date+this.situation.delay/this._speed,this.situation.finish=this.situation.start+this.situation.duration/this._speed,this.initAnimations().step()},queue:function(t){return("function"==typeof t||t instanceof n.Situation)&&this.situations.push(t),this.situation||(this.situation=this.situations.shift()),this},dequeue:function(){return this.stop(),this.situation=this.situations.shift(),this.situation&&(this.situation instanceof n.Situation?this.start():this.situation.call(this)),this},initAnimations:function(){var t,e=this.situation;if(e.init)return this;for(var i in e.animations){t=this.target()[i](),Array.isArray(t)||(t=[t]),Array.isArray(e.animations[i])||(e.animations[i]=[e.animations[i]]);for(var r=t.length;r--;)e.animations[i][r]instanceof n.Number&&(t[r]=new n.Number(t[r])),e.animations[i][r]=t[r].morph(e.animations[i][r])}for(var i in e.attrs)e.attrs[i]=new n.MorphObj(this.target().attr(i),e.attrs[i]);for(var i in e.styles)e.styles[i]=new n.MorphObj(this.target().style(i),e.styles[i]);return e.initialTransformation=this.target().matrixify(),e.init=!0,this},clearQueue:function(){return this.situations=[],this},clearCurrent:function(){return this.situation=null,this},stop:function(t,e){var n=this.active;return this.active=!1,e&&this.clearQueue(),t&&this.situation&&(!n&&this.startCurrent(),this.atEnd()),this.stopAnimFrame(),this.clearCurrent()},after:function(t){var e=this.last();return this.target().on("finished.fx",(function n(i){i.detail.situation==e&&(t.call(this,e),this.off("finished.fx",n))})),this._callStart()},during:function(t){var e=this.last(),i=function(i){i.detail.situation==e&&t.call(this,i.detail.pos,n.morph(i.detail.pos),i.detail.eased,e)};return this.target().off("during.fx",i).on("during.fx",i),this.after((function(){this.off("during.fx",i)})),this._callStart()},afterAll:function(t){var e=function e(n){t.call(this),this.off("allfinished.fx",e)};return this.target().off("allfinished.fx",e).on("allfinished.fx",e),this._callStart()},last:function(){return this.situations.length?this.situations[this.situations.length-1]:this.situation},add:function(t,e,n){return this.last()[n||"animations"][t]=e,this._callStart()},step:function(t){var e,n,i;t||(this.absPos=this.timeToAbsPos(+new Date)),!1!==this.situation.loops?(e=Math.max(this.absPos,0),n=Math.floor(e),!0===this.situation.loops||n<this.situation.loops?(this.pos=e-n,i=this.situation.loop,this.situation.loop=n):(this.absPos=this.situation.loops,this.pos=1,i=this.situation.loop-1,this.situation.loop=this.situation.loops),this.situation.reversing&&(this.situation.reversed=this.situation.reversed!=Boolean((this.situation.loop-i)%2))):(this.absPos=Math.min(this.absPos,1),this.pos=this.absPos),this.pos<0&&(this.pos=0),this.situation.reversed&&(this.pos=1-this.pos);var r=this.situation.ease(this.pos);for(var a in this.situation.once)a>this.lastPos&&a<=r&&(this.situation.once[a].call(this.target(),this.pos,r),delete this.situation.once[a]);return this.active&&this.target().fire("during",{pos:this.pos,eased:r,fx:this,situation:this.situation}),this.situation?(this.eachAt(),1==this.pos&&!this.situation.reversed||this.situation.reversed&&0==this.pos?(this.stopAnimFrame(),this.target().fire("finished",{fx:this,situation:this.situation}),this.situations.length||(this.target().fire("allfinished"),this.situations.length||(this.target().off(".fx"),this.active=!1)),this.active?this.dequeue():this.clearCurrent()):!this.paused&&this.active&&this.startAnimFrame(),this.lastPos=r,this):this},eachAt:function(){var t,e=this,i=this.target(),r=this.situation;for(var a in r.animations)t=[].concat(r.animations[a]).map((function(t){return"string"!=typeof t&&t.at?t.at(r.ease(e.pos),e.pos):t})),i[a].apply(i,t);for(var a in r.attrs)t=[a].concat(r.attrs[a]).map((function(t){return"string"!=typeof t&&t.at?t.at(r.ease(e.pos),e.pos):t})),i.attr.apply(i,t);for(var a in r.styles)t=[a].concat(r.styles[a]).map((function(t){return"string"!=typeof t&&t.at?t.at(r.ease(e.pos),e.pos):t})),i.style.apply(i,t);if(r.transforms.length){t=r.initialTransformation,a=0;for(var o=r.transforms.length;a<o;a++){var s=r.transforms[a];s instanceof n.Matrix?t=s.relative?t.multiply((new n.Matrix).morph(s).at(r.ease(this.pos))):t.morph(s).at(r.ease(this.pos)):(s.relative||s.undo(t.extract()),t=t.multiply(s.at(r.ease(this.pos))))}i.matrix(t)}return this},once:function(t,e,n){var i=this.last();return n||(t=i.ease(t)),i.once[t]=e,this},_callStart:function(){return setTimeout(function(){this.start()}.bind(this),0),this}},parent:n.Element,construct:{animate:function(t,e,i){return(this.fx||(this.fx=new n.FX(this))).animate(t,e,i)},delay:function(t){return(this.fx||(this.fx=new n.FX(this))).delay(t)},stop:function(t,e){return this.fx&&this.fx.stop(t,e),this},finish:function(){return this.fx&&this.fx.finish(),this}}}),n.MorphObj=n.invent({create:function(t,e){return n.Color.isColor(e)?new n.Color(t).morph(e):n.regex.delimiter.test(t)?n.regex.pathLetters.test(t)?new n.PathArray(t).morph(e):new n.Array(t).morph(e):n.regex.numberAndUnit.test(e)?new n.Number(t).morph(e):(this.value=t,void(this.destination=e))},extend:{at:function(t,e){return e<1?this.value:this.destination},valueOf:function(){return this.value}}}),n.extend(n.FX,{attr:function(t,e,n){if("object"===r(t))for(var i in t)this.attr(i,t[i]);else this.add(t,e,"attrs");return this},plot:function(t,e,n,i){return 4==arguments.length?this.plot([t,e,n,i]):this.add("plot",new(this.target().morphArray)(t))}}),n.Box=n.invent({create:function(t,e,i,a){if(!("object"!==r(t)||t instanceof n.Element))return n.Box.call(this,null!=t.left?t.left:t.x,null!=t.top?t.top:t.y,t.width,t.height);4==arguments.length&&(this.x=t,this.y=e,this.width=i,this.height=a),v(this)}}),n.BBox=n.invent({create:function(t){if(n.Box.apply(this,[].slice.call(arguments)),t instanceof n.Element){var i;try{if(!e.documentElement.contains){for(var r=t.node;r.parentNode;)r=r.parentNode;if(r!=e)throw new Error("Element not in the dom")}i=t.node.getBBox()}catch(e){if(t instanceof n.Shape){n.parser.draw||n.prepare();var a=t.clone(n.parser.draw.instance).show();i=a.node.getBBox(),a.remove()}else i={x:t.node.clientLeft,y:t.node.clientTop,width:t.node.clientWidth,height:t.node.clientHeight}}n.Box.call(this,i)}},inherit:n.Box,parent:n.Element,construct:{bbox:function(){return new n.BBox(this)}}}),n.BBox.prototype.constructor=n.BBox,n.Matrix=n.invent({create:function(t){var e=g([1,0,0,1,0,0]);t=t instanceof n.Element?t.matrixify():"string"==typeof t?g(t.split(n.regex.delimiter).map(parseFloat)):6==arguments.length?g([].slice.call(arguments)):Array.isArray(t)?g(t):"object"===r(t)?t:e;for(var i=b.length-1;i>=0;--i)this[b[i]]=null!=t[b[i]]?t[b[i]]:e[b[i]]},extend:{extract:function(){var t=p(this,0,1),e=(p(this,1,0),180/Math.PI*Math.atan2(t.y,t.x)-90);return{x:this.e,y:this.f,transformedX:(this.e*Math.cos(e*Math.PI/180)+this.f*Math.sin(e*Math.PI/180))/Math.sqrt(this.a*this.a+this.b*this.b),transformedY:(this.f*Math.cos(e*Math.PI/180)+this.e*Math.sin(-e*Math.PI/180))/Math.sqrt(this.c*this.c+this.d*this.d),rotation:e,a:this.a,b:this.b,c:this.c,d:this.d,e:this.e,f:this.f,matrix:new n.Matrix(this)}},clone:function(){return new n.Matrix(this)},morph:function(t){return this.destination=new n.Matrix(t),this},multiply:function(t){return new n.Matrix(this.native().multiply(function(t){return t instanceof n.Matrix||(t=new n.Matrix(t)),t}(t).native()))},inverse:function(){return new n.Matrix(this.native().inverse())},translate:function(t,e){return new n.Matrix(this.native().translate(t||0,e||0))},native:function(){for(var t=n.parser.native.createSVGMatrix(),e=b.length-1;e>=0;e--)t[b[e]]=this[b[e]];return t},toString:function(){return"matrix("+x(this.a)+","+x(this.b)+","+x(this.c)+","+x(this.d)+","+x(this.e)+","+x(this.f)+")"}},parent:n.Element,construct:{ctm:function(){return new n.Matrix(this.node.getCTM())},screenCTM:function(){if(this instanceof n.Nested){var t=this.rect(1,1),e=t.node.getScreenCTM();return t.remove(),new n.Matrix(e)}return new n.Matrix(this.node.getScreenCTM())}}}),n.Point=n.invent({create:function(t,e){var n;n=Array.isArray(t)?{x:t[0],y:t[1]}:"object"===r(t)?{x:t.x,y:t.y}:null!=t?{x:t,y:null!=e?e:t}:{x:0,y:0},this.x=n.x,this.y=n.y},extend:{clone:function(){return new n.Point(this)},morph:function(t,e){return this.destination=new n.Point(t,e),this}}}),n.extend(n.Element,{point:function(t,e){return new n.Point(t,e).transform(this.screenCTM().inverse())}}),n.extend(n.Element,{attr:function(t,e,i){if(null==t){for(t={},i=(e=this.node.attributes).length-1;i>=0;i--)t[e[i].nodeName]=n.regex.isNumber.test(e[i].nodeValue)?parseFloat(e[i].nodeValue):e[i].nodeValue;return t}if("object"===r(t))for(var a in t)this.attr(a,t[a]);else if(null===e)this.node.removeAttribute(t);else{if(null==e)return null==(e=this.node.getAttribute(t))?n.defaults.attrs[t]:n.regex.isNumber.test(e)?parseFloat(e):e;"stroke-width"==t?this.attr("stroke",parseFloat(e)>0?this._stroke:null):"stroke"==t&&(this._stroke=e),"fill"!=t&&"stroke"!=t||(n.regex.isImage.test(e)&&(e=this.doc().defs().image(e,0,0)),e instanceof n.Image&&(e=this.doc().defs().pattern(0,0,(function(){this.add(e)})))),"number"==typeof e?e=new n.Number(e):n.Color.isColor(e)?e=new n.Color(e):Array.isArray(e)&&(e=new n.Array(e)),"leading"==t?this.leading&&this.leading(e):"string"==typeof i?this.node.setAttributeNS(i,t,e.toString()):this.node.setAttribute(t,e.toString()),!this.rebuild||"font-size"!=t&&"x"!=t||this.rebuild(t,e)}return this}}),n.extend(n.Element,{transform:function(t,e){var i;return"object"!==r(t)?(i=new n.Matrix(this).extract(),"string"==typeof t?i[t]:i):(i=new n.Matrix(this),e=!!e||!!t.relative,null!=t.a&&(i=e?i.multiply(new n.Matrix(t)):new n.Matrix(t)),this.attr("transform",i))}}),n.extend(n.Element,{untransform:function(){return this.attr("transform",null)},matrixify:function(){return(this.attr("transform")||"").split(n.regex.transforms).slice(0,-1).map((function(t){var e=t.trim().split("(");return[e[0],e[1].split(n.regex.delimiter).map((function(t){return parseFloat(t)}))]})).reduce((function(t,e){return"matrix"==e[0]?t.multiply(g(e[1])):t[e[0]].apply(t,e[1])}),new n.Matrix)},toParent:function(t){if(this==t)return this;var e=this.screenCTM(),n=t.screenCTM().inverse();return this.addTo(t).untransform().transform(n.multiply(e)),this},toDoc:function(){return this.toParent(this.doc())}}),n.Transformation=n.invent({create:function(t,e){if(arguments.length>1&&"boolean"!=typeof e)return this.constructor.call(this,[].slice.call(arguments));if(Array.isArray(t))for(var n=0,i=this.arguments.length;n<i;++n)this[this.arguments[n]]=t[n];else if("object"===r(t))for(n=0,i=this.arguments.length;n<i;++n)this[this.arguments[n]]=t[this.arguments[n]];this.inversed=!1,!0===e&&(this.inversed=!0)}}),n.Translate=n.invent({parent:n.Matrix,inherit:n.Transformation,create:function(t,e){this.constructor.apply(this,[].slice.call(arguments))},extend:{arguments:["transformedX","transformedY"],method:"translate"}}),n.extend(n.Element,{style:function(t,e){if(0==arguments.length)return this.node.style.cssText||"";if(arguments.length<2)if("object"===r(t))for(var i in t)this.style(i,t[i]);else{if(!n.regex.isCss.test(t))return this.node.style[u(t)];for(t=t.split(/\s*;\s*/).filter((function(t){return!!t})).map((function(t){return t.split(/\s*:\s*/)}));e=t.pop();)this.style(e[0],e[1])}else this.node.style[u(t)]=null===e||n.regex.isBlank.test(e)?"":e;return this}}),n.Parent=n.invent({create:function(t){this.constructor.call(this,t)},inherit:n.Element,extend:{children:function(){return n.utils.map(n.utils.filterSVGElements(this.node.childNodes),(function(t){return n.adopt(t)}))},add:function(t,e){return null==e?this.node.appendChild(t.node):t.node!=this.node.childNodes[e]&&this.node.insertBefore(t.node,this.node.childNodes[e]),this},put:function(t,e){return this.add(t,e),t},has:function(t){return this.index(t)>=0},index:function(t){return[].slice.call(this.node.childNodes).indexOf(t.node)},get:function(t){return n.adopt(this.node.childNodes[t])},first:function(){return this.get(0)},last:function(){return this.get(this.node.childNodes.length-1)},each:function(t,e){for(var i=this.children(),r=0,a=i.length;r<a;r++)i[r]instanceof n.Element&&t.apply(i[r],[r,i]),e&&i[r]instanceof n.Container&&i[r].each(t,e);return this},removeElement:function(t){return this.node.removeChild(t.node),this},clear:function(){for(;this.node.hasChildNodes();)this.node.removeChild(this.node.lastChild);return delete this._defs,this},defs:function(){return this.doc().defs()}}}),n.extend(n.Parent,{ungroup:function(t,e){return 0===e||this instanceof n.Defs||this.node==n.parser.draw||(t=t||(this instanceof n.Doc?this:this.parent(n.Parent)),e=e||1/0,this.each((function(){return this instanceof n.Defs?this:this instanceof n.Parent?this.ungroup(t,e-1):this.toParent(t)})),this.node.firstChild||this.remove()),this},flatten:function(t,e){return this.ungroup(t,e)}}),n.Container=n.invent({create:function(t){this.constructor.call(this,t)},inherit:n.Parent}),n.ViewBox=n.invent({parent:n.Container,construct:{}}),["click","dblclick","mousedown","mouseup","mouseover","mouseout","mousemove","touchstart","touchmove","touchleave","touchend","touchcancel"].forEach((function(t){n.Element.prototype[t]=function(e){return n.on(this.node,t,e),this}})),n.listeners=[],n.handlerMap=[],n.listenerId=0,n.on=function(t,e,i,r,a){var o=i.bind(r||t.instance||t),s=(n.handlerMap.indexOf(t)+1||n.handlerMap.push(t))-1,l=e.split(".")[0],c=e.split(".")[1]||"*";n.listeners[s]=n.listeners[s]||{},n.listeners[s][l]=n.listeners[s][l]||{},n.listeners[s][l][c]=n.listeners[s][l][c]||{},i._svgjsListenerId||(i._svgjsListenerId=++n.listenerId),n.listeners[s][l][c][i._svgjsListenerId]=o,t.addEventListener(l,o,a||!1)},n.off=function(t,e,i){var r=n.handlerMap.indexOf(t),a=e&&e.split(".")[0],o=e&&e.split(".")[1],s="";if(-1!=r)if(i){if("function"==typeof i&&(i=i._svgjsListenerId),!i)return;n.listeners[r][a]&&n.listeners[r][a][o||"*"]&&(t.removeEventListener(a,n.listeners[r][a][o||"*"][i],!1),delete n.listeners[r][a][o||"*"][i])}else if(o&&a){if(n.listeners[r][a]&&n.listeners[r][a][o]){for(var l in n.listeners[r][a][o])n.off(t,[a,o].join("."),l);delete n.listeners[r][a][o]}}else if(o)for(var c in n.listeners[r])for(var s in n.listeners[r][c])o===s&&n.off(t,[c,o].join("."));else if(a){if(n.listeners[r][a]){for(var s in n.listeners[r][a])n.off(t,[a,s].join("."));delete n.listeners[r][a]}}else{for(var c in n.listeners[r])n.off(t,c);delete n.listeners[r],delete n.handlerMap[r]}},n.extend(n.Element,{on:function(t,e,i,r){return n.on(this.node,t,e,i,r),this},off:function(t,e){return n.off(this.node,t,e),this},fire:function(e,i){return e instanceof t.Event?this.node.dispatchEvent(e):this.node.dispatchEvent(e=new n.CustomEvent(e,{detail:i,cancelable:!0})),this._event=e,this},event:function(){return this._event}}),n.Defs=n.invent({create:"defs",inherit:n.Container}),n.G=n.invent({create:"g",inherit:n.Container,extend:{x:function(t){return null==t?this.transform("x"):this.transform({x:t-this.x()},!0)}},construct:{group:function(){return this.put(new n.G)}}}),n.Doc=n.invent({create:function(t){t&&("svg"==(t="string"==typeof t?e.getElementById(t):t).nodeName?this.constructor.call(this,t):(this.constructor.call(this,n.create("svg")),t.appendChild(this.node),this.size("100%","100%")),this.namespace().defs())},inherit:n.Container,extend:{namespace:function(){return this.attr({xmlns:n.ns,version:"1.1"}).attr("xmlns:xlink",n.xlink,n.xmlns).attr("xmlns:svgjs",n.svgjs,n.xmlns)},defs:function(){var t;return this._defs||((t=this.node.getElementsByTagName("defs")[0])?this._defs=n.adopt(t):this._defs=new n.Defs,this.node.appendChild(this._defs.node)),this._defs},parent:function(){return this.node.parentNode&&"#document"!=this.node.parentNode.nodeName?this.node.parentNode:null},remove:function(){return this.parent()&&this.parent().removeChild(this.node),this},clear:function(){for(;this.node.hasChildNodes();)this.node.removeChild(this.node.lastChild);return delete this._defs,n.parser.draw&&!n.parser.draw.parentNode&&this.node.appendChild(n.parser.draw),this},clone:function(t){this.writeDataToDom();var e=this.node,n=m(e.cloneNode(!0));return t?(t.node||t).appendChild(n.node):e.parentNode.insertBefore(n.node,e.nextSibling),n}}}),n.extend(n.Element,{}),n.Gradient=n.invent({create:function(t){this.constructor.call(this,n.create(t+"Gradient")),this.type=t},inherit:n.Container,extend:{at:function(t,e,i){return this.put(new n.Stop).update(t,e,i)},update:function(t){return this.clear(),"function"==typeof t&&t.call(this,this),this},fill:function(){return"url(#"+this.id()+")"},toString:function(){return this.fill()},attr:function(t,e,i){return"transform"==t&&(t="gradientTransform"),n.Container.prototype.attr.call(this,t,e,i)}},construct:{gradient:function(t,e){return this.defs().gradient(t,e)}}}),n.extend(n.Gradient,n.FX,{from:function(t,e){return"radial"==(this._target||this).type?this.attr({fx:new n.Number(t),fy:new n.Number(e)}):this.attr({x1:new n.Number(t),y1:new n.Number(e)})},to:function(t,e){return"radial"==(this._target||this).type?this.attr({cx:new n.Number(t),cy:new n.Number(e)}):this.attr({x2:new n.Number(t),y2:new n.Number(e)})}}),n.extend(n.Defs,{gradient:function(t,e){return this.put(new n.Gradient(t)).update(e)}}),n.Stop=n.invent({create:"stop",inherit:n.Element,extend:{update:function(t){return("number"==typeof t||t instanceof n.Number)&&(t={offset:arguments[0],color:arguments[1],opacity:arguments[2]}),null!=t.opacity&&this.attr("stop-opacity",t.opacity),null!=t.color&&this.attr("stop-color",t.color),null!=t.offset&&this.attr("offset",new n.Number(t.offset)),this}}}),n.Pattern=n.invent({create:"pattern",inherit:n.Container,extend:{fill:function(){return"url(#"+this.id()+")"},update:function(t){return this.clear(),"function"==typeof t&&t.call(this,this),this},toString:function(){return this.fill()},attr:function(t,e,i){return"transform"==t&&(t="patternTransform"),n.Container.prototype.attr.call(this,t,e,i)}},construct:{pattern:function(t,e,n){return this.defs().pattern(t,e,n)}}}),n.extend(n.Defs,{pattern:function(t,e,i){return this.put(new n.Pattern).update(i).attr({x:0,y:0,width:t,height:e,patternUnits:"userSpaceOnUse"})}}),n.Shape=n.invent({create:function(t){this.constructor.call(this,t)},inherit:n.Element}),n.Symbol=n.invent({create:"symbol",inherit:n.Container,construct:{symbol:function(){return this.put(new n.Symbol)}}}),n.Use=n.invent({create:"use",inherit:n.Shape,extend:{element:function(t,e){return this.attr("href",(e||"")+"#"+t,n.xlink)}},construct:{use:function(t,e){return this.put(new n.Use).element(t,e)}}}),n.Rect=n.invent({create:"rect",inherit:n.Shape,construct:{rect:function(t,e){return this.put(new n.Rect).size(t,e)}}}),n.Circle=n.invent({create:"circle",inherit:n.Shape,construct:{circle:function(t){return this.put(new n.Circle).rx(new n.Number(t).divide(2)).move(0,0)}}}),n.extend(n.Circle,n.FX,{rx:function(t){return this.attr("r",t)},ry:function(t){return this.rx(t)}}),n.Ellipse=n.invent({create:"ellipse",inherit:n.Shape,construct:{ellipse:function(t,e){return this.put(new n.Ellipse).size(t,e).move(0,0)}}}),n.extend(n.Ellipse,n.Rect,n.FX,{rx:function(t){return this.attr("rx",t)},ry:function(t){return this.attr("ry",t)}}),n.extend(n.Circle,n.Ellipse,{x:function(t){return null==t?this.cx()-this.rx():this.cx(t+this.rx())},y:function(t){return null==t?this.cy()-this.ry():this.cy(t+this.ry())},cx:function(t){return null==t?this.attr("cx"):this.attr("cx",t)},cy:function(t){return null==t?this.attr("cy"):this.attr("cy",t)},width:function(t){return null==t?2*this.rx():this.rx(new n.Number(t).divide(2))},height:function(t){return null==t?2*this.ry():this.ry(new n.Number(t).divide(2))},size:function(t,e){var i=d(this,t,e);return this.rx(new n.Number(i.width).divide(2)).ry(new n.Number(i.height).divide(2))}}),n.Line=n.invent({create:"line",inherit:n.Shape,extend:{array:function(){return new n.PointArray([[this.attr("x1"),this.attr("y1")],[this.attr("x2"),this.attr("y2")]])},plot:function(t,e,i,r){return null==t?this.array():(t=void 0!==e?{x1:t,y1:e,x2:i,y2:r}:new n.PointArray(t).toLine(),this.attr(t))},move:function(t,e){return this.attr(this.array().move(t,e).toLine())},size:function(t,e){var n=d(this,t,e);return this.attr(this.array().size(n.width,n.height).toLine())}},construct:{line:function(t,e,i,r){return n.Line.prototype.plot.apply(this.put(new n.Line),null!=t?[t,e,i,r]:[0,0,0,0])}}}),n.Polyline=n.invent({create:"polyline",inherit:n.Shape,construct:{polyline:function(t){return this.put(new n.Polyline).plot(t||new n.PointArray)}}}),n.Polygon=n.invent({create:"polygon",inherit:n.Shape,construct:{polygon:function(t){return this.put(new n.Polygon).plot(t||new n.PointArray)}}}),n.extend(n.Polyline,n.Polygon,{array:function(){return this._array||(this._array=new n.PointArray(this.attr("points")))},plot:function(t){return null==t?this.array():this.clear().attr("points","string"==typeof t?t:this._array=new n.PointArray(t))},clear:function(){return delete this._array,this},move:function(t,e){return this.attr("points",this.array().move(t,e))},size:function(t,e){var n=d(this,t,e);return this.attr("points",this.array().size(n.width,n.height))}}),n.extend(n.Line,n.Polyline,n.Polygon,{morphArray:n.PointArray,x:function(t){return null==t?this.bbox().x:this.move(t,this.bbox().y)},y:function(t){return null==t?this.bbox().y:this.move(this.bbox().x,t)},width:function(t){var e=this.bbox();return null==t?e.width:this.size(t,e.height)},height:function(t){var e=this.bbox();return null==t?e.height:this.size(e.width,t)}}),n.Path=n.invent({create:"path",inherit:n.Shape,extend:{morphArray:n.PathArray,array:function(){return this._array||(this._array=new n.PathArray(this.attr("d")))},plot:function(t){return null==t?this.array():this.clear().attr("d","string"==typeof t?t:this._array=new n.PathArray(t))},clear:function(){return delete this._array,this}},construct:{path:function(t){return this.put(new n.Path).plot(t||new n.PathArray)}}}),n.Image=n.invent({create:"image",inherit:n.Shape,extend:{load:function(e){if(!e)return this;var i=this,r=new t.Image;return n.on(r,"load",(function(){n.off(r);var t=i.parent(n.Pattern);null!==t&&(0==i.width()&&0==i.height()&&i.size(r.width,r.height),t&&0==t.width()&&0==t.height()&&t.size(i.width(),i.height()),"function"==typeof i._loaded&&i._loaded.call(i,{width:r.width,height:r.height,ratio:r.width/r.height,url:e}))})),n.on(r,"error",(function(t){n.off(r),"function"==typeof i._error&&i._error.call(i,t)})),this.attr("href",r.src=this.src=e,n.xlink)},loaded:function(t){return this._loaded=t,this},error:function(t){return this._error=t,this}},construct:{image:function(t,e,i){return this.put(new n.Image).load(t).size(e||0,i||e||0)}}}),n.Text=n.invent({create:function(){this.constructor.call(this,n.create("text")),this.dom.leading=new n.Number(1.3),this._rebuild=!0,this._build=!1,this.attr("font-family",n.defaults.attrs["font-family"])},inherit:n.Shape,extend:{x:function(t){return null==t?this.attr("x"):this.attr("x",t)},text:function(t){if(void 0===t){t="";for(var e=this.node.childNodes,i=0,r=e.length;i<r;++i)0!=i&&3!=e[i].nodeType&&1==n.adopt(e[i]).dom.newLined&&(t+="\n"),t+=e[i].textContent;return t}if(this.clear().build(!0),"function"==typeof t)t.call(this,this);else{i=0;for(var a=(t=t.split("\n")).length;i<a;i++)this.tspan(t[i]).newLine()}return this.build(!1).rebuild()},size:function(t){return this.attr("font-size",t).rebuild()},leading:function(t){return null==t?this.dom.leading:(this.dom.leading=new n.Number(t),this.rebuild())},lines:function(){var t=(this.textPath&&this.textPath()||this).node,e=n.utils.map(n.utils.filterSVGElements(t.childNodes),(function(t){return n.adopt(t)}));return new n.Set(e)},rebuild:function(t){if("boolean"==typeof t&&(this._rebuild=t),this._rebuild){var e=this,i=0,r=this.dom.leading*new n.Number(this.attr("font-size"));this.lines().each((function(){this.dom.newLined&&(e.textPath()||this.attr("x",e.attr("x")),"\n"==this.text()?i+=r:(this.attr("dy",r+i),i=0))})),this.fire("rebuild")}return this},build:function(t){return this._build=!!t,this},setData:function(t){return this.dom=t,this.dom.leading=new n.Number(t.leading||1.3),this}},construct:{text:function(t){return this.put(new n.Text).text(t)},plain:function(t){return this.put(new n.Text).plain(t)}}}),n.Tspan=n.invent({create:"tspan",inherit:n.Shape,extend:{text:function(t){return null==t?this.node.textContent+(this.dom.newLined?"\n":""):("function"==typeof t?t.call(this,this):this.plain(t),this)},dx:function(t){return this.attr("dx",t)},dy:function(t){return this.attr("dy",t)},newLine:function(){var t=this.parent(n.Text);return this.dom.newLined=!0,this.dy(t.dom.leading*t.attr("font-size")).attr("x",t.x())}}}),n.extend(n.Text,n.Tspan,{plain:function(t){return!1===this._build&&this.clear(),this.node.appendChild(e.createTextNode(t)),this},tspan:function(t){var e=(this.textPath&&this.textPath()||this).node,i=new n.Tspan;return!1===this._build&&this.clear(),e.appendChild(i.node),i.text(t)},clear:function(){for(var t=(this.textPath&&this.textPath()||this).node;t.hasChildNodes();)t.removeChild(t.lastChild);return this},length:function(){return this.node.getComputedTextLength()}}),n.TextPath=n.invent({create:"textPath",inherit:n.Parent,parent:n.Text,construct:{morphArray:n.PathArray,array:function(){var t=this.track();return t?t.array():null},plot:function(t){var e=this.track(),n=null;return e&&(n=e.plot(t)),null==t?n:this},track:function(){var t=this.textPath();if(t)return t.reference("href")},textPath:function(){if(this.node.firstChild&&"textPath"==this.node.firstChild.nodeName)return n.adopt(this.node.firstChild)}}}),n.Nested=n.invent({create:function(){this.constructor.call(this,n.create("svg")),this.style("overflow","visible")},inherit:n.Container,construct:{nested:function(){return this.put(new n.Nested)}}});var l={stroke:["color","width","opacity","linecap","linejoin","miterlimit","dasharray","dashoffset"],fill:["color","opacity","rule"],prefix:function(t,e){return"color"==e?t:t+"-"+e}};function c(t,e,i,r){return i+r.replace(n.regex.dots," .")}function u(t){return t.toLowerCase().replace(/-(.)/g,(function(t,e){return e.toUpperCase()}))}function h(t){return t.charAt(0).toUpperCase()+t.slice(1)}function f(t){var e=t.toString(16);return 1==e.length?"0"+e:e}function d(t,e,n){if(null==e||null==n){var i=t.bbox();null==e?e=i.width/i.height*n:null==n&&(n=i.height/i.width*e)}return{width:e,height:n}}function p(t,e,n){return{x:e*t.a+n*t.c+0,y:e*t.b+n*t.d+0}}function g(t){return{a:t[0],b:t[1],c:t[2],d:t[3],e:t[4],f:t[5]}}function m(e){for(var i=e.childNodes.length-1;i>=0;i--)e.childNodes[i]instanceof t.SVGElement&&m(e.childNodes[i]);return n.adopt(e).id(n.eid(e.nodeName))}function v(t){return null==t.x&&(t.x=0,t.y=0,t.width=0,t.height=0),t.w=t.width,t.h=t.height,t.x2=t.x+t.width,t.y2=t.y+t.height,t.cx=t.x+t.width/2,t.cy=t.y+t.height/2,t}function x(t){return Math.abs(t)>1e-37?t:0}["fill","stroke"].forEach((function(t){var e={};e[t]=function(e){if(void 0===e)return this;if("string"==typeof e||n.Color.isRgb(e)||e&&"function"==typeof e.fill)this.attr(t,e);else for(var i=l[t].length-1;i>=0;i--)null!=e[l[t][i]]&&this.attr(l.prefix(t,l[t][i]),e[l[t][i]]);return this},n.extend(n.Element,n.FX,e)})),n.extend(n.Element,n.FX,{translate:function(t,e){return this.transform({x:t,y:e})},matrix:function(t){return this.attr("transform",new n.Matrix(6==arguments.length?[].slice.call(arguments):t))},opacity:function(t){return this.attr("opacity",t)},dx:function(t){return this.x(new n.Number(t).plus(this instanceof n.FX?0:this.x()),!0)},dy:function(t){return this.y(new n.Number(t).plus(this instanceof n.FX?0:this.y()),!0)}}),n.extend(n.Path,{length:function(){return this.node.getTotalLength()},pointAt:function(t){return this.node.getPointAtLength(t)}}),n.Set=n.invent({create:function(t){Array.isArray(t)?this.members=t:this.clear()},extend:{add:function(){for(var t=[].slice.call(arguments),e=0,n=t.length;e<n;e++)this.members.push(t[e]);return this},remove:function(t){var e=this.index(t);return e>-1&&this.members.splice(e,1),this},each:function(t){for(var e=0,n=this.members.length;e<n;e++)t.apply(this.members[e],[e,this.members]);return this},clear:function(){return this.members=[],this},length:function(){return this.members.length},has:function(t){return this.index(t)>=0},index:function(t){return this.members.indexOf(t)},get:function(t){return this.members[t]},first:function(){return this.get(0)},last:function(){return this.get(this.members.length-1)},valueOf:function(){return this.members}},construct:{set:function(t){return new n.Set(t)}}}),n.FX.Set=n.invent({create:function(t){this.set=t}}),n.Set.inherit=function(){var t=[];for(var e in n.Shape.prototype)"function"==typeof n.Shape.prototype[e]&&"function"!=typeof n.Set.prototype[e]&&t.push(e);for(var e in t.forEach((function(t){n.Set.prototype[t]=function(){for(var e=0,i=this.members.length;e<i;e++)this.members[e]&&"function"==typeof this.members[e][t]&&this.members[e][t].apply(this.members[e],arguments);return"animate"==t?this.fx||(this.fx=new n.FX.Set(this)):this}})),t=[],n.FX.prototype)"function"==typeof n.FX.prototype[e]&&"function"!=typeof n.FX.Set.prototype[e]&&t.push(e);t.forEach((function(t){n.FX.Set.prototype[t]=function(){for(var e=0,n=this.set.members.length;e<n;e++)this.set.members[e].fx[t].apply(this.set.members[e].fx,arguments);return this}}))},n.extend(n.Element,{}),n.extend(n.Element,{remember:function(t,e){if("object"===r(arguments[0]))for(var n in t)this.remember(n,t[n]);else{if(1==arguments.length)return this.memory()[t];this.memory()[t]=e}return this},forget:function(){if(0==arguments.length)this._memory={};else for(var t=arguments.length-1;t>=0;t--)delete this.memory()[arguments[t]];return this},memory:function(){return this._memory||(this._memory={})}}),n.get=function(t){var i=e.getElementById(function(t){var e=(t||"").toString().match(n.regex.reference);if(e)return e[1]}(t)||t);return n.adopt(i)},n.select=function(t,i){return new n.Set(n.utils.map((i||e).querySelectorAll(t),(function(t){return n.adopt(t)})))},n.extend(n.Parent,{select:function(t){return n.select(t,this.node)}});var b="abcdef".split("");if("function"!=typeof t.CustomEvent){var y=function(t,n){n=n||{bubbles:!1,cancelable:!1,detail:void 0};var i=e.createEvent("CustomEvent");return i.initCustomEvent(t,n.bubbles,n.cancelable,n.detail),i};y.prototype=t.Event.prototype,n.CustomEvent=y}else n.CustomEvent=t.CustomEvent;return n}(S,S.document)}.call(e,n,e,t))||(t.exports=i),function(){SVG.Filter=SVG.invent({create:"filter",inherit:SVG.Parent,extend:{source:"SourceGraphic",sourceAlpha:"SourceAlpha",background:"BackgroundImage",backgroundAlpha:"BackgroundAlpha",fill:"FillPaint",stroke:"StrokePaint",autoSetIn:!0,put:function(t,e){return this.add(t,e),!t.attr("in")&&this.autoSetIn&&t.attr("in",this.source),t.attr("result")||t.attr("result",t),t},blend:function(t,e,n){return this.put(new SVG.BlendEffect(t,e,n))},colorMatrix:function(t,e){return this.put(new SVG.ColorMatrixEffect(t,e))},convolveMatrix:function(t){return this.put(new SVG.ConvolveMatrixEffect(t))},componentTransfer:function(t){return this.put(new SVG.ComponentTransferEffect(t))},composite:function(t,e,n){return this.put(new SVG.CompositeEffect(t,e,n))},flood:function(t,e){return this.put(new SVG.FloodEffect(t,e))},offset:function(t,e){return this.put(new SVG.OffsetEffect(t,e))},image:function(t){return this.put(new SVG.ImageEffect(t))},merge:function(){var t=[void 0];for(var e in arguments)t.push(arguments[e]);return this.put(new(SVG.MergeEffect.bind.apply(SVG.MergeEffect,t)))},gaussianBlur:function(t,e){return this.put(new SVG.GaussianBlurEffect(t,e))},morphology:function(t,e){return this.put(new SVG.MorphologyEffect(t,e))},diffuseLighting:function(t,e,n){return this.put(new SVG.DiffuseLightingEffect(t,e,n))},displacementMap:function(t,e,n,i,r){return this.put(new SVG.DisplacementMapEffect(t,e,n,i,r))},specularLighting:function(t,e,n,i){return this.put(new SVG.SpecularLightingEffect(t,e,n,i))},tile:function(){return this.put(new SVG.TileEffect)},turbulence:function(t,e,n,i,r){return this.put(new SVG.TurbulenceEffect(t,e,n,i,r))},toString:function(){return"url(#"+this.attr("id")+")"}}}),SVG.extend(SVG.Defs,{filter:function(t){var e=this.put(new SVG.Filter);return"function"==typeof t&&t.call(e,e),e}}),SVG.extend(SVG.Container,{filter:function(t){return this.defs().filter(t)}}),SVG.extend(SVG.Element,SVG.G,SVG.Nested,{filter:function(t){return this.filterer=t instanceof SVG.Element?t:this.doc().filter(t),this.doc()&&this.filterer.doc()!==this.doc()&&this.doc().defs().add(this.filterer),this.attr("filter",this.filterer),this.filterer},unfilter:function(t){return this.filterer&&!0===t&&this.filterer.remove(),delete this.filterer,this.attr("filter",null)}}),SVG.Effect=SVG.invent({create:function(){this.constructor.call(this)},inherit:SVG.Element,extend:{in:function(t){return null==t?this.parent()&&this.parent().select('[result="'+this.attr("in")+'"]').get(0)||this.attr("in"):this.attr("in",t)},result:function(t){return null==t?this.attr("result"):this.attr("result",t)},toString:function(){return this.result()}}}),SVG.ParentEffect=SVG.invent({create:function(){this.constructor.call(this)},inherit:SVG.Parent,extend:{in:function(t){return null==t?this.parent()&&this.parent().select('[result="'+this.attr("in")+'"]').get(0)||this.attr("in"):this.attr("in",t)},result:function(t){return null==t?this.attr("result"):this.attr("result",t)},toString:function(){return this.result()}}});var t={blend:function(t,e){return this.parent()&&this.parent().blend(this,t,e)},colorMatrix:function(t,e){return this.parent()&&this.parent().colorMatrix(t,e).in(this)},convolveMatrix:function(t){return this.parent()&&this.parent().convolveMatrix(t).in(this)},componentTransfer:function(t){return this.parent()&&this.parent().componentTransfer(t).in(this)},composite:function(t,e){return this.parent()&&this.parent().composite(this,t,e)},flood:function(t,e){return this.parent()&&this.parent().flood(t,e)},offset:function(t,e){return this.parent()&&this.parent().offset(t,e).in(this)},image:function(t){return this.parent()&&this.parent().image(t)},merge:function(){return this.parent()&&this.parent().merge.apply(this.parent(),[this].concat(arguments))},gaussianBlur:function(t,e){return this.parent()&&this.parent().gaussianBlur(t,e).in(this)},morphology:function(t,e){return this.parent()&&this.parent().morphology(t,e).in(this)},diffuseLighting:function(t,e,n){return this.parent()&&this.parent().diffuseLighting(t,e,n).in(this)},displacementMap:function(t,e,n,i){return this.parent()&&this.parent().displacementMap(this,t,e,n,i)},specularLighting:function(t,e,n,i){return this.parent()&&this.parent().specularLighting(t,e,n,i).in(this)},tile:function(){return this.parent()&&this.parent().tile().in(this)},turbulence:function(t,e,n,i,r){return this.parent()&&this.parent().turbulence(t,e,n,i,r).in(this)}};SVG.extend(SVG.Effect,t),SVG.extend(SVG.ParentEffect,t),SVG.ChildEffect=SVG.invent({create:function(){this.constructor.call(this)},inherit:SVG.Element,extend:{in:function(t){this.attr("in",t)}}});var e={blend:function(t,e,n){this.attr({in:t,in2:e,mode:n||"normal"})},colorMatrix:function(t,e){"matrix"==t&&(e=r(e)),this.attr({type:t,values:void 0===e?null:e})},convolveMatrix:function(t){t=r(t),this.attr({order:Math.sqrt(t.split(" ").length),kernelMatrix:t})},composite:function(t,e,n){this.attr({in:t,in2:e,operator:n})},flood:function(t,e){this.attr("flood-color",t),null!=e&&this.attr("flood-opacity",e)},offset:function(t,e){this.attr({dx:t,dy:e})},image:function(t){this.attr("href",t,SVG.xlink)},displacementMap:function(t,e,n,i,r){this.attr({in:t,in2:e,scale:n,xChannelSelector:i,yChannelSelector:r})},gaussianBlur:function(t,e){null!=t||null!=e?this.attr("stdDeviation",a(Array.prototype.slice.call(arguments))):this.attr("stdDeviation","0 0")},morphology:function(t,e){this.attr({operator:t,radius:e})},tile:function(){},turbulence:function(t,e,n,i,r){this.attr({numOctaves:e,seed:n,stitchTiles:i,baseFrequency:t,type:r})}},n={merge:function(){var t;if(arguments[0]instanceof SVG.Set){var e=this;arguments[0].each((function(t){this instanceof SVG.MergeNode?e.put(this):(this instanceof SVG.Effect||this instanceof SVG.ParentEffect)&&e.put(new SVG.MergeNode(this))}))}else{t=Array.isArray(arguments[0])?arguments[0]:arguments;for(var n=0;n<t.length;n++)t[n]instanceof SVG.MergeNode?this.put(t[n]):this.put(new SVG.MergeNode(t[n]))}},componentTransfer:function(t){if(this.rgb=new SVG.Set,["r","g","b","a"].forEach(function(t){this[t]=new(SVG["Func"+t.toUpperCase()])("identity"),this.rgb.add(this[t]),this.node.appendChild(this[t].node)}.bind(this)),t)for(var e in t.rgb&&(["r","g","b"].forEach(function(e){this[e].attr(t.rgb)}.bind(this)),delete t.rgb),t)this[e].attr(t[e])},diffuseLighting:function(t,e,n){this.attr({surfaceScale:t,diffuseConstant:e,kernelUnitLength:n})},specularLighting:function(t,e,n,i){this.attr({surfaceScale:t,diffuseConstant:e,specularExponent:n,kernelUnitLength:i})}},i={distantLight:function(t,e){this.attr({azimuth:t,elevation:e})},pointLight:function(t,e,n){this.attr({x:t,y:e,z:n})},spotLight:function(t,e,n,i,r,a){this.attr({x:t,y:e,z:n,pointsAtX:i,pointsAtY:r,pointsAtZ:a})},mergeNode:function(t){this.attr("in",t)}};function r(t){return Array.isArray(t)&&(t=new SVG.Array(t)),t.toString().replace(/^\s+/,"").replace(/\s+$/,"").replace(/\s+/g," ")}function a(t){if(!Array.isArray(t))return t;for(var e=0,n=t.length,i=[];e<n;e++)i.push(t[e]);return i.join(" ")}function o(){var t=function(){};for(var e in"function"==typeof arguments[arguments.length-1]&&(t=arguments[arguments.length-1],Array.prototype.splice.call(arguments,arguments.length-1,1)),arguments)for(var n in arguments[e])t(arguments[e][n],n,arguments[e])}["r","g","b","a"].forEach((function(t){i["Func"+t.toUpperCase()]=function(t){switch(this.attr("type",t),t){case"table":this.attr("tableValues",arguments[1]);break;case"linear":this.attr("slope",arguments[1]),this.attr("intercept",arguments[2]);break;case"gamma":this.attr("amplitude",arguments[1]),this.attr("exponent",arguments[2]),this.attr("offset",arguments[2])}}})),o(e,(function(t,e){var n=e.charAt(0).toUpperCase()+e.slice(1);SVG[n+"Effect"]=SVG.invent({create:function(){this.constructor.call(this,SVG.create("fe"+n)),t.apply(this,arguments),this.result(this.attr("id")+"Out")},inherit:SVG.Effect,extend:{}})})),o(n,(function(t,e){var n=e.charAt(0).toUpperCase()+e.slice(1);SVG[n+"Effect"]=SVG.invent({create:function(){this.constructor.call(this,SVG.create("fe"+n)),t.apply(this,arguments),this.result(this.attr("id")+"Out")},inherit:SVG.ParentEffect,extend:{}})})),o(i,(function(t,e){var n=e.charAt(0).toUpperCase()+e.slice(1);SVG[n]=SVG.invent({create:function(){this.constructor.call(this,SVG.create("fe"+n)),t.apply(this,arguments)},inherit:SVG.ChildEffect,extend:{}})})),SVG.extend(SVG.MergeEffect,{in:function(t){return t instanceof SVG.MergeNode?this.add(t,0):this.add(new SVG.MergeNode(t),0),this}}),SVG.extend(SVG.CompositeEffect,SVG.BlendEffect,SVG.DisplacementMapEffect,{in2:function(t){return null==t?this.parent()&&this.parent().select('[result="'+this.attr("in2")+'"]').get(0)||this.attr("in2"):this.attr("in2",t)}}),SVG.filter={sepiatone:[.343,.669,.119,0,0,.249,.626,.13,0,0,.172,.334,.111,0,0,0,0,0,1,0]}}.call(void 0),function(){function t(t,r,a,o,s,l,c){for(var u=t.slice(r,a||c),h=o.slice(s,l||c),f=0,d={pos:[0,0],start:[0,0]},p={pos:[0,0],start:[0,0]};u[f]=e.call(d,u[f]),h[f]=e.call(p,h[f]),u[f][0]!=h[f][0]||"M"==u[f][0]||"A"==u[f][0]&&(u[f][4]!=h[f][4]||u[f][5]!=h[f][5])?(Array.prototype.splice.apply(u,[f,1].concat(i.call(d,u[f]))),Array.prototype.splice.apply(h,[f,1].concat(i.call(p,h[f])))):(u[f]=n.call(d,u[f]),h[f]=n.call(p,h[f])),++f!=u.length||f!=h.length;)f==u.length&&u.push(["C",d.pos[0],d.pos[1],d.pos[0],d.pos[1],d.pos[0],d.pos[1]]),f==h.length&&h.push(["C",p.pos[0],p.pos[1],p.pos[0],p.pos[1],p.pos[0],p.pos[1]]);return{start:u,dest:h}}function e(t){switch(t[0]){case"z":case"Z":t[0]="L",t[1]=this.start[0],t[2]=this.start[1];break;case"H":t[0]="L",t[2]=this.pos[1];break;case"V":t[0]="L",t[2]=t[1],t[1]=this.pos[0];break;case"T":t[0]="Q",t[3]=t[1],t[4]=t[2],t[1]=this.reflection[1],t[2]=this.reflection[0];break;case"S":t[0]="C",t[6]=t[4],t[5]=t[3],t[4]=t[2],t[3]=t[1],t[2]=this.reflection[1],t[1]=this.reflection[0]}return t}function n(t){var e=t.length;return this.pos=[t[e-2],t[e-1]],-1!="SCQT".indexOf(t[0])&&(this.reflection=[2*this.pos[0]-t[e-4],2*this.pos[1]-t[e-3]]),t}function i(t){var e=[t];switch(t[0]){case"M":return this.pos=this.start=[t[1],t[2]],e;case"L":t[5]=t[3]=t[1],t[6]=t[4]=t[2],t[1]=this.pos[0],t[2]=this.pos[1];break;case"Q":t[6]=t[4],t[5]=t[3],t[4]=1*t[4]/3+2*t[2]/3,t[3]=1*t[3]/3+2*t[1]/3,t[2]=1*this.pos[1]/3+2*t[2]/3,t[1]=1*this.pos[0]/3+2*t[1]/3;break;case"A":t=(e=function(t,e){var n,i,r,a,o,s,l,c,u,h,f,d,p,g,m,v,x,b,y,w,k,S,C,A,E,P,T=Math.abs(e[1]),O=Math.abs(e[2]),L=e[3]%360,M=e[4],_=e[5],I=e[6],N=e[7],R=new SVG.Point(t),z=new SVG.Point(I,N),F=[];if(0===T||0===O||R.x===z.x&&R.y===z.y)return[["C",R.x,R.y,z.x,z.y,z.x,z.y]];for((i=(n=new SVG.Point((R.x-z.x)/2,(R.y-z.y)/2).transform((new SVG.Matrix).rotate(L))).x*n.x/(T*T)+n.y*n.y/(O*O))>1&&(T*=i=Math.sqrt(i),O*=i),r=(new SVG.Matrix).rotate(L).scale(1/T,1/O).rotate(-L),R=R.transform(r),s=(a=[(z=z.transform(r)).x-R.x,z.y-R.y])[0]*a[0]+a[1]*a[1],o=Math.sqrt(s),a[0]/=o,a[1]/=o,l=s<4?Math.sqrt(1-s/4):0,M===_&&(l*=-1),c=new SVG.Point((z.x+R.x)/2+l*-a[1],(z.y+R.y)/2+l*a[0]),u=new SVG.Point(R.x-c.x,R.y-c.y),h=new SVG.Point(z.x-c.x,z.y-c.y),f=Math.acos(u.x/Math.sqrt(u.x*u.x+u.y*u.y)),u.y<0&&(f*=-1),d=Math.acos(h.x/Math.sqrt(h.x*h.x+h.y*h.y)),h.y<0&&(d*=-1),_&&f>d&&(d+=2*Math.PI),!_&&f<d&&(d-=2*Math.PI),v=[],x=f,p=(d-f)/(g=Math.ceil(2*Math.abs(f-d)/Math.PI)),m=4*Math.tan(p/4)/3,k=0;k<=g;k++)y=Math.cos(x),b=Math.sin(x),w=new SVG.Point(c.x+y,c.y+b),v[k]=[new SVG.Point(w.x+m*b,w.y-m*y),w,new SVG.Point(w.x-m*b,w.y+m*y)],x+=p;for(v[0][0]=v[0][1].clone(),v[v.length-1][2]=v[v.length-1][1].clone(),r=(new SVG.Matrix).rotate(L).scale(T,O).rotate(-L),k=0,S=v.length;k<S;k++)v[k][0]=v[k][0].transform(r),v[k][1]=v[k][1].transform(r),v[k][2]=v[k][2].transform(r);for(k=1,S=v.length;k<S;k++)C=(w=v[k-1][2]).x,A=w.y,E=(w=v[k][0]).x,P=w.y,I=(w=v[k][1]).x,N=w.y,F.push(["C",C,A,E,P,I,N]);return F}(this.pos,t))[0]}return t[0]="C",this.pos=[t[5],t[6]],this.reflection=[2*t[5]-t[3],2*t[6]-t[4]],e}function r(t,e){if(!1===e)return!1;for(var n=e,i=t.length;n<i;++n)if("M"==t[n][0])return n;return!1}SVG.extend(SVG.PathArray,{morph:function(e){for(var n=this.value,i=this.parse(e),a=0,o=0,s=!1,l=!1;!1!==a||!1!==o;){var c;s=r(n,!1!==a&&a+1),l=r(i,!1!==o&&o+1),!1===a&&(a=0==(c=new SVG.PathArray(u.start).bbox()).height||0==c.width?n.push(n[0])-1:n.push(["M",c.x+c.width/2,c.y+c.height/2])-1),!1===o&&(o=0==(c=new SVG.PathArray(u.dest).bbox()).height||0==c.width?i.push(i[0])-1:i.push(["M",c.x+c.width/2,c.y+c.height/2])-1);var u=t(n,a,s,i,o,l);n=n.slice(0,a).concat(u.start,!1===s?[]:n.slice(s)),i=i.slice(0,o).concat(u.dest,!1===l?[]:i.slice(l)),a=!1!==s&&a+u.start.length,o=!1!==l&&o+u.dest.length}return this.value=n,this.destination=new SVG.PathArray,this.destination.value=i,this}})}(),function(){function t(t){t.remember("_draggable",this),this.el=t}t.prototype.init=function(t,e){var n=this;this.constraint=t,this.value=e,this.el.on("mousedown.drag",(function(t){n.start(t)})),this.el.on("touchstart.drag",(function(t){n.start(t)}))},t.prototype.transformPoint=function(t,e){var n=(t=t||window.event).changedTouches&&t.changedTouches[0]||t;return this.p.x=n.clientX-(e||0),this.p.y=n.clientY,this.p.matrixTransform(this.m)},t.prototype.getBBox=function(){var t=this.el.bbox();return this.el instanceof SVG.Nested&&(t=this.el.rbox()),(this.el instanceof SVG.G||this.el instanceof SVG.Use||this.el instanceof SVG.Nested)&&(t.x=this.el.x(),t.y=this.el.y()),t},t.prototype.start=function(t){if("click"!=t.type&&"mousedown"!=t.type&&"mousemove"!=t.type||1==(t.which||t.buttons)){var e=this;if(this.el.fire("beforedrag",{event:t,handler:this}),!this.el.event().defaultPrevented){t.preventDefault(),t.stopPropagation(),this.parent=this.parent||this.el.parent(SVG.Nested)||this.el.parent(SVG.Doc),this.p=this.parent.node.createSVGPoint(),this.m=this.el.node.getScreenCTM().inverse();var n,i=this.getBBox();if(this.el instanceof SVG.Text)switch(n=this.el.node.getComputedTextLength(),this.el.attr("text-anchor")){case"middle":n/=2;break;case"start":n=0}this.startPoints={point:this.transformPoint(t,n),box:i,transform:this.el.transform()},SVG.on(window,"mousemove.drag",(function(t){e.drag(t)})),SVG.on(window,"touchmove.drag",(function(t){e.drag(t)})),SVG.on(window,"mouseup.drag",(function(t){e.end(t)})),SVG.on(window,"touchend.drag",(function(t){e.end(t)})),this.el.fire("dragstart",{event:t,p:this.startPoints.point,m:this.m,handler:this})}}},t.prototype.drag=function(t){var e=this.getBBox(),n=this.transformPoint(t),i=this.startPoints.box.x+n.x-this.startPoints.point.x,r=this.startPoints.box.y+n.y-this.startPoints.point.y,a=this.constraint,o=n.x-this.startPoints.point.x,s=n.y-this.startPoints.point.y;if(this.el.fire("dragmove",{event:t,p:n,m:this.m,handler:this}),this.el.event().defaultPrevented)return n;if("function"==typeof a){var l=a.call(this.el,i,r,this.m);"boolean"==typeof l&&(l={x:l,y:l}),!0===l.x?this.el.x(i):!1!==l.x&&this.el.x(l.x),!0===l.y?this.el.y(r):!1!==l.y&&this.el.y(l.y)}else"object"==typeof a&&(null!=a.minX&&i<a.minX?o=(i=a.minX)-this.startPoints.box.x:null!=a.maxX&&i>a.maxX-e.width&&(o=(i=a.maxX-e.width)-this.startPoints.box.x),null!=a.minY&&r<a.minY?s=(r=a.minY)-this.startPoints.box.y:null!=a.maxY&&r>a.maxY-e.height&&(s=(r=a.maxY-e.height)-this.startPoints.box.y),null!=a.snapToGrid&&(i-=i%a.snapToGrid,r-=r%a.snapToGrid,o-=o%a.snapToGrid,s-=s%a.snapToGrid),this.el instanceof SVG.G?this.el.matrix(this.startPoints.transform).transform({x:o,y:s},!0):this.el.move(i,r));return n},t.prototype.end=function(t){var e=this.drag(t);this.el.fire("dragend",{event:t,p:e,m:this.m,handler:this}),SVG.off(window,"mousemove.drag"),SVG.off(window,"touchmove.drag"),SVG.off(window,"mouseup.drag"),SVG.off(window,"touchend.drag")},SVG.extend(SVG.Element,{draggable:function(e,n){"function"!=typeof e&&"object"!=typeof e||(n=e,e=!0);var i=this.remember("_draggable")||new t(this);return(e=void 0===e||e)?i.init(n||{},e):(this.off("mousedown.drag"),this.off("touchstart.drag")),this}})}.call(void 0),function(){function t(t){this.el=t,t.remember("_selectHandler",this),this.pointSelection={isSelected:!1},this.rectSelection={isSelected:!1},this.pointsList={lt:[0,0],rt:["width",0],rb:["width","height"],lb:[0,"height"],t:["width",0],r:["width","height"],b:["width","height"],l:[0,"height"]},this.pointCoord=function(t,e,n){var i="string"!=typeof t?t:e[t];return n?i/2:i},this.pointCoords=function(t,e){var n=this.pointsList[t];return{x:this.pointCoord(n[0],e,"t"===t||"b"===t),y:this.pointCoord(n[1],e,"r"===t||"l"===t)}}}t.prototype.init=function(t,e){var n=this.el.bbox();this.options={};var i=this.el.selectize.defaults.points;for(var r in this.el.selectize.defaults)this.options[r]=this.el.selectize.defaults[r],void 0!==e[r]&&(this.options[r]=e[r]);var a=["points","pointsExclude"];for(var r in a){var o=this.options[a[r]];"string"==typeof o?o=o.length>0?o.split(/\s*,\s*/i):[]:"boolean"==typeof o&&"points"===a[r]&&(o=o?i:[]),this.options[a[r]]=o}this.options.points=[i,this.options.points].reduce((function(t,e){return t.filter((function(t){return e.indexOf(t)>-1}))})),this.options.points=[this.options.points,this.options.pointsExclude].reduce((function(t,e){return t.filter((function(t){return e.indexOf(t)<0}))})),this.parent=this.el.parent(),this.nested=this.nested||this.parent.group(),this.nested.matrix(new SVG.Matrix(this.el).translate(n.x,n.y)),this.options.deepSelect&&-1!==["line","polyline","polygon"].indexOf(this.el.type)?this.selectPoints(t):this.selectRect(t),this.observe(),this.cleanup()},t.prototype.selectPoints=function(t){return this.pointSelection.isSelected=t,this.pointSelection.set||(this.pointSelection.set=this.parent.set(),this.drawPoints()),this},t.prototype.getPointArray=function(){var t=this.el.bbox();return this.el.array().valueOf().map((function(e){return[e[0]-t.x,e[1]-t.y]}))},t.prototype.drawPoints=function(){for(var t=this,e=this.getPointArray(),n=0,i=e.length;n<i;++n){var r=function(e){return function(n){(n=n||window.event).preventDefault?n.preventDefault():n.returnValue=!1,n.stopPropagation();var i=n.pageX||n.touches[0].pageX,r=n.pageY||n.touches[0].pageY;t.el.fire("point",{x:i,y:r,i:e,event:n})}}(n),a=this.drawPoint(e[n][0],e[n][1]).addClass(this.options.classPoints).addClass(this.options.classPoints+"_point").on("touchstart",r).on("mousedown",r);this.pointSelection.set.add(a)}},t.prototype.drawPoint=function(t,e){var n=this.options.pointType;switch(n){case"circle":return this.drawCircle(t,e);case"rect":return this.drawRect(t,e);default:if("function"==typeof n)return n.call(this,t,e);throw new Error("Unknown "+n+" point type!")}},t.prototype.drawCircle=function(t,e){return this.nested.circle(this.options.pointSize).center(t,e)},t.prototype.drawRect=function(t,e){return this.nested.rect(this.options.pointSize,this.options.pointSize).center(t,e)},t.prototype.updatePointSelection=function(){var t=this.getPointArray();this.pointSelection.set.each((function(e){this.cx()===t[e][0]&&this.cy()===t[e][1]||this.center(t[e][0],t[e][1])}))},t.prototype.updateRectSelection=function(){var t=this,e=this.el.bbox();if(this.rectSelection.set.get(0).attr({width:e.width,height:e.height}),this.options.points.length&&this.options.points.map((function(n,i){var r=t.pointCoords(n,e);t.rectSelection.set.get(i+1).center(r.x,r.y)})),this.options.rotationPoint){var n=this.rectSelection.set.length();this.rectSelection.set.get(n-1).center(e.width/2,20)}},t.prototype.selectRect=function(t){var e=this,n=this.el.bbox();function i(t){return function(n){(n=n||window.event).preventDefault?n.preventDefault():n.returnValue=!1,n.stopPropagation();var i=n.pageX||n.touches[0].pageX,r=n.pageY||n.touches[0].pageY;e.el.fire(t,{x:i,y:r,event:n})}}if(this.rectSelection.isSelected=t,this.rectSelection.set=this.rectSelection.set||this.parent.set(),this.rectSelection.set.get(0)||this.rectSelection.set.add(this.nested.rect(n.width,n.height).addClass(this.options.classRect)),this.options.points.length&&this.rectSelection.set.length()<2&&(this.options.points.map((function(t,r){var a=e.pointCoords(t,n),o=e.drawPoint(a.x,a.y).attr("class",e.options.classPoints+"_"+t).on("mousedown",i(t)).on("touchstart",i(t));e.rectSelection.set.add(o)})),this.rectSelection.set.each((function(){this.addClass(e.options.classPoints)}))),this.options.rotationPoint&&(this.options.points&&!this.rectSelection.set.get(9)||!this.options.points&&!this.rectSelection.set.get(1))){var r=function(t){(t=t||window.event).preventDefault?t.preventDefault():t.returnValue=!1,t.stopPropagation();var n=t.pageX||t.touches[0].pageX,i=t.pageY||t.touches[0].pageY;e.el.fire("rot",{x:n,y:i,event:t})},a=this.drawPoint(n.width/2,20).attr("class",this.options.classPoints+"_rot").on("touchstart",r).on("mousedown",r);this.rectSelection.set.add(a)}},t.prototype.handler=function(){var t=this.el.bbox();this.nested.matrix(new SVG.Matrix(this.el).translate(t.x,t.y)),this.rectSelection.isSelected&&this.updateRectSelection(),this.pointSelection.isSelected&&this.updatePointSelection()},t.prototype.observe=function(){var t=this;if(MutationObserver)if(this.rectSelection.isSelected||this.pointSelection.isSelected)this.observerInst=this.observerInst||new MutationObserver((function(){t.handler()})),this.observerInst.observe(this.el.node,{attributes:!0});else try{this.observerInst.disconnect(),delete this.observerInst}catch(t){}else this.el.off("DOMAttrModified.select"),(this.rectSelection.isSelected||this.pointSelection.isSelected)&&this.el.on("DOMAttrModified.select",(function(){t.handler()}))},t.prototype.cleanup=function(){!this.rectSelection.isSelected&&this.rectSelection.set&&(this.rectSelection.set.each((function(){this.remove()})),this.rectSelection.set.clear(),delete this.rectSelection.set),!this.pointSelection.isSelected&&this.pointSelection.set&&(this.pointSelection.set.each((function(){this.remove()})),this.pointSelection.set.clear(),delete this.pointSelection.set),this.pointSelection.isSelected||this.rectSelection.isSelected||(this.nested.remove(),delete this.nested)},SVG.extend(SVG.Element,{selectize:function(e,n){return"object"==typeof e&&(n=e,e=!0),(this.remember("_selectHandler")||new t(this)).init(void 0===e||e,n||{}),this}}),SVG.Element.prototype.selectize.defaults={points:["lt","rt","rb","lb","t","r","b","l"],pointsExclude:[],classRect:"svg_select_boundingRect",classPoints:"svg_select_points",pointSize:7,rotationPoint:!0,deepSelect:!1,pointType:"circle"}}(),function(){(function(){function t(t){t.remember("_resizeHandler",this),this.el=t,this.parameters={},this.lastUpdateCall=null,this.p=t.doc().node.createSVGPoint()}t.prototype.transformPoint=function(t,e,n){return this.p.x=t-(this.offset.x-window.pageXOffset),this.p.y=e-(this.offset.y-window.pageYOffset),this.p.matrixTransform(n||this.m)},t.prototype._extractPosition=function(t){return{x:null!=t.clientX?t.clientX:t.touches[0].clientX,y:null!=t.clientY?t.clientY:t.touches[0].clientY}},t.prototype.init=function(t){var e=this;if(this.stop(),"stop"!==t){for(var n in this.options={},this.el.resize.defaults)this.options[n]=this.el.resize.defaults[n],void 0!==t[n]&&(this.options[n]=t[n]);this.el.on("lt.resize",(function(t){e.resize(t||window.event)})),this.el.on("rt.resize",(function(t){e.resize(t||window.event)})),this.el.on("rb.resize",(function(t){e.resize(t||window.event)})),this.el.on("lb.resize",(function(t){e.resize(t||window.event)})),this.el.on("t.resize",(function(t){e.resize(t||window.event)})),this.el.on("r.resize",(function(t){e.resize(t||window.event)})),this.el.on("b.resize",(function(t){e.resize(t||window.event)})),this.el.on("l.resize",(function(t){e.resize(t||window.event)})),this.el.on("rot.resize",(function(t){e.resize(t||window.event)})),this.el.on("point.resize",(function(t){e.resize(t||window.event)})),this.update()}},t.prototype.stop=function(){return this.el.off("lt.resize"),this.el.off("rt.resize"),this.el.off("rb.resize"),this.el.off("lb.resize"),this.el.off("t.resize"),this.el.off("r.resize"),this.el.off("b.resize"),this.el.off("l.resize"),this.el.off("rot.resize"),this.el.off("point.resize"),this},t.prototype.resize=function(t){var e=this;this.m=this.el.node.getScreenCTM().inverse(),this.offset={x:window.pageXOffset,y:window.pageYOffset};var n=this._extractPosition(t.detail.event);if(this.parameters={type:this.el.type,p:this.transformPoint(n.x,n.y),x:t.detail.x,y:t.detail.y,box:this.el.bbox(),rotation:this.el.transform().rotation},"text"===this.el.type&&(this.parameters.fontSize=this.el.attr()["font-size"]),void 0!==t.detail.i){var i=this.el.array().valueOf();this.parameters.i=t.detail.i,this.parameters.pointCoords=[i[t.detail.i][0],i[t.detail.i][1]]}switch(t.type){case"lt":this.calc=function(t,e){var n=this.snapToGrid(t,e);if(this.parameters.box.width-n[0]>0&&this.parameters.box.height-n[1]>0){if("text"===this.parameters.type)return this.el.move(this.parameters.box.x+n[0],this.parameters.box.y),void this.el.attr("font-size",this.parameters.fontSize-n[0]);n=this.checkAspectRatio(n),this.el.move(this.parameters.box.x+n[0],this.parameters.box.y+n[1]).size(this.parameters.box.width-n[0],this.parameters.box.height-n[1])}};break;case"rt":this.calc=function(t,e){var n=this.snapToGrid(t,e,2);if(this.parameters.box.width+n[0]>0&&this.parameters.box.height-n[1]>0){if("text"===this.parameters.type)return this.el.move(this.parameters.box.x-n[0],this.parameters.box.y),void this.el.attr("font-size",this.parameters.fontSize+n[0]);n=this.checkAspectRatio(n,!0),this.el.move(this.parameters.box.x,this.parameters.box.y+n[1]).size(this.parameters.box.width+n[0],this.parameters.box.height-n[1])}};break;case"rb":this.calc=function(t,e){var n=this.snapToGrid(t,e,0);if(this.parameters.box.width+n[0]>0&&this.parameters.box.height+n[1]>0){if("text"===this.parameters.type)return this.el.move(this.parameters.box.x-n[0],this.parameters.box.y),void this.el.attr("font-size",this.parameters.fontSize+n[0]);n=this.checkAspectRatio(n),this.el.move(this.parameters.box.x,this.parameters.box.y).size(this.parameters.box.width+n[0],this.parameters.box.height+n[1])}};break;case"lb":this.calc=function(t,e){var n=this.snapToGrid(t,e,1);if(this.parameters.box.width-n[0]>0&&this.parameters.box.height+n[1]>0){if("text"===this.parameters.type)return this.el.move(this.parameters.box.x+n[0],this.parameters.box.y),void this.el.attr("font-size",this.parameters.fontSize-n[0]);n=this.checkAspectRatio(n,!0),this.el.move(this.parameters.box.x+n[0],this.parameters.box.y).size(this.parameters.box.width-n[0],this.parameters.box.height+n[1])}};break;case"t":this.calc=function(t,e){var n=this.snapToGrid(t,e,2);if(this.parameters.box.height-n[1]>0){if("text"===this.parameters.type)return;this.el.move(this.parameters.box.x,this.parameters.box.y+n[1]).height(this.parameters.box.height-n[1])}};break;case"r":this.calc=function(t,e){var n=this.snapToGrid(t,e,0);if(this.parameters.box.width+n[0]>0){if("text"===this.parameters.type)return;this.el.move(this.parameters.box.x,this.parameters.box.y).width(this.parameters.box.width+n[0])}};break;case"b":this.calc=function(t,e){var n=this.snapToGrid(t,e,0);if(this.parameters.box.height+n[1]>0){if("text"===this.parameters.type)return;this.el.move(this.parameters.box.x,this.parameters.box.y).height(this.parameters.box.height+n[1])}};break;case"l":this.calc=function(t,e){var n=this.snapToGrid(t,e,1);if(this.parameters.box.width-n[0]>0){if("text"===this.parameters.type)return;this.el.move(this.parameters.box.x+n[0],this.parameters.box.y).width(this.parameters.box.width-n[0])}};break;case"rot":this.calc=function(t,e){var n=t+this.parameters.p.x,i=e+this.parameters.p.y,r=Math.atan2(this.parameters.p.y-this.parameters.box.y-this.parameters.box.height/2,this.parameters.p.x-this.parameters.box.x-this.parameters.box.width/2),a=Math.atan2(i-this.parameters.box.y-this.parameters.box.height/2,n-this.parameters.box.x-this.parameters.box.width/2),o=this.parameters.rotation+180*(a-r)/Math.PI+this.options.snapToAngle/2;this.el.center(this.parameters.box.cx,this.parameters.box.cy).rotate(o-o%this.options.snapToAngle,this.parameters.box.cx,this.parameters.box.cy)};break;case"point":this.calc=function(t,e){var n=this.snapToGrid(t,e,this.parameters.pointCoords[0],this.parameters.pointCoords[1]),i=this.el.array().valueOf();i[this.parameters.i][0]=this.parameters.pointCoords[0]+n[0],i[this.parameters.i][1]=this.parameters.pointCoords[1]+n[1],this.el.plot(i)}}this.el.fire("resizestart",{dx:this.parameters.x,dy:this.parameters.y,event:t}),SVG.on(window,"touchmove.resize",(function(t){e.update(t||window.event)})),SVG.on(window,"touchend.resize",(function(){e.done()})),SVG.on(window,"mousemove.resize",(function(t){e.update(t||window.event)})),SVG.on(window,"mouseup.resize",(function(){e.done()}))},t.prototype.update=function(t){if(t){var e=this._extractPosition(t),n=this.transformPoint(e.x,e.y),i=n.x-this.parameters.p.x,r=n.y-this.parameters.p.y;this.lastUpdateCall=[i,r],this.calc(i,r),this.el.fire("resizing",{dx:i,dy:r,event:t})}else this.lastUpdateCall&&this.calc(this.lastUpdateCall[0],this.lastUpdateCall[1])},t.prototype.done=function(){this.lastUpdateCall=null,SVG.off(window,"mousemove.resize"),SVG.off(window,"mouseup.resize"),SVG.off(window,"touchmove.resize"),SVG.off(window,"touchend.resize"),this.el.fire("resizedone")},t.prototype.snapToGrid=function(t,e,n,i){var r;return void 0!==i?r=[(n+t)%this.options.snapToGrid,(i+e)%this.options.snapToGrid]:(n=null==n?3:n,r=[(this.parameters.box.x+t+(1&n?0:this.parameters.box.width))%this.options.snapToGrid,(this.parameters.box.y+e+(2&n?0:this.parameters.box.height))%this.options.snapToGrid]),t<0&&(r[0]-=this.options.snapToGrid),e<0&&(r[1]-=this.options.snapToGrid),t-=Math.abs(r[0])<this.options.snapToGrid/2?r[0]:r[0]-(t<0?-this.options.snapToGrid:this.options.snapToGrid),e-=Math.abs(r[1])<this.options.snapToGrid/2?r[1]:r[1]-(e<0?-this.options.snapToGrid:this.options.snapToGrid),this.constraintToBox(t,e,n,i)},t.prototype.constraintToBox=function(t,e,n,i){var r,a,o=this.options.constraint||{};return void 0!==i?(r=n,a=i):(r=this.parameters.box.x+(1&n?0:this.parameters.box.width),a=this.parameters.box.y+(2&n?0:this.parameters.box.height)),void 0!==o.minX&&r+t<o.minX&&(t=o.minX-r),void 0!==o.maxX&&r+t>o.maxX&&(t=o.maxX-r),void 0!==o.minY&&a+e<o.minY&&(e=o.minY-a),void 0!==o.maxY&&a+e>o.maxY&&(e=o.maxY-a),[t,e]},t.prototype.checkAspectRatio=function(t,e){if(!this.options.saveAspectRatio)return t;var n=t.slice(),i=this.parameters.box.width/this.parameters.box.height,r=this.parameters.box.width+t[0],a=this.parameters.box.height-t[1],o=r/a;return o<i?(n[1]=r/i-this.parameters.box.height,e&&(n[1]=-n[1])):o>i&&(n[0]=this.parameters.box.width-a*i,e&&(n[0]=-n[0])),n},SVG.extend(SVG.Element,{resize:function(e){return(this.remember("_resizeHandler")||new t(this)).init(e||{}),this}}),SVG.Element.prototype.resize.defaults={snapToAngle:.1,snapToGrid:1,constraint:{},saveAspectRatio:!1}}).call(this)}();(function(t,e){void 0===e&&(e={});var n=e.insertAt;if(t&&"undefined"!=typeof document){var i=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===n&&i.firstChild?i.insertBefore(r,i.firstChild):i.appendChild(r),r.styleSheet?r.styleSheet.cssText=t:r.appendChild(document.createTextNode(t))}})('.apexcharts-canvas {\n  position: relative;\n  user-select: none;\n  /* cannot give overflow: hidden as it will crop tooltips which overflow outside chart area */\n}\n\n\n/* scrollbar is not visible by default for legend, hence forcing the visibility */\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px;\n}\n\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, .5);\n  box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n}\n\n.apexcharts-canvas.apexcharts-theme-dark {\n  background: #343F57;\n}\n\n.apexcharts-inner {\n  position: relative;\n}\n\n.apexcharts-text tspan {\n  font-family: inherit;\n}\n\n.legend-mouseover-inactive {\n  transition: 0.15s ease all;\n  opacity: 0.20;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0;\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255, 255, 255, 0.96);\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark {\n  color: #fff;\n  background: rgba(30, 30, 30, 0.8);\n}\n\n.apexcharts-tooltip * {\n  font-family: inherit;\n}\n\n.apexcharts-tooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\n  background: #ECEFF1;\n  border-bottom: 1px solid #ddd;\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\n  background: rgba(0, 0, 0, 0.7);\n  border-bottom: 1px solid #333;\n}\n\n.apexcharts-tooltip-text-value,\n.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  font-weight: 600;\n  margin-left: 5px;\n}\n\n.apexcharts-tooltip-text-z-label:empty,\n.apexcharts-tooltip-text-z-value:empty {\n  display: none;\n}\n\n.apexcharts-tooltip-text-value,\n.apexcharts-tooltip-text-z-value {\n  font-weight: 600;\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0px;\n  margin-right: 10px;\n  border-radius: 50%;\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\n  opacity: 1;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active,\n.apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px;\n}\n\n.apexcharts-tooltip-series-group-hidden {\n  opacity: 0;\n  height: 0;\n  line-height: 0;\n  padding: 0 !important;\n}\n\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px;\n}\n\n.apexcharts-tooltip-candlestick {\n  padding: 4px 8px;\n}\n\n.apexcharts-tooltip-candlestick>div {\n  margin: 4px 0;\n}\n\n.apexcharts-tooltip-candlestick span.value {\n  font-weight: bold;\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px;\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777;\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 5px;\n}\n\n.apexcharts-xaxistooltip {\n  opacity: 0;\n  padding: 9px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-xaxistooltip:after,\n.apexcharts-xaxistooltip:before {\n  left: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-xaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-left: -6px;\n}\n\n.apexcharts-xaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-left: -7px;\n}\n\n.apexcharts-xaxistooltip-bottom:after,\n.apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%;\n}\n\n.apexcharts-xaxistooltip-top:after,\n.apexcharts-xaxistooltip-top:before {\n  top: 100%;\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #ECEFF1;\n}\n\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color: #ECEFF1\n}\n\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-yaxistooltip {\n  opacity: 0;\n  padding: 4px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n}\n\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-yaxistooltip:after,\n.apexcharts-yaxistooltip:before {\n  top: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-yaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-top: -6px;\n}\n\n.apexcharts-yaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-top: -7px;\n}\n\n.apexcharts-yaxistooltip-left:after,\n.apexcharts-yaxistooltip-left:before {\n  left: 100%;\n}\n\n.apexcharts-yaxistooltip-right:after,\n.apexcharts-yaxistooltip-right:before {\n  right: 100%;\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip.apexcharts-active {\n  opacity: 1;\n}\n\n.apexcharts-yaxistooltip-hidden {\n  display: none;\n}\n\n.apexcharts-xcrosshairs,\n.apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xcrosshairs.apexcharts-active,\n.apexcharts-ycrosshairs.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0;\n}\n\n.apexcharts-selection-rect {\n  cursor: move;\n}\n\n.svg_select_boundingRect, .svg_select_points_rot {\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n}\n.apexcharts-selection-rect + g .svg_select_boundingRect,\n.apexcharts-selection-rect + g .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.apexcharts-selection-rect + g .svg_select_points_l,\n.apexcharts-selection-rect + g .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible;\n}\n\n.svg_select_points {\n  fill: #efefef;\n  stroke: #333;\n  rx: 2;\n}\n\n.apexcharts-canvas.apexcharts-zoomable .hovering-zoom {\n  cursor: crosshair\n}\n\n.apexcharts-canvas.apexcharts-zoomable .hovering-pan {\n  cursor: move\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon,\n.apexcharts-reset-icon,\n.apexcharts-pan-icon,\n.apexcharts-selection-icon,\n.apexcharts-menu-icon,\n.apexcharts-toolbar-custom-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6E8192;\n  text-align: center;\n}\n\n.apexcharts-zoom-icon svg,\n.apexcharts-zoomin-icon svg,\n.apexcharts-zoomout-icon svg,\n.apexcharts-reset-icon svg,\n.apexcharts-menu-icon svg {\n  fill: #6E8192;\n}\n\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(0.76)\n}\n\n.apexcharts-theme-dark .apexcharts-zoom-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomin-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomout-icon svg,\n.apexcharts-theme-dark .apexcharts-reset-icon svg,\n.apexcharts-theme-dark .apexcharts-pan-icon svg,\n.apexcharts-theme-dark .apexcharts-selection-icon svg,\n.apexcharts-theme-dark .apexcharts-menu-icon svg,\n.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg {\n  fill: #f3f4f5;\n}\n\n.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg {\n  fill: #008FFB;\n}\n\n.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,\n.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg,\n.apexcharts-theme-light .apexcharts-reset-icon:hover svg,\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg {\n  fill: #333;\n}\n\n.apexcharts-selection-icon,\n.apexcharts-menu-icon {\n  position: relative;\n}\n\n.apexcharts-reset-icon {\n  margin-left: 5px;\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-reset-icon,\n.apexcharts-menu-icon {\n  transform: scale(0.85);\n}\n\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon {\n  transform: scale(0.7)\n}\n\n.apexcharts-zoomout-icon {\n  margin-right: 3px;\n}\n\n.apexcharts-pan-icon {\n  transform: scale(0.62);\n  position: relative;\n  left: 1px;\n  top: 0px;\n}\n\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6E8192;\n  stroke-width: 2;\n}\n\n.apexcharts-pan-icon.apexcharts-selected svg {\n  stroke: #008FFB;\n}\n\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\n  stroke: #333;\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0px 6px 2px 6px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: 0.15s ease all;\n  pointer-events: none;\n}\n\n.apexcharts-menu.apexcharts-menu-open {\n  opacity: 1;\n  pointer-events: all;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer;\n}\n\n.apexcharts-theme-light .apexcharts-menu-item:hover {\n  background: #eee;\n}\n\n.apexcharts-theme-dark .apexcharts-menu {\n  background: rgba(0, 0, 0, 0.7);\n  color: #fff;\n}\n\n@media screen and (min-width: 768px) {\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n    opacity: 1;\n  }\n}\n\n.apexcharts-datalabel.apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-pie-label,\n.apexcharts-datalabels,\n.apexcharts-datalabel,\n.apexcharts-datalabel-label,\n.apexcharts-datalabel-value {\n  cursor: default;\n  pointer-events: none;\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: 0.3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease;\n}\n\n.apexcharts-canvas .apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-hide .apexcharts-series-points {\n  opacity: 0;\n}\n\n.apexcharts-gridline,\n.apexcharts-annotation-rect,\n.apexcharts-tooltip .apexcharts-marker,\n.apexcharts-area-series .apexcharts-area,\n.apexcharts-line,\n.apexcharts-zoom-rect,\n.apexcharts-toolbar svg,\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-radar-series path,\n.apexcharts-radar-series polygon {\n  pointer-events: none;\n}\n\n\n/* markers */\n\n.apexcharts-marker {\n  transition: 0.15s ease all;\n}\n\n@keyframes opaque {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n\n/* Resize generated styles */\n\n@keyframes resizeanim {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.resize-triggers {\n  animation: 1ms resizeanim;\n  visibility: hidden;\n  opacity: 0;\n}\n\n.resize-triggers,\n.resize-triggers>div,\n.contract-trigger:before {\n  content: " ";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n.resize-triggers>div {\n  background: #eee;\n  overflow: auto;\n}\n\n.contract-trigger:before {\n  width: 200%;\n  height: 200%;\n}'),function(){function t(t){var e=t.__resizeTriggers__,n=e.firstElementChild,i=e.lastElementChild,r=n?n.firstElementChild:null;i&&(i.scrollLeft=i.scrollWidth,i.scrollTop=i.scrollHeight),r&&(r.style.width=n.offsetWidth+1+"px",r.style.height=n.offsetHeight+1+"px"),n&&(n.scrollLeft=n.scrollWidth,n.scrollTop=n.scrollHeight)}function e(e){var n=this;t(this),this.__resizeRAF__&&a(this.__resizeRAF__),this.__resizeRAF__=r((function(){(function(t){return t.offsetWidth!=t.__resizeLast__.width||t.offsetHeight!=t.__resizeLast__.height})(n)&&(n.__resizeLast__.width=n.offsetWidth,n.__resizeLast__.height=n.offsetHeight,n.__resizeListeners__.forEach((function(t){t.call(e)})))}))}var n,i,r=(n=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(t){return window.setTimeout(t,20)},function(t){return n(t)}),a=(i=window.cancelAnimationFrame||window.mozCancelAnimationFrame||window.webkitCancelAnimationFrame||window.clearTimeout,function(t){return i(t)}),o=!1,s="animationstart",l="Webkit Moz O ms".split(" "),c="webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" "),u=document.createElement("fakeelement");if(void 0!==u.style.animationName&&(o=!0),!1===o)for(var h=0;h<l.length;h++)if(void 0!==u.style[l[h]+"AnimationName"]){s=c[h];break}window.addResizeListener=function(n,i){n.__resizeTriggers__||("static"==getComputedStyle(n).position&&(n.style.position="relative"),n.__resizeLast__={},n.__resizeListeners__=[],(n.__resizeTriggers__=document.createElement("div")).className="resize-triggers",n.__resizeTriggers__.innerHTML='<div class="expand-trigger"><div></div></div><div class="contract-trigger"></div>',n.appendChild(n.__resizeTriggers__),t(n),n.addEventListener("scroll",e,!0),s&&n.__resizeTriggers__.addEventListener(s,(function(e){"resizeanim"==e.animationName&&t(n)}))),n.__resizeListeners__.push(i)},window.removeResizeListener=function(t,n){t&&(t.__resizeListeners__.splice(t.__resizeListeners__.indexOf(n),1),t.__resizeListeners__.length||(t.removeEventListener("scroll",e),t.__resizeTriggers__.parentNode&&(t.__resizeTriggers__=!t.removeChild(t.__resizeTriggers__))))}}(),window.Apex={};var Mt=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"initModules",value:function(){this.ctx.publicMethods=["updateOptions","updateSeries","appendData","appendSeries","toggleSeries","showSeries","hideSeries","setLocale","resetSeries","toggleDataPointSelection","dataURI","addXaxisAnnotation","addYaxisAnnotation","addPointAnnotation","clearAnnotations","removeAnnotation","paper","destroy"],this.ctx.eventList=["click","mousedown","mousemove","touchstart","touchmove","mouseup","touchend"],this.ctx.animations=new v(this.ctx),this.ctx.axes=new $(this.ctx),this.ctx.core=new Ot(this.ctx.el,this.ctx),this.ctx.config=new O({}),this.ctx.data=new D(this.ctx),this.ctx.grid=new H(this.ctx),this.ctx.graphics=new x(this.ctx),this.ctx.coreUtils=new _(this.ctx),this.ctx.crosshairs=new Z(this.ctx),this.ctx.events=new G(this.ctx),this.ctx.exports=new j(this.ctx),this.ctx.localization=new q(this.ctx),this.ctx.options=new A,this.ctx.responsive=new K(this.ctx),this.ctx.series=new F(this.ctx),this.ctx.theme=new Q(this.ctx),this.ctx.formatters=new X(this.ctx),this.ctx.titleSubtitle=new J(this.ctx),this.ctx.legend=new st(this.ctx),this.ctx.toolbar=new lt(this.ctx),this.ctx.dimensions=new rt(this.ctx),this.ctx.updateHelpers=new Lt(this.ctx),this.ctx.zoomPanSelection=new ct(this.ctx),this.ctx.w.globals.tooltip=new mt(this.ctx)}}]),t}(),_t=function(){function t(e){a(this,t),this.ctx=e,this.w=e.w}return s(t,[{key:"clear",value:function(){this.ctx.zoomPanSelection&&this.ctx.zoomPanSelection.destroy(),this.ctx.toolbar&&this.ctx.toolbar.destroy(),this.ctx.animations=null,this.ctx.axes=null,this.ctx.annotations=null,this.ctx.core=null,this.ctx.data=null,this.ctx.grid=null,this.ctx.series=null,this.ctx.responsive=null,this.ctx.theme=null,this.ctx.formatters=null,this.ctx.titleSubtitle=null,this.ctx.legend=null,this.ctx.dimensions=null,this.ctx.options=null,this.ctx.crosshairs=null,this.ctx.zoomPanSelection=null,this.ctx.updateHelpers=null,this.ctx.toolbar=null,this.ctx.localization=null,this.ctx.w.globals.tooltip=null,this.clearDomElements()}},{key:"killSVG",value:function(t){t.each((function(t,e){this.removeClass("*"),this.off(),this.stop()}),!0),t.ungroup(),t.clear()}},{key:"clearDomElements",value:function(){var t=this;this.ctx.eventList.forEach((function(e){document.removeEventListener(e,t.ctx.events.documentEvent)}));var e=this.w.globals.dom;if(null!==this.ctx.el)for(;this.ctx.el.firstChild;)this.ctx.el.removeChild(this.ctx.el.firstChild);this.killSVG(e.Paper),e.Paper.remove(),e.elWrap=null,e.elGraphical=null,e.elAnnotations=null,e.elLegendWrap=null,e.baseEl=null,e.elGridRect=null,e.elGridRectMask=null,e.elGridRectMarkerMask=null,e.elDefs=null}}]),t}(),It=function(){function t(e,n){a(this,t),this.opts=n,this.ctx=this,this.w=new M(n).init(),this.el=e,this.w.globals.cuid=g.randomId(),this.w.globals.chartID=this.w.config.chart.id?this.w.config.chart.id:this.w.globals.cuid,new Mt(this).initModules(),this.create=g.bind(this.create,this),this.windowResizeHandler=this._windowResize.bind(this)}return s(t,[{key:"render",value:function(){var t=this;return new Promise((function(e,n){if(null!==t.el){void 0===Apex._chartInstances&&(Apex._chartInstances=[]),t.w.config.chart.id&&Apex._chartInstances.push({id:t.w.globals.chartID,group:t.w.config.chart.group,chart:t}),t.setLocale(t.w.config.chart.defaultLocale);var i=t.w.config.chart.events.beforeMount;"function"==typeof i&&i(t,t.w),t.events.fireEvent("beforeMount",[t,t.w]),window.addEventListener("resize",t.windowResizeHandler),window.addResizeListener(t.el.parentNode,t._parentResizeCallback.bind(t));var r=t.create(t.w.config.series,{});if(!r)return e(t);t.mount(r).then((function(){"function"==typeof t.w.config.chart.events.mounted&&t.w.config.chart.events.mounted(t,t.w),t.events.fireEvent("mounted",[t,t.w]),e(r)})).catch((function(t){n(t)}))}else n(new Error("Element not found"))}))}},{key:"create",value:function(t,e){var n=this.w;new Mt(this).initModules();var i=this.w.globals;if(i.noData=!1,i.animationEnded=!1,this.responsive.checkResponsiveConfig(e),n.config.xaxis.convertedCatToNumeric&&new T(n.config).convertCatToNumericXaxis(n.config,this.ctx),null===this.el)return i.animationEnded=!0,null;if(this.core.setupElements(),0===i.svgWidth)return i.animationEnded=!0,null;var r=_.checkComboSeries(t);i.comboCharts=r.comboCharts,i.comboBarCount=r.comboBarCount,(0===t.length||1===t.length&&t[0].data&&0===t[0].data.length)&&this.series.handleNoData(),this.events.setupEventHandlers(),this.data.parseData(t),this.theme.init(),new N(this).setGlobalMarkerSize(),this.formatters.setLabelFormatters(),this.titleSubtitle.draw(),i.noData&&i.collapsedSeries.length!==i.series.length||this.legend.init(),this.series.hasAllSeriesEqualX(),i.axisCharts&&(this.core.coreCalculations(),"category"!==n.config.xaxis.type&&this.formatters.setLabelFormatters()),this.formatters.heatmapLabelFormatters(),this.dimensions.plotCoords();var a=this.core.xySettings();this.grid.createGridMask();var o=this.core.plotChartType(t,a),s=new z(this);s.bringForward(),n.config.dataLabels.background.enabled&&s.dataLabelsBackground(),this.core.shiftGraphPosition();var l={plot:{left:n.globals.translateX,top:n.globals.translateY,width:n.globals.gridWidth,height:n.globals.gridHeight}};return{elGraph:o,xyRatios:a,elInner:n.globals.dom.elGraphical,dimensions:l}}},{key:"mount",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,n=this,i=n.w;return new Promise((function(r,a){if(null===n.el)return a(new Error("Not enough data to display or target element not found"));(null===e||i.globals.allSeriesCollapsed)&&n.series.handleNoData(),n.axes.drawAxis(i.config.chart.type,e.xyRatios),n.grid=new H(n);var o=n.grid.drawGrid();n.annotations=new E(n),n.annotations.drawShapeAnnos(),n.annotations.drawImageAnnos(),n.annotations.drawTextAnnos(),"back"===i.config.grid.position&&o&&i.globals.dom.elGraphical.add(o.el);var s=new W(t.ctx),l=new U(t.ctx);if(null!==o&&(s.xAxisLabelCorrections(o.xAxisTickWidth),l.setYAxisTextAlignments()),"back"===i.config.annotations.position&&(i.globals.dom.Paper.add(i.globals.dom.elAnnotations),n.annotations.drawAxesAnnotations()),e.elGraph instanceof Array)for(var c=0;c<e.elGraph.length;c++)i.globals.dom.elGraphical.add(e.elGraph[c]);else i.globals.dom.elGraphical.add(e.elGraph);if("front"===i.config.grid.position&&o&&i.globals.dom.elGraphical.add(o.el),"front"===i.config.xaxis.crosshairs.position&&n.crosshairs.drawXCrosshairs(),"front"===i.config.yaxis[0].crosshairs.position&&n.crosshairs.drawYCrosshairs(),"front"===i.config.annotations.position&&(i.globals.dom.Paper.add(i.globals.dom.elAnnotations),n.annotations.drawAxesAnnotations()),!i.globals.noData){if(i.config.tooltip.enabled&&!i.globals.noData&&n.w.globals.tooltip.drawTooltip(e.xyRatios),i.globals.axisCharts&&(i.globals.isXNumeric||i.config.xaxis.convertedCatToNumeric))(i.config.chart.zoom.enabled||i.config.chart.selection&&i.config.chart.selection.enabled||i.config.chart.pan&&i.config.chart.pan.enabled)&&n.zoomPanSelection.init({xyRatios:e.xyRatios});else{var u=i.config.chart.toolbar.tools;["zoom","zoomin","zoomout","selection","pan","reset"].forEach((function(t){u[t]=!1}))}i.config.chart.toolbar.show&&!i.globals.allSeriesCollapsed&&n.toolbar.createToolbar()}i.globals.memory.methodsToExec.length>0&&i.globals.memory.methodsToExec.forEach((function(t){t.method(t.params,!1,t.context)})),i.globals.axisCharts||i.globals.noData||n.core.resizeNonAxisCharts(),r(n)}))}},{key:"destroy",value:function(){window.removeEventListener("resize",this.windowResizeHandler),window.removeResizeListener(this.el.parentNode,this._parentResizeCallback.bind(this));var t=this.w.config.chart.id;t&&Apex._chartInstances.forEach((function(e,n){e.id===t&&Apex._chartInstances.splice(n,1)})),new _t(this.ctx).clear()}},{key:"updateOptions",value:function(t){var e=this,n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],o=this.w;return t.series&&(this.series.resetSeries(!1,!0,!1),t.series.length&&t.series[0].data&&(t.series=t.series.map((function(t,n){return e.updateHelpers._extendSeries(t,n)}))),this.updateHelpers.revertDefaultAxisMinMax()),t.xaxis&&(t=this.updateHelpers.forceXAxisUpdate(t)),t.yaxis&&(t=this.updateHelpers.forceYAxisUpdate(t)),o.globals.collapsedSeriesIndices.length>0&&this.series.clearPreviousPaths(),t.theme&&(t=this.theme.updateThemeOptions(t)),this.updateHelpers._updateOptions(t,n,i,r,a)}},{key:"updateSeries",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.series.resetSeries(!1),this.updateHelpers.revertDefaultAxisMinMax(),this.updateHelpers._updateSeries(t,e,n)}},{key:"appendSeries",value:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=this.w.config.series.slice();return i.push(t),this.series.resetSeries(!1),this.updateHelpers.revertDefaultAxisMinMax(),this.updateHelpers._updateSeries(i,e,n)}},{key:"appendData",value:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=this;n.w.globals.dataChanged=!0,n.series.getPreviousPaths();for(var i=n.w.config.series.slice(),r=0;r<i.length;r++)if(void 0!==t[r])for(var a=0;a<t[r].data.length;a++)i[r].data.push(t[r].data[a]);return n.w.config.series=i,e&&(n.w.globals.initialSeries=JSON.parse(JSON.stringify(n.w.config.series))),this.update()}},{key:"update",value:function(t){var e=this;return new Promise((function(n,i){new _t(e.ctx).clear();var r=e.create(e.w.config.series,t);if(!r)return n(e);e.mount(r).then((function(){"function"==typeof e.w.config.chart.events.updated&&e.w.config.chart.events.updated(e,e.w),e.events.fireEvent("updated",[e,e.w]),e.w.globals.isDirty=!0,n(e)})).catch((function(t){i(t)}))}))}},{key:"getSyncedCharts",value:function(){var t=this.getGroupedCharts(),e=[this];return t.length&&(e=[],t.forEach((function(t){e.push(t)}))),e}},{key:"getGroupedCharts",value:function(){var t=this;return Apex._chartInstances.filter((function(t){if(t.group)return!0})).map((function(e){return t.w.config.chart.group===e.group?e.chart:t}))}},{key:"toggleSeries",value:function(t){return this.series.toggleSeries(t)}},{key:"showSeries",value:function(t){this.series.showSeries(t)}},{key:"hideSeries",value:function(t){this.series.hideSeries(t)}},{key:"resetSeries",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.series.resetSeries(t)}},{key:"addEventListener",value:function(t,e){this.events.addEventListener(t,e)}},{key:"removeEventListener",value:function(t,e){this.events.removeEventListener(t,e)}},{key:"addXaxisAnnotation",value:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,i=this;n&&(i=n),i.annotations.addXaxisAnnotationExternal(t,e,i)}},{key:"addYaxisAnnotation",value:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,i=this;n&&(i=n),i.annotations.addYaxisAnnotationExternal(t,e,i)}},{key:"addPointAnnotation",value:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,i=this;n&&(i=n),i.annotations.addPointAnnotationExternal(t,e,i)}},{key:"clearAnnotations",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0,e=this;t&&(e=t),e.annotations.clearAnnotations(e)}},{key:"removeAnnotation",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,n=this;e&&(n=e),n.annotations.removeAnnotation(n,t)}},{key:"getChartArea",value:function(){return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner")}},{key:"getSeriesTotalXRange",value:function(t,e){return this.coreUtils.getSeriesTotalsXRange(t,e)}},{key:"getHighestValueInSeries",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=new V(this.ctx);return e.getMinYMaxY(t).highestY}},{key:"getLowestValueInSeries",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=new V(this.ctx);return e.getMinYMaxY(t).lowestY}},{key:"getSeriesTotal",value:function(){return this.w.globals.seriesTotals}},{key:"toggleDataPointSelection",value:function(t,e){return this.updateHelpers.toggleDataPointSelection(t,e)}},{key:"setLocale",value:function(t){this.localization.setCurrentLocaleValues(t)}},{key:"dataURI",value:function(){return new j(this.ctx).dataURI()}},{key:"paper",value:function(){return this.w.globals.dom.Paper}},{key:"_parentResizeCallback",value:function(){this.w.globals.animationEnded&&this.w.config.chart.redrawOnParentResize&&this._windowResize()}},{key:"_windowResize",value:function(){var t=this;clearTimeout(this.w.globals.resizeTimer),this.w.globals.resizeTimer=window.setTimeout((function(){t.w.globals.resized=!0,t.w.globals.dataChanged=!1,t.ctx.update()}),150)}}],[{key:"getChartByID",value:function(t){var e=Apex._chartInstances.filter((function(e){return e.id===t}))[0];return e&&e.chart}},{key:"initOnLoad",value:function(){for(var e=document.querySelectorAll("[data-apexcharts]"),n=0;n<e.length;n++)new t(e[n],JSON.parse(e[n].getAttribute("data-options"))).render()}},{key:"exec",value:function(t,e){var n=this.getChartByID(t);if(n){n.w.globals.isExecCalled=!0;var i=null;if(-1!==n.publicMethods.indexOf(e)){for(var r=arguments.length,a=new Array(r>2?r-2:0),o=2;o<r;o++)a[o-2]=arguments[o];i=n[e].apply(n,a)}return i}}},{key:"merge",value:function(t,e){return g.extend(t,e)}}]),t}();t.exports=It},function(t,e,n){"use strict";n.r(e);n(149);var i=n(0),r=n.n(i),a=n(140),o=n.n(a),s=n(17),l=n.n(s),c=n(2),u=n.n(c);function h(){return(h=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}function f(t){return"/"===t.charAt(0)}function d(t,e){for(var n=e,i=n+1,r=t.length;i<r;n+=1,i+=1)t[n]=t[i];t.pop()}var p=function(t,e){void 0===e&&(e="");var n,i=t&&t.split("/")||[],r=e&&e.split("/")||[],a=t&&f(t),o=e&&f(e),s=a||o;if(t&&f(t)?r=i:i.length&&(r.pop(),r=r.concat(i)),!r.length)return"/";if(r.length){var l=r[r.length-1];n="."===l||".."===l||""===l}else n=!1;for(var c=0,u=r.length;u>=0;u--){var h=r[u];"."===h?d(r,u):".."===h?(d(r,u),c++):c&&(d(r,u),c--)}if(!s)for(;c--;c)r.unshift("..");!s||""===r[0]||r[0]&&f(r[0])||r.unshift("");var p=r.join("/");return n&&"/"!==p.substr(-1)&&(p+="/"),p};var g=function(t,e){if(!t)throw new Error("Invariant failed")};function m(t){return"/"===t.charAt(0)?t:"/"+t}function v(t,e){return function(t,e){return 0===t.toLowerCase().indexOf(e.toLowerCase())&&-1!=="/?#".indexOf(t.charAt(e.length))}(t,e)?t.substr(e.length):t}function x(t){return"/"===t.charAt(t.length-1)?t.slice(0,-1):t}function b(t){var e=t.pathname,n=t.search,i=t.hash,r=e||"/";return n&&"?"!==n&&(r+="?"===n.charAt(0)?n:"?"+n),i&&"#"!==i&&(r+="#"===i.charAt(0)?i:"#"+i),r}function y(t,e,n,i){var r;"string"==typeof t?(r=function(t){var e=t||"/",n="",i="",r=e.indexOf("#");-1!==r&&(i=e.substr(r),e=e.substr(0,r));var a=e.indexOf("?");return-1!==a&&(n=e.substr(a),e=e.substr(0,a)),{pathname:e,search:"?"===n?"":n,hash:"#"===i?"":i}}(t)).state=e:(void 0===(r=h({},t)).pathname&&(r.pathname=""),r.search?"?"!==r.search.charAt(0)&&(r.search="?"+r.search):r.search="",r.hash?"#"!==r.hash.charAt(0)&&(r.hash="#"+r.hash):r.hash="",void 0!==e&&void 0===r.state&&(r.state=e));try{r.pathname=decodeURI(r.pathname)}catch(t){throw t instanceof URIError?new URIError('Pathname "'+r.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):t}return n&&(r.key=n),i?r.pathname?"/"!==r.pathname.charAt(0)&&(r.pathname=p(r.pathname,i.pathname)):r.pathname=i.pathname:r.pathname||(r.pathname="/"),r}function w(){var t=null;var e=[];return{setPrompt:function(e){return t=e,function(){t===e&&(t=null)}},confirmTransitionTo:function(e,n,i,r){if(null!=t){var a="function"==typeof t?t(e,n):t;"string"==typeof a?"function"==typeof i?i(a,r):r(!0):r(!1!==a)}else r(!0)},appendListener:function(t){var n=!0;function i(){n&&t.apply(void 0,arguments)}return e.push(i),function(){n=!1,e=e.filter((function(t){return t!==i}))}},notifyListeners:function(){for(var t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];e.forEach((function(t){return t.apply(void 0,n)}))}}}var k=!("undefined"==typeof window||!window.document||!window.document.createElement);function S(t,e){e(window.confirm(t))}function C(){try{return window.history.state||{}}catch(t){return{}}}function A(t){void 0===t&&(t={}),k||g(!1);var e,n=window.history,i=(-1===(e=window.navigator.userAgent).indexOf("Android 2.")&&-1===e.indexOf("Android 4.0")||-1===e.indexOf("Mobile Safari")||-1!==e.indexOf("Chrome")||-1!==e.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,r=!(-1===window.navigator.userAgent.indexOf("Trident")),a=t,o=a.forceRefresh,s=void 0!==o&&o,l=a.getUserConfirmation,c=void 0===l?S:l,u=a.keyLength,f=void 0===u?6:u,d=t.basename?x(m(t.basename)):"";function p(t){var e=t||{},n=e.key,i=e.state,r=window.location,a=r.pathname+r.search+r.hash;return d&&(a=v(a,d)),y(a,i,n)}function A(){return Math.random().toString(36).substr(2,f)}var E=w();function P(t){h(X,t),X.length=n.length,E.notifyListeners(X.location,X.action)}function T(t){(function(t){return void 0===t.state&&-1===navigator.userAgent.indexOf("CriOS")})(t)||M(p(t.state))}function O(){M(p(C()))}var L=!1;function M(t){if(L)L=!1,P();else{E.confirmTransitionTo(t,"POP",c,(function(e){e?P({action:"POP",location:t}):function(t){var e=X.location,n=I.indexOf(e.key);-1===n&&(n=0);var i=I.indexOf(t.key);-1===i&&(i=0);var r=n-i;r&&(L=!0,R(r))}(t)}))}}var _=p(C()),I=[_.key];function N(t){return d+b(t)}function R(t){n.go(t)}var z=0;function F(t){1===(z+=t)&&1===t?(window.addEventListener("popstate",T),r&&window.addEventListener("hashchange",O)):0===z&&(window.removeEventListener("popstate",T),r&&window.removeEventListener("hashchange",O))}var D=!1;var X={length:n.length,action:"POP",location:_,createHref:N,push:function(t,e){var r=y(t,e,A(),X.location);E.confirmTransitionTo(r,"PUSH",c,(function(t){if(t){var e=N(r),a=r.key,o=r.state;if(i)if(n.pushState({key:a,state:o},null,e),s)window.location.href=e;else{var l=I.indexOf(X.location.key),c=I.slice(0,l+1);c.push(r.key),I=c,P({action:"PUSH",location:r})}else window.location.href=e}}))},replace:function(t,e){var r=y(t,e,A(),X.location);E.confirmTransitionTo(r,"REPLACE",c,(function(t){if(t){var e=N(r),a=r.key,o=r.state;if(i)if(n.replaceState({key:a,state:o},null,e),s)window.location.replace(e);else{var l=I.indexOf(X.location.key);-1!==l&&(I[l]=r.key),P({action:"REPLACE",location:r})}else window.location.replace(e)}}))},go:R,goBack:function(){R(-1)},goForward:function(){R(1)},block:function(t){void 0===t&&(t=!1);var e=E.setPrompt(t);return D||(F(1),D=!0),function(){return D&&(D=!1,F(-1)),e()}},listen:function(t){var e=E.appendListener(t);return F(1),function(){F(-1),e()}}};return X}var E=n(12),P=n.n(E),T=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t};function O(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function L(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var M=function(t){function e(){var n,i;O(this,e);for(var r=arguments.length,a=Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=i=L(this,t.call.apply(t,[this].concat(a))),i.state={match:i.computeMatch(i.props.history.location.pathname)},L(i,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.getChildContext=function(){return{router:T({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},e.prototype.computeMatch=function(t){return{path:"/",url:"/",params:{},isExact:"/"===t}},e.prototype.componentWillMount=function(){var t=this,e=this.props,n=e.children,i=e.history;P()(null==n||1===r.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=i.listen((function(){t.setState({match:t.computeMatch(i.location.pathname)})}))},e.prototype.componentWillReceiveProps=function(t){l()(this.props.history===t.history,"You cannot change <Router history>")},e.prototype.componentWillUnmount=function(){this.unlisten()},e.prototype.render=function(){var t=this.props.children;return t?r.a.Children.only(t):null},e}(r.a.Component);M.propTypes={history:u.a.object.isRequired,children:u.a.node},M.contextTypes={router:u.a.object},M.childContextTypes={router:u.a.object.isRequired};var _=M;function I(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function N(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var R=function(t){function e(){var n,i;I(this,e);for(var r=arguments.length,a=Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=i=N(this,t.call.apply(t,[this].concat(a))),i.history=A(i.props),N(i,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.componentWillMount=function(){l()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},e.prototype.render=function(){return r.a.createElement(_,{history:this.history,children:this.props.children})},e}(r.a.Component);R.propTypes={basename:u.a.string,forceRefresh:u.a.bool,getUserConfirmation:u.a.func,keyLength:u.a.number,children:u.a.node};var z=R,F=n(97),D=function(){return Math.random().toString(36).substring(7).split("").join(".")},X={INIT:"@@redux/INIT"+D(),REPLACE:"@@redux/REPLACE"+D(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+D()}};function Y(t){if("object"!=typeof t||null===t)return!1;for(var e=t;null!==Object.getPrototypeOf(e);)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(t)===e}function j(t,e){var n=e&&e.type;return"Given "+(n&&'action "'+String(n)+'"'||"an action")+', reducer "'+t+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function W(t,e){return function(){return e(t.apply(this,arguments))}}function H(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function B(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable})))),i.forEach((function(e){H(t,e,n[e])}))}return t}function V(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return 0===e.length?function(t){return t}:1===e.length?e[0]:e.reduce((function(t,e){return function(){return t(e.apply(void 0,arguments))}}))}function U(t){return function(e){var n=e.dispatch,i=e.getState;return function(e){return function(r){return"function"==typeof r?r(n,i,t):e(r)}}}}var G=U();G.withExtraArgument=U;var q=G;function $(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}var Z=r.a.createContext(null),K=function(t){function e(e){var n;n=t.call(this,e)||this;var i=e.store;return n.state={storeState:i.getState(),store:i},n}$(e,t);var n=e.prototype;return n.componentDidMount=function(){this._isMounted=!0,this.subscribe()},n.componentWillUnmount=function(){this.unsubscribe&&this.unsubscribe(),this._isMounted=!1},n.componentDidUpdate=function(t){this.props.store!==t.store&&(this.unsubscribe&&this.unsubscribe(),this.subscribe())},n.subscribe=function(){var t=this,e=this.props.store;this.unsubscribe=e.subscribe((function(){var n=e.getState();t._isMounted&&t.setState((function(t){return t.storeState===n?null:{storeState:n}}))}));var n=e.getState();n!==this.state.storeState&&this.setState({storeState:n})},n.render=function(){var t=this.props.context||Z;return r.a.createElement(t.Provider,{value:this.state},this.props.children)},e}(i.Component);K.propTypes={store:u.a.shape({subscribe:u.a.func.isRequired,dispatch:u.a.func.isRequired,getState:u.a.func.isRequired}),context:u.a.object,children:u.a.any};var Q=K;function J(t,e){if(null==t)return{};var n,i,r={},a=Object.keys(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}var tt=n(96),et=n.n(tt),nt=n(94);function it(t,e){void 0===e&&(e={});var n=e,a=n.getDisplayName,o=void 0===a?function(t){return"ConnectAdvanced("+t+")"}:a,s=n.methodName,l=void 0===s?"connectAdvanced":s,c=n.renderCountProp,u=void 0===c?void 0:c,f=n.shouldHandleStateChanges,d=void 0===f||f,p=n.storeKey,g=void 0===p?"store":p,m=n.withRef,v=void 0!==m&&m,x=n.forwardRef,b=void 0!==x&&x,y=n.context,w=void 0===y?Z:y,k=J(n,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef","forwardRef","context"]);P()(void 0===u,"renderCountProp is removed. render counting is built into the latest React dev tools profiling extension"),P()(!v,"withRef is removed. To access the wrapped instance, use a ref on the connected component");var S="To use a custom Redux store for specific components,  create a custom React context with React.createContext(), and pass the context object to React Redux's Provider and specific components like:  <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. You may also pass a {context : MyContext} option to connect";P()("store"===g,"storeKey has been removed and does not do anything. "+S);var C=w;return function(e){var n=e.displayName||e.name||"Component",a=o(n),s=h({},k,{getDisplayName:o,methodName:l,renderCountProp:u,shouldHandleStateChanges:d,storeKey:g,displayName:a,wrappedComponentName:n,WrappedComponent:e}),c=k.pure,f=i.Component;c&&(f=i.PureComponent);var p=function(n){function i(e){var i,a,o,s,l,u,f,d,p,m,v;return i=n.call(this,e)||this,P()(b?!e.wrapperProps[g]:!e[g],"Passing redux store in props has been removed and does not do anything. "+S),i.selectDerivedProps=function(e,n,i,r){if(c&&a===n&&o===e)return s;i===l&&u===r||(l=i,u=r,f=t(i.dispatch,r)),a=n,o=e;var h=f(e,n);return s=h},i.selectChildElement=function(t,e,n){return e===d&&n===p&&v===t||(d=e,p=n,v=t,m=r.a.createElement(t,h({},e,{ref:n}))),m},i.indirectRenderWrappedComponent=i.indirectRenderWrappedComponent.bind(function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(i)),i}$(i,n);var o=i.prototype;return o.indirectRenderWrappedComponent=function(t){return this.renderWrappedComponent(t)},o.renderWrappedComponent=function(t){P()(t,'Could not find "store" in the context of "'+a+'". Either wrap the root component in a <Provider>, or pass a custom React context provider to <Provider> and the corresponding React context consumer to '+a+" in connect options.");var n,i=t.storeState,r=t.store,o=this.props;b&&(o=this.props.wrapperProps,n=this.props.forwardedRef);var l=this.selectDerivedProps(i,o,r,s);return this.selectChildElement(e,l,n)},o.render=function(){var t=this.props.context&&this.props.context.Consumer&&Object(nt.isContextConsumer)(r.a.createElement(this.props.context.Consumer,null))?this.props.context:C;return r.a.createElement(t.Consumer,null,this.indirectRenderWrappedComponent)},i}(f);if(p.WrappedComponent=e,p.displayName=a,b){var m=r.a.forwardRef((function(t,e){return r.a.createElement(p,{wrapperProps:t,forwardedRef:e})}));return m.displayName=a,m.WrappedComponent=e,et()(m,e)}return et()(p,e)}}var rt=Object.prototype.hasOwnProperty;function at(t,e){return t===e?0!==t||0!==e||1/t==1/e:t!=t&&e!=e}function ot(t,e){if(at(t,e))return!0;if("object"!=typeof t||null===t||"object"!=typeof e||null===e)return!1;var n=Object.keys(t),i=Object.keys(e);if(n.length!==i.length)return!1;for(var r=0;r<n.length;r++)if(!rt.call(e,n[r])||!at(t[n[r]],e[n[r]]))return!1;return!0}function st(t){return function(e,n){var i=t(e,n);function r(){return i}return r.dependsOnOwnProps=!1,r}}function lt(t){return null!==t.dependsOnOwnProps&&void 0!==t.dependsOnOwnProps?Boolean(t.dependsOnOwnProps):1!==t.length}function ct(t,e){return function(e,n){n.displayName;var i=function(t,e){return i.dependsOnOwnProps?i.mapToProps(t,e):i.mapToProps(t)};return i.dependsOnOwnProps=!0,i.mapToProps=function(e,n){i.mapToProps=t,i.dependsOnOwnProps=lt(t);var r=i(e,n);return"function"==typeof r&&(i.mapToProps=r,i.dependsOnOwnProps=lt(r),r=i(e,n)),r},i}}var ut=[function(t){return"function"==typeof t?ct(t):void 0},function(t){return t?void 0:st((function(t){return{dispatch:t}}))},function(t){return t&&"object"==typeof t?st((function(e){return function(t,e){if("function"==typeof t)return W(t,e);if("object"!=typeof t||null===t)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===t?"null":typeof t)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');for(var n=Object.keys(t),i={},r=0;r<n.length;r++){var a=n[r],o=t[a];"function"==typeof o&&(i[a]=W(o,e))}return i}(t,e)})):void 0}];var ht=[function(t){return"function"==typeof t?ct(t):void 0},function(t){return t?void 0:st((function(){return{}}))}];function ft(t,e,n){return h({},n,t,e)}var dt=[function(t){return"function"==typeof t?function(t){return function(e,n){n.displayName;var i,r=n.pure,a=n.areMergedPropsEqual,o=!1;return function(e,n,s){var l=t(e,n,s);return o?r&&a(l,i)||(i=l):(o=!0,i=l),i}}}(t):void 0},function(t){return t?void 0:function(){return ft}}];function pt(t,e,n,i){return function(r,a){return n(t(r,a),e(i,a),a)}}function gt(t,e,n,i,r){var a,o,s,l,c,u=r.areStatesEqual,h=r.areOwnPropsEqual,f=r.areStatePropsEqual,d=!1;function p(r,d){var p,g,m=!h(d,o),v=!u(r,a);return a=r,o=d,m&&v?(s=t(a,o),e.dependsOnOwnProps&&(l=e(i,o)),c=n(s,l,o)):m?(t.dependsOnOwnProps&&(s=t(a,o)),e.dependsOnOwnProps&&(l=e(i,o)),c=n(s,l,o)):v?(p=t(a,o),g=!f(p,s),s=p,g&&(c=n(s,l,o)),c):c}return function(r,u){return d?p(r,u):(s=t(a=r,o=u),l=e(i,o),c=n(s,l,o),d=!0,c)}}function mt(t,e){var n=e.initMapStateToProps,i=e.initMapDispatchToProps,r=e.initMergeProps,a=J(e,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),o=n(t,a),s=i(t,a),l=r(t,a);return(a.pure?gt:pt)(o,s,l,t,a)}function vt(t,e,n){for(var i=e.length-1;i>=0;i--){var r=e[i](t);if(r)return r}return function(e,i){throw new Error("Invalid value of type "+typeof t+" for "+n+" argument when connecting component "+i.wrappedComponentName+".")}}function xt(t,e){return t===e}wt=(yt=void 0===bt?{}:bt).connectHOC,kt=void 0===wt?it:wt,St=yt.mapStateToPropsFactories,Ct=void 0===St?ht:St,At=yt.mapDispatchToPropsFactories,Et=void 0===At?ut:At,Pt=yt.mergePropsFactories,Tt=void 0===Pt?dt:Pt,Ot=yt.selectorFactory,Lt=void 0===Ot?mt:Ot,n(65);var bt,yt,wt,kt,St,Ct,At,Et,Pt,Tt,Ot,Lt,Mt=n(142),_t=(n.n(Mt).a.prototype.computeMatch,n(143)),It=n.n(_t),Nt=n(144),Rt=n.n(Nt),zt=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},Ft=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t?r.a.createElement(It.a,null,t.map((function(t,n){return r.a.createElement(Rt.a,{key:t.key||n,path:t.path,exact:t.exact,strict:t.strict,render:function(n){return r.a.createElement(t.component,zt({},n,e,{route:t}))}})}))):null},Dt=(n(145),{newsAPI:"8e49f5f6b8344c59b7c237483cd82f52",nasaAPI:"gZz5mBoJGacefszsQDeUqvC1EsIOFbeTzedrmasE"});var Xt=function(t){for(var e=Object.keys(t),n={},i=0;i<e.length;i++){var r=e[i];0,"function"==typeof t[r]&&(n[r]=t[r])}var a,o=Object.keys(n);try{!function(t){Object.keys(t).forEach((function(e){var n=t[e];if(void 0===n(void 0,{type:X.INIT}))throw new Error('Reducer "'+e+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===n(void 0,{type:X.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+e+"\" returned undefined when probed with a random type. Don't try to handle "+X.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')}))}(n)}catch(t){a=t}return function(t,e){if(void 0===t&&(t={}),a)throw a;for(var i=!1,r={},s=0;s<o.length;s++){var l=o[s],c=n[l],u=t[l],h=c(u,e);if(void 0===h){var f=j(l,e);throw new Error(f)}r[l]=h,i=i||h!==u}return i?r:t}}({articles:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"fetch_articles":return e.payload;default:return t}}});function Yt(t){return(Yt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function jt(t){var e=t.contents.items;return r.a.createElement("div",{className:"client-app-main margin-side"},"object"===Yt(e)&&r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"dashboard-main"},e.map((function(t,e){return r.a.createElement("div",{className:"dash-mediabox"},r.a.createElement("h2",{className:"title"},t.title),r.a.createElement("img",{src:t.icon}),r.a.createElement("p",null,t.content))})))))}var Wt=n(146);function Ht(t){return(Ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Bt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Vt(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Ut(t,e){return!e||"object"!==Ht(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Gt(t){return(Gt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function qt(t,e){return(qt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var $t=function(t){function e(){return Bt(this,e),Ut(this,Gt(e).apply(this,arguments))}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&qt(t,e)}(e,t),n=e,(i=[{key:"render",value:function(){return r.a.createElement(jt,{contents:Wt})}}])&&Vt(n.prototype,i),a&&Vt(n,a),e}(r.a.Component),Zt=function(t){var e=t.staticContext;return(void 0===e?{}:e).notFound=!0,r.a.createElement("div",{className:"ui container"},r.a.createElement("h1",null,"Page Not Found!!!"),r.a.createElement("p",null,"Please try again!"))};Zt.propTypes={staticContext:u.a.objectOf(u.a.any)},Zt.defaultProps={staticContext:{}};var Kt=Zt;function Qt(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Jt(t){return(Jt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function te(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function ee(t){return(ee=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ne(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function ie(t,e){return(ie=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var re=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=function(t,e){return!e||"object"!==Jt(e)&&"function"!=typeof e?ne(t):e}(this,ee(e).call(this,t))).state={items:[]},n.interval="",n.getJokeService=n.getJokeService.bind(ne(n)),n}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ie(t,e)}(e,t),n=e,(i=[{key:"componentDidMount",value:function(){this.getJokeService(),this.interval=setInterval(this.getJokeService,1e5)}},{key:"componentWillUnmount",value:function(){clearTimeout(this.interval)}},{key:"getJokeService",value:function(){var t=this;fetch("https://sv443.net/jokeapi/v2/joke/any").then((function(t){return t.json()})).then((function(e){t.setState({items:e})})).catch((function(t){throw new Error(t)}))}},{key:"render",value:function(){var t=this;return r.a.createElement("div",{className:"margin-side"},r.a.createElement("div",null,r.a.createElement("div",{className:"mediabox"},r.a.createElement("div",{className:"info-container"},r.a.createElement("h2",{className:"title"},this.state.items.category),"single"===this.state.items.type&&r.a.createElement("div",{className:"single-content"},r.a.createElement("p",null,this.state.items.joke)),"twopart"===this.state.items.type&&r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"double-content"},r.a.createElement("p",{className:"double-qs"},this.state.items.setup),r.a.createElement("p",null,this.state.items.delivery)))),"object"===Jt(this.state.items.flags)&&r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"checkbox-info-container"},Object.keys(this.state.items.flags).map((function(e,n){var i;return r.a.createElement("div",{className:"check-sec",htmlFor:e,key:e},r.a.createElement("input",(Qt(i={id:e},"id",e),Qt(i,"type","checkbox"),Qt(i,"name",e),Qt(i,"checked",t.state.items.flags[e]),i)),r.a.createElement("label",{htmlFor:e,className:"checkBox-label"},r.a.createElement("svg",{viewBox:"0,0,50,50"},r.a.createElement("path",{d:"M5 30 L 20 45 L 45 5"}))),r.a.createElement("div",{className:"label-val"},e))}))))),r.a.createElement("p",null,r.a.createElement("small",null,"*Automatic content reload less then 2 mins")),r.a.createElement("p",null,r.a.createElement("small",null,"Courtesy: JOKE-API"))))}}])&&te(n.prototype,i),a&&te(n,a),e}(r.a.Component);function ae(t){return(ae="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var oe=function(t,e){var n=300;"number"==typeof e?n=e:"object"===ae(e)&&(n=e.seconds||n);var i=t,r=localStorage.getItem(i),a=localStorage.getItem("".concat(i,":ts"));if(null!==r&&null!==a){if((Date.now()-a)/1e3<n){var o=new Response(new Blob([r]));return Promise.resolve(o)}localStorage.removeItem(i),localStorage.removeItem("".concat(i,":ts"))}return fetch(t,e).then((function(t){if(200===t.status){var e=t.headers.get("Content-Type");e&&(e.match(/application\/json/i)||e.match(/text\//i))&&t.clone().text().then((function(t){localStorage.setItem(i,t),localStorage.setItem("".concat(i,":ts"),Date.now())}))}return t}))};function se(t){return(se="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function le(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function ce(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function ue(t,e){return!e||"object"!==se(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function he(t){return(he=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function fe(t,e){return(fe=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var de=function(t){function e(){return le(this,e),ue(this,he(e).apply(this,arguments))}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&fe(t,e)}(e,t),n=e,(i=[{key:"render",value:function(){var t=this.props.itemType,e=this.props.items||[],n=this.createItemsMarkup(e,t);return r.a.createElement("ul",{className:"ulListItem"},n)}},{key:"createItemsMarkup",value:function(t,e){return t.map((function(t,n){return r.a.createElement("li",{className:"liListItem",key:n},r.a.createElement(e,{data:t,key:n}))}))}}])&&ce(n.prototype,i),a&&ce(n,a),e}(r.a.Component);function pe(t){return(pe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ge(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function me(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function ve(t,e){return!e||"object"!==pe(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function xe(t){return(xe=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function be(t,e){return(be=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ye=function(t){function e(){return ge(this,e),ve(this,xe(e).apply(this,arguments))}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&be(t,e)}(e,t),n=e,(i=[{key:"render",value:function(){var t=this.props.data;return r.a.createElement("div",{className:"news-content mediabox"},r.a.createElement("h2",{className:"title"},t.title),r.a.createElement("h3",{className:"title"},"By ",r.a.createElement("span",null,t.author)),r.a.createElement("h3",{className:"publish"},"Update:",t.publishedAt),r.a.createElement("img",{className:"icon",src:t.urlToImage}),r.a.createElement("div",{className:"info-container"},r.a.createElement("p",null,t.description),r.a.createElement("br",null),r.a.createElement("p",null,t.content),r.a.createElement("p",null,r.a.createElement("a",{className:"external-link",href:t.url,target:"_blank"},"External Link more details: ",t.source.name))))}}])&&me(n.prototype,i),a&&me(n,a),e}(r.a.Component);function we(t){return(we="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ke(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Se(t){return(Se=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ce(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function Ae(t,e){return(Ae=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Ee=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=function(t,e){return!e||"object"!==we(e)&&"function"!=typeof e?Ce(t):e}(this,Se(e).call(this,t))).state={currentNews:[]},n.interval="",n.getCurrentNewsService=n.getCurrentNewsService.bind(Ce(n)),n}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ae(t,e)}(e,t),n=e,(i=[{key:"componentDidMount",value:function(){this.getCurrentNewsService(),this.interval=setInterval(this.getJokeService,1e5)}},{key:"componentWillUnmount",value:function(){clearTimeout(this.interval)}},{key:"getCurrentNewsService",value:function(){var t=this;oe("https://newsapi.org/v2/everything?q=apple&from=".concat((new Date).toISOString().slice(0,10),"&to=").concat((new Date).toISOString().slice(0,10),"&sortBy=popularity&apiKey=").concat(Dt.newsAPI),{seconds:2e3,crossDomain:!0}).then((function(t){return t.json()})).then((function(e){t.setState({currentNews:e.articles})}))}},{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement("div",{className:"client-app-main margin-side"},r.a.createElement("div",{className:"content"},r.a.createElement(de,{items:this.state.currentNews,itemType:ye}),r.a.createElement("p",null,r.a.createElement("small",null,"Courtesy: News API")))))}}])&&ke(n.prototype,i),a&&ke(n,a),e}(r.a.Component);function Pe(t){return(Pe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Te(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Oe(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Le(t,e){return!e||"object"!==Pe(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Me(t){return(Me=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _e(t,e){return(_e=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Ie=function(t){function e(){return Te(this,e),Le(this,Me(e).apply(this,arguments))}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_e(t,e)}(e,t),n=e,(i=[{key:"render",value:function(){var t=this.props.itemType,e=this.props.items||[],n=this.createItemsMarkup(e,t);return r.a.createElement("ul",{className:"ulListItem"},n)}},{key:"createItemsMarkup",value:function(t,e){return t.map((function(t){return r.a.createElement("li",{className:"liListItem",key:t.id},r.a.createElement(e,{data:t}))}))}}])&&Oe(n.prototype,i),a&&Oe(n,a),e}(r.a.Component);function Ne(t){return(Ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Re(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function ze(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Fe(t,e){return!e||"object"!==Ne(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function De(t){return(De=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Xe(t,e){return(Xe=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Ye=function(t){function e(){return Re(this,e),Fe(this,De(e).apply(this,arguments))}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Xe(t,e)}(e,t),n=e,(i=[{key:"render",value:function(){var t=this.props.data;return r.a.createElement("div",{className:"mediabox"},r.a.createElement("h2",{className:"title"},t.camera.full_name),r.a.createElement("h3",{className:"publish"},"Updated:",t.earth_date),r.a.createElement("img",{className:"icon",src:t.img_src}),r.a.createElement("div",{className:"info-container"},r.a.createElement("p",null,t.camera.name),r.a.createElement("p",{className:"margin-all-0"},"Rover Name:",t.rover.name),r.a.createElement("p",{className:"margin-all-0"},"Status:",t.rover.status)))}}])&&ze(n.prototype,i),a&&ze(n,a),e}(r.a.Component);function je(t){return(je="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function We(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function He(t,e){return!e||"object"!==je(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Be(t){return(Be=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ve(t,e){return(Ve=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Ue=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=He(this,Be(e).call(this,t))).state={items:[]},n}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ve(t,e)}(e,t),n=e,(i=[{key:"componentDidMount",value:function(){var t=this;oe("https://api.nasa.gov/planetary/apod?api_key=".concat(Dt.nasaAPI),{seconds:2e3,crossDomain:!0}).then((function(t){return t.json()})).then((function(e){t.setState({items:e})})).catch((function(t){throw new Error(t)}))}},{key:"render",value:function(){return r.a.createElement("div",{className:"mediabox"},r.a.createElement("h3",{className:"title"},this.state.items.title),r.a.createElement("p",{className:"publish"},"Updated:",this.state.items.date),r.a.createElement("img",{src:this.state.items.hdurl}),r.a.createElement("div",{className:"info-container"},r.a.createElement("p",null,this.state.items.explanation)))}}])&&We(n.prototype,i),a&&We(n,a),e}(r.a.Component);function Ge(t){return(Ge="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function qe(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function $e(t,e){return!e||"object"!==Ge(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ze(t){return(Ze=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Ke(t,e){return(Ke=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Qe=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=$e(this,Ze(e).call(this,t))).state={items:[]},n}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ke(t,e)}(e,t),n=e,(i=[{key:"componentDidMount",value:function(){var t=this;oe("https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=2015-6-3&api_key=".concat(Dt.nasaAPI),{seconds:2e3,crossDomain:!0}).then((function(t){return t.json()})).then((function(e){t.setState({items:e.photos})})).catch((function(t){throw new Error(t)}))}},{key:"render",value:function(){return r.a.createElement("section",null,r.a.createElement("div",{className:"section-content client-app-main margin-side"},r.a.createElement("h2",null,"APOD - Astronomy Picture of the Day"),r.a.createElement(Ue,null)),r.a.createElement("div",{className:"section-content client-app-main margin-side"},r.a.createElement("h2",null,"Curiosity Mars rovers 2015"),r.a.createElement(Ie,{items:this.state.items,itemType:Ye})),r.a.createElement("p",null,r.a.createElement("small",null,"Courtesy: NASA API")))}}])&&qe(n.prototype,i),a&&qe(n,a),e}(r.a.Component),Je=function(t){var e=t.handler,n=t.data;return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{id:"modal1",className:"modal",style:{zIndex:1003,display:"block",opacity:1,top:10,width:"95vw",height:"95vh",maxHeight:"95vh"}},r.a.createElement("div",{className:"modal-footer"},r.a.createElement("a",{href:"#",onClick:e,className:"modal-close waves-effect waves-green btn red"},"Close")),r.a.createElement("div",{className:"modal-content"},r.a.createElement("div",{className:"row"},r.a.createElement("div",{className:"col-25"},r.a.createElement("h2",{className:"title"},n.companyName),r.a.createElement("img",{className:"responsive-img",src:n.image,alt:n.companyName})),r.a.createElement("div",{className:"col-75"},r.a.createElement("p",null,n.industry),r.a.createElement("p",null,n.ceo),r.a.createElement("p",null,n.sector),r.a.createElement("p",null,n.description),r.a.createElement("a",{href:n.website,target:"_blank"},n.website))))),r.a.createElement("div",{role:"presentation",className:"modal-overlay",onClick:e,style:{zIndex:1002,display:"block",opacity:.5}}))};Je.propTypes={data:u.a.objectOf(u.a.any),handler:u.a.func},Je.defaultProps={data:null,handler:null};var tn=Je;function en(t){return(en="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function nn(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function rn(t){return(rn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function an(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function on(t,e){return(on=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var sn=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=function(t,e){return!e||"object"!==en(e)&&"function"!=typeof e?an(t):e}(this,rn(e).call(this,t))).state={showComponent:!1},n.readProfile=n.readProfile.bind(an(n)),n.closeModal=n.closeModal.bind(an(n)),n}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&on(t,e)}(e,t),n=e,(i=[{key:"componentDidMount",value:function(){}},{key:"closeModal",value:function(){this.setState({showComponent:!1})}},{key:"readProfile",value:function(){this.setState({showComponent:!0})}},{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("h2",{className:"title"},this.props.profile.companyName),r.a.createElement("div",{className:"gen-row"},r.a.createElement("div",{className:"gen-col-2"},r.a.createElement("p",null,this.props.profile.symbol),r.a.createElement("p",null,this.props.profile.exchange),r.a.createElement("div",null,r.a.createElement("a",{href:"#",onClick:this.readProfile},"Profile More Details"),this.state.showComponent?r.a.createElement(tn,{handler:this.closeModal,data:this.props.profile}):null),r.a.createElement("p",null,r.a.createElement("span",null,"$",this.props.profile.price))),r.a.createElement("div",{className:"gen-col-2"},r.a.createElement("p",null,this.props.profile.changesPercentage)),r.a.createElement("div",{className:"gen-col-2"},r.a.createElement("p",null,this.props.profile.changes)),r.a.createElement("div",{className:"gen-col-2"},r.a.createElement("p",null,this.props.profile.lastDiv)),r.a.createElement("div",{className:"gen-col-2"},r.a.createElement("p",null,this.props.profile.volAvg)),r.a.createElement("div",{className:"gen-col-2"},r.a.createElement("p",null,this.props.profile.range))))}}])&&nn(n.prototype,i),a&&nn(n,a),e}(r.a.Component),ln=n(147),cn=n.n(ln);function un(t){return(un="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function hn(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function fn(t,e){return!e||"object"!==un(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function dn(t){return(dn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function pn(t,e){return(pn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var gn=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=fn(this,dn(e).call(this,t))).state={series:[{name:"Net Profit",data:[44,55,57,56,61,58,63,60,66]},{name:"Revenue",data:[76,85,101,98,87,105,91,114,94]},{name:"Free Cash Flow",data:[35,41,36,26,45,48,52,53,41]}],options:{chart:{type:"bar",height:350},plotOptions:{bar:{horizontal:!1,columnWidth:"55%",endingShape:"rounded"}},dataLabels:{enabled:!1},stroke:{show:!0,width:2,colors:["transparent"]},xaxis:{categories:["Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct"]},yaxis:{title:{text:"$ (thousands)"}},fill:{opacity:1},tooltip:{y:{formatter:function(t){return"$ ".concat(t," thousands")}}}}},n}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&pn(t,e)}(e,t),n=e,(i=[{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"profile-charts"},r.a.createElement("div",{className:"row"},r.a.createElement("div",{className:"mixed-chart"},r.a.createElement(cn.a,{options:this.state.options,series:this.state.series,type:"bar",width:"500"})))))}}])&&hn(n.prototype,i),a&&hn(n,a),e}(r.a.Component);function mn(t){return(mn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function vn(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function xn(t,e){return!e||"object"!==mn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function bn(t){return(bn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function yn(t,e){return(yn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var wn=function(t){function e(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),xn(this,bn(e).call(this,t))}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&yn(t,e)}(e,t),n=e,(i=[{key:"componentDidMount",value:function(){}},{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("h2",{className:"title"},this.props.quotes.name),r.a.createElement("div",{className:"gen-row"},r.a.createElement("div",{className:"gen-col-4"},r.a.createElement("p",null,this.props.quotes.price),r.a.createElement("p",null,this.props.quotes.dayLow),r.a.createElement("p",null,this.props.quotes.dayHigh),r.a.createElement("p",null,this.props.quotes.yearHigh),r.a.createElement("p",null,this.props.quotes.yearLow),r.a.createElement("p",null,this.props.quotes.marketCap),r.a.createElement("p",null,this.props.quotes.priceAvg50),r.a.createElement("p",null,this.props.quotes.priceAvg200),r.a.createElement("p",null,this.props.quotes.volume),r.a.createElement("p",null,this.props.quotes.avgVolume),r.a.createElement("p",null,this.props.quotes.open),r.a.createElement("p",null,this.props.quotes.earningsAnnouncement),r.a.createElement("p",null,this.props.quotes.timestamp)),r.a.createElement("div",{className:"gen-col-8"},r.a.createElement(gn,null))))}}])&&vn(n.prototype,i),a&&vn(n,a),e}(r.a.Component);function kn(t){return(kn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Sn(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Cn(t){return(Cn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function An(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function En(t,e){return(En=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Pn=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=function(t,e){return!e||"object"!==kn(e)&&"function"!=typeof e?An(t):e}(this,Cn(e).call(this,t))).state={profile:[],profileQuote:[],noResults:!1},n.getFinanceService=n.getFinanceService.bind(An(n)),n}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&En(t,e)}(e,t),n=e,(i=[{key:"componentDidMount",value:function(){}},{key:"componentWillUnmount",value:function(){}},{key:"getFinanceService",value:function(t){var e=this;if(console.log(t.currentTarget.value),void 0!==t.currentTarget.value&&t.currentTarget.value.length>=3){var n=["https://financialmodelingprep.com/api/v3/company/profile/".concat(t.currentTarget.value),"https://financialmodelingprep.com/api/v3/quote/".concat(t.currentTarget.value)];Promise.all(n.map((function(t){return fetch(t).then((function(t){return t.json()})).catch((function(t){throw new Error(t)}))}))).then((function(t){e.setState({profile:t[0],profileQuote:t[1],noResults:void 0===t[0].profile})}))}}},{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"margin-side"},r.a.createElement("div",{className:"info-container"},r.a.createElement("h2",{className:"title"},"Heading 1"),r.a.createElement("div",{className:"search-box"},r.a.createElement("label",{htmlFor:"searchName"},"Search",r.a.createElement("input",{id:"searchName",placeholder:"Enter Profile name..",type:"text",onKeyUp:this.getFinanceService}))),r.a.createElement("div",{className:"finance-container"},this.state.noResults&&r.a.createElement("h2",null,"No results found"),this.state.profile.profile&&r.a.createElement(sn,{profile:this.state.profile.profile,symbol:this.state.profile.symbol})),r.a.createElement("div",{className:"quotes-container"},this.state.profileQuote[0]&&r.a.createElement(wn,{quotes:this.state.profileQuote[0]})))))}}])&&Sn(n.prototype,i),a&&Sn(n,a),e}(r.a.Component);function Tn(t){return(Tn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function On(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function Ln(t,e){return!e||"object"!==Tn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Mn(t){return(Mn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _n(t,e){return(_n=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var In=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=Ln(this,Mn(e).call(this,t))).state={error:null,errorInfo:null},n}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_n(t,e)}(e,t),n=e,(i=[{key:"componentDidCatch",value:function(t,e){this.setState({error:t,errorInfo:e})}},{key:"render",value:function(){var t=this.state,e=this.props.children;return t.errorInfo?r.a.createElement(r.a.Fragment,null,r.a.createElement("h2",null,"Something went wrong."),r.a.createElement("details",{style:{whiteSpace:"pre-wrap"}},t.error&&t.error.toString(),r.a.createElement("br",null),t.errorInfo.componentStack)):e}}])&&On(n.prototype,i),a&&On(n,a),e}(r.a.Component);In.propTypes={children:u.a.oneOfType([u.a.arrayOf(u.a.node),u.a.node]).isRequired};var Nn=In,Rn=n(95),zn=n.n(Rn),Fn={},Dn=0,Xn=function(t,e){var n=""+e.end+e.strict+e.sensitive,i=Fn[n]||(Fn[n]={});if(i[t])return i[t];var r=[],a={re:zn()(t,r,e),keys:r};return Dn<1e4&&(i[t]=a,Dn++),a},Yn=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof e&&(e={path:e});var i=e,r=i.path,a=i.exact,o=void 0!==a&&a,s=i.strict,l=void 0!==s&&s,c=i.sensitive,u=void 0!==c&&c;if(null==r)return n;var h=Xn(r,{end:o,strict:l,sensitive:u}),f=h.re,d=h.keys,p=f.exec(t);if(!p)return null;var g=p[0],m=p.slice(1),v=t===g;return o&&!v?null:{path:r,url:"/"===r&&""===g?"/":g,isExact:v,params:d.reduce((function(t,e,n){return t[e.name]=m[n],t}),{})}},jn=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t};function Wn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Hn(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var Bn=function(t){return 0===r.a.Children.count(t)},Vn=function(t){function e(){var n,i;Wn(this,e);for(var r=arguments.length,a=Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=i=Hn(this,t.call.apply(t,[this].concat(a))),i.state={match:i.computeMatch(i.props,i.context.router)},Hn(i,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.getChildContext=function(){return{router:jn({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},e.prototype.computeMatch=function(t,e){var n=t.computedMatch,i=t.location,r=t.path,a=t.strict,o=t.exact,s=t.sensitive;if(n)return n;P()(e,"You should not use <Route> or withRouter() outside a <Router>");var l=e.route,c=(i||l.location).pathname;return Yn(c,{path:r,strict:a,exact:o,sensitive:s},l.match)},e.prototype.componentWillMount=function(){l()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),l()(!(this.props.component&&this.props.children&&!Bn(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),l()(!(this.props.render&&this.props.children&&!Bn(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},e.prototype.componentWillReceiveProps=function(t,e){l()(!(t.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),l()(!(!t.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(t,e.router)})},e.prototype.render=function(){var t=this.state.match,e=this.props,n=e.children,i=e.component,a=e.render,o=this.context.router,s=o.history,l=o.route,c=o.staticContext,u={match:t,location:this.props.location||l.location,history:s,staticContext:c};return i?t?r.a.createElement(i,u):null:a?t?a(u):null:"function"==typeof n?n(u):n&&!Bn(n)?r.a.Children.only(n):null},e}(r.a.Component);Vn.propTypes={computedMatch:u.a.object,path:u.a.string,exact:u.a.bool,strict:u.a.bool,sensitive:u.a.bool,component:u.a.func,render:u.a.func,children:u.a.oneOfType([u.a.func,u.a.node]),location:u.a.object},Vn.contextTypes={router:u.a.shape({history:u.a.object.isRequired,route:u.a.object.isRequired,staticContext:u.a.object})},Vn.childContextTypes={router:u.a.object.isRequired};var Un=Vn,Gn=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t};function qn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function $n(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}var Zn=function(t){return!!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)},Kn=function(t){function e(){var n,i;qn(this,e);for(var r=arguments.length,a=Array(r),o=0;o<r;o++)a[o]=arguments[o];return n=i=$n(this,t.call.apply(t,[this].concat(a))),i.handleClick=function(t){if(i.props.onClick&&i.props.onClick(t),!t.defaultPrevented&&0===t.button&&!i.props.target&&!Zn(t)){t.preventDefault();var e=i.context.router.history,n=i.props,r=n.replace,a=n.to;r?e.replace(a):e.push(a)}},$n(i,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,t),e.prototype.render=function(){var t=this.props,e=(t.replace,t.to),n=t.innerRef,i=function(t,e){var n={};for(var i in t)e.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i]);return n}(t,["replace","to","innerRef"]);P()(this.context.router,"You should not use <Link> outside a <Router>"),P()(void 0!==e,'You must specify the "to" property');var a=this.context.router.history,o="string"==typeof e?y(e,null,null,a.location):e,s=a.createHref(o);return r.a.createElement("a",Gn({},i,{onClick:this.handleClick,href:s,ref:n}))},e}(r.a.Component);Kn.propTypes={onClick:u.a.func,target:u.a.string,replace:u.a.bool,to:u.a.oneOfType([u.a.string,u.a.object]).isRequired,innerRef:u.a.oneOfType([u.a.string,u.a.func])},Kn.defaultProps={replace:!1},Kn.contextTypes={router:u.a.shape({history:u.a.shape({push:u.a.func.isRequired,replace:u.a.func.isRequired,createHref:u.a.func.isRequired}).isRequired}).isRequired};var Qn=Kn,Jn=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},ti="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};var ei=function(t){var e=t.to,n=t.exact,i=t.strict,a=t.location,o=t.activeClassName,s=t.className,l=t.activeStyle,c=t.style,u=t.isActive,h=t["aria-current"],f=function(t,e){var n={};for(var i in t)e.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i]);return n}(t,["to","exact","strict","location","activeClassName","className","activeStyle","style","isActive","aria-current"]),d="object"===(void 0===e?"undefined":ti(e))?e.pathname:e,p=d&&d.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1");return r.a.createElement(Un,{path:p,exact:n,strict:i,location:a,children:function(t){var n=t.location,i=t.match,a=!!(u?u(i,n):i);return r.a.createElement(Qn,Jn({to:e,className:a?[s,o].filter((function(t){return t})).join(" "):s,style:a?Jn({},c,l):c,"aria-current":a&&h||null},f))}})};ei.propTypes={to:Qn.propTypes.to,exact:u.a.bool,strict:u.a.bool,location:u.a.object,activeClassName:u.a.string,className:u.a.string,activeStyle:u.a.object,style:u.a.object,isActive:u.a.func,"aria-current":u.a.oneOf(["page","step","location","date","time","true"])},ei.defaultProps={activeClassName:"active","aria-current":"page"};var ni=ei;function ii(t){return(ii="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ri(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function ai(t,e){return!e||"object"!==ii(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function oi(t){return(oi=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function si(t,e){return(si=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var li=function(t){function e(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),ai(this,oi(e).call(this,t))}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&si(t,e)}(e,t),n=e,(i=[{key:"render",value:function(){return r.a.createElement("div",{className:"client-app-top"},r.a.createElement("div",{className:"menuList tabs"},r.a.createElement("nav",null,r.a.createElement("ul",null,r.a.createElement("li",null,r.a.createElement(ni,{activeClassName:"tab-current",exact:!0,className:"fa fa-leaf",to:"/"},r.a.createElement("span",null,"Headlines"))),r.a.createElement("li",null,r.a.createElement(ni,{activeClassName:"tab-current",className:"fa fa-pagelines",to:"/news"},r.a.createElement("span",null,"News"))),r.a.createElement("li",null,r.a.createElement(ni,{activeClassName:"tab-current",className:"fa fa-magnet",to:"/science"},r.a.createElement("span",null,"Science"))),r.a.createElement("li",null,r.a.createElement(ni,{activeClassName:"tab-current",className:"fa fa-tree",to:"/jokes"},r.a.createElement("span",null,"Jokes"))),r.a.createElement("li",null,r.a.createElement(ni,{activeClassName:"tab-current",className:"fa fa-eye",to:"/exchange-rates"},r.a.createElement("span",null,"Finance")))))))}}])&&ri(n.prototype,i),a&&ri(n,a),e}(r.a.Component);function ci(t){return(ci="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ui(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function hi(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function fi(t,e){return!e||"object"!==ci(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function di(t){return(di=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function pi(t,e){return(pi=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var gi=function(t){function e(){return ui(this,e),fi(this,di(e).apply(this,arguments))}var n,i,a;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&pi(t,e)}(e,t),n=e,(i=[{key:"render",value:function(){return r.a.createElement("div",{className:"client-app-bottom"},this.props.children)}}])&&hi(n.prototype,i),a&&hi(n,a),e}(r.a.Component),mi=function(t){var e=t.route;return r.a.createElement(r.a.Fragment,null,r.a.createElement(li,{title:"Fun facts"}),r.a.createElement("div",{className:"client-app-container"},r.a.createElement(Nn,null,Ft(e.routes))),r.a.createElement(gi,null))};function vi(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function xi(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}mi.propTypes={route:u.a.objectOf(u.a.any)},mi.defaultProps={route:null};var bi=[function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?vi(Object(n),!0).forEach((function(e){xi(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):vi(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},{component:mi},{routes:[{component:$t,path:"/",exact:!0},{path:"/science",component:Qe},{path:"/jokes",component:re},{path:"/news",component:Ee},{path:"/exchange-rates",component:Pn},{component:Kt}]})],yi=function t(e,n,i){var r;if("function"==typeof n&&"function"==typeof i||"function"==typeof i&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function");if("function"==typeof n&&void 0===i&&(i=n,n=void 0),void 0!==i){if("function"!=typeof i)throw new Error("Expected the enhancer to be a function.");return i(t)(e,n)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var a=e,o=n,s=[],l=s,c=!1;function u(){l===s&&(l=s.slice())}function h(){if(c)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return o}function f(t){if("function"!=typeof t)throw new Error("Expected the listener to be a function.");if(c)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");var e=!0;return u(),l.push(t),function(){if(e){if(c)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");e=!1,u();var n=l.indexOf(t);l.splice(n,1)}}}function d(t){if(!Y(t))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===t.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(c)throw new Error("Reducers may not dispatch actions.");try{c=!0,o=a(o,t)}finally{c=!1}for(var e=s=l,n=0;n<e.length;n++){(0,e[n])()}return t}function p(t){if("function"!=typeof t)throw new Error("Expected the nextReducer to be a function.");a=t,d({type:X.REPLACE})}function g(){var t,e=f;return(t={subscribe:function(t){if("object"!=typeof t||null===t)throw new TypeError("Expected the observer to be an object.");function n(){t.next&&t.next(h())}return n(),{unsubscribe:e(n)}}})[F.a]=function(){return this},t}return d({type:X.INIT}),(r={dispatch:d,subscribe:f,getState:h,replaceReducer:p})[F.a]=g,r}(Xt,{},function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return function(t){return function(){var n=t.apply(void 0,arguments),i=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},r={getState:n.getState,dispatch:function(){return i.apply(void 0,arguments)}},a=e.map((function(t){return t(r)}));return B({},n,{dispatch:i=V.apply(void 0,a)(n.dispatch)})}}}(q));o.a.render(r.a.createElement(Q,{store:yi},r.a.createElement(z,{basename:"/services.html",onUpdate:function(){return window.scrollTo(0,0)}},r.a.createElement("div",{id:"appRoot"},Ft(bi)))),document.querySelectorAll('[data-ui-role="content"]')[0])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,